<?xml version="1.0" encoding="utf-8"?>
<project title="BLW Library" version="2.1.0&#10;">
  <partials/>
  <file path="lib\BLW\YUICompressor.php" generated-path="lib.BLW.YUICompressor.html" hash="2dde7442751808097c2aef158d0992dc" package="Default">
    <docblock line="0">
      <description>YUICompressor.php | Dec 12, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="31" package="BLW\Core">
      <extends>\BLW\Object</extends>
      <name>YUICompressor</name>
      <full_name>\BLW\YUICompressor</full_name>
      <docblock line="31">
        <description>Description.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW object. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="31" description="BLW\Core"/>
        <tag name="api" line="31" description="BLW"/>
        <tag name="version" line="31" description="1.0.0"/>
        <tag name="since" line="31" description="0.1.0"/>
        <tag name="author" line="31" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="31" description="Based On" link="https://github.com/gpbmike/PHP-YUI-Compressor"/>
      </docblock>
      <property static="true" visibility="public" line="39" namespace="BLW" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('JAR' =&gt; NULL, 'TMP' =&gt; NULL, 'Type' =&gt; 'js', 'LineBreak' =&gt; false, 'Verbose' =&gt; false, 'Semicolons' =&gt; false, 'NoMunge' =&gt; false, 'NoOptimize' =&gt; false)</default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="39" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="39" description="BLW"/>
          <tag name="since" line="39" description="0.1.0"/>
          <tag name="see" line="39" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
      <property static="false" visibility="private" line="53" namespace="BLW" package="BLW\Core">
        <name>$Files</name>
        <default>array()</default>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="53" description="&lt;p&gt;Stores all files to add to compressor.&lt;/p&gt;" type="array" variable="$Files">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="58" namespace="BLW" package="BLW\Core">
        <name>$String</name>
        <default>''</default>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="58" description="&lt;p&gt;String content to add to compressor.&lt;/p&gt;" type="string" variable="$String">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" line="63" namespace="BLW" package="BLW\Core">
        <name>$JavaEnabled</name>
        <default>false</default>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="63" description="&lt;p&gt;Whether java existed at class creation.&lt;/p&gt;" type="bool" variable="$JavaEnabled">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="70" package="BLW\Core">
        <name>init</name>
        <full_name>\BLW\YUICompressor::init()</full_name>
        <docblock line="70">
          <description>Initializes a class for subsequent use.</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;Initialization options.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="70" description="Returns Options used / generated during init." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="99" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\YUICompressor::onCreate()</full_name>
        <docblock line="99">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="99" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="99" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="99" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Funtion</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="125" package="BLW\Core">
        <name>AddFile</name>
        <full_name>\BLW\YUICompressor::AddFile()</full_name>
        <docblock line="125">
          <description>Adds a file to YUI compressor.</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;File to add to compressor.&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="throws" line="125" description="If file is not recognized as a file." type="\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="125" description="$this" type="\BLW\YUICompressor">
            <type link="YUICompressor.html">\BLW\YUICompressor</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="141" package="BLW\Core">
        <name>AddString</name>
        <full_name>\BLW\YUICompressor::AddString()</full_name>
        <docblock line="141">
          <description>Adds string content to YUI compressor.</description>
          <long-description></long-description>
          <tag name="param" line="141" description="&lt;p&gt;String to add to compressor.&lt;/p&gt;" type="string" variable="$String">
            <type>string</type>
          </tag>
          <tag name="return" line="141" description="$this." type="\BLW\YUICompressor">
            <type link="YUICompressor.html">\BLW\YUICompressor</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$String</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="156" package="BLW\Core">
        <name>Compress</name>
        <full_name>\BLW\YUICompressor::Compress()</full_name>
        <docblock line="156">
          <description>Executes compression command and returns results</description>
          <long-description></long-description>
          <tag name="return" line="156" description="Returns either compressed string or error output." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="lib\BLW\Object.php" generated-path="lib.BLW.Object.html" hash="afee767ea4d7be8b953a3e3514df0f7b" package="Default">
    <docblock line="0">
      <description>Object.php | Nov 29, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="39" package="BLW\Core">
      <extends>\SplDoublyLinkedList</extends>
      <implements>\BLW\ObjectInterface</implements>
      <name>Object</name>
      <full_name>\BLW\Object</full_name>
      <docblock line="39">
        <description>Core BLW object.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW object. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="39" description="BLW\Core"/>
        <tag name="api" line="39" description="BLW"/>
        <tag name="version" line="39" description="1.0.0"/>
        <tag name="since" line="39" description="0.1.0"/>
        <tag name="author" line="39" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="39" description="mAsT3RpEE's Zone &gt; Projects &gt; BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="public" line="49" namespace="BLW" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array()</default>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="49" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="49" description="BLW"/>
          <tag name="since" line="49" description="0.1.0"/>
          <tag name="see" line="49" description="__construct()" link="\BLW\Object::___construct()"/>
        </docblock>
      </property>
      <property static="true" visibility="public" line="55" namespace="BLW" package="BLW\Core">
        <name>$base</name>
        <default>NULL</default>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="55" description="&lt;p&gt;Pointer to main BLW Object.&lt;/p&gt;" type="\BLW\ObjectInterface" variable="$base">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" line="60" namespace="BLW" package="BLW\Core">
        <name>$self</name>
        <default>NULL</default>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="60" description="&lt;p&gt;Pointer to current context.&lt;/p&gt;" type="\BLW\ObjectInterface" variable="$self">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" line="65" namespace="BLW" package="BLW\Core">
        <name>$Initialized</name>
        <default>false</default>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="65" description="&lt;p&gt;Used to store class information status.&lt;/p&gt;" type="bool" variable="$Initialized">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="72" namespace="BLW" package="BLW\Core">
        <name>$ID</name>
        <default>''</default>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="72" description="&lt;p&gt;Id of the current object amongst it's siblings.&lt;/p&gt;&#10;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="see" line="72" description="GetID()" link="\BLW\Object::GetID()"/>
          <tag name="see" line="72" description="SetID()" link="\BLW\Object::SetID()"/>
        </docblock>
      </property>
      <property static="false" visibility="private" line="77" namespace="BLW" package="BLW\Core">
        <name>$Parent</name>
        <default>NULL</default>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="77" description="&lt;p&gt;Pointer to current object Parent.&lt;/p&gt;" type="\BLW\ObjectInterface" variable="$Parent">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="82" namespace="BLW" package="BLW\Core">
        <name>$Current</name>
        <default>0</default>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="82" description="&lt;p&gt;Index of last child to use with hooks.&lt;/p&gt;" type="int" variable="$Current">
            <type>int</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="87" namespace="BLW" package="BLW\Core">
        <name>$OldID</name>
        <default>''</default>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="87" description="&lt;p&gt;Previous ID of Object.&lt;/p&gt;" type="\BLW\stfing" variable="$OldID">
            <type link="stfing.html">\BLW\stfing</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="92" namespace="BLW" package="BLW\Core">
        <name>$Status</name>
        <default>0</default>
        <docblock line="92">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="92" description="&lt;p&gt;Current status flag of the class.&lt;/p&gt;" type="int" variable="$Status">
            <type>int</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" line="97" namespace="BLW" package="BLW\Core">
        <name>$Options</name>
        <default>NULL</default>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="97" description="&lt;p&gt;Constructor Options&lt;/p&gt;" type="\stdClass" variable="$Options">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="103" namespace="BLW" package="BLW\Core">
        <name>$Hooks</name>
        <default>array('Create' =&gt; NULL, 'SetID' =&gt; NULL, 'Add' =&gt; NULL, 'Update' =&gt; NULL, 'Delete' =&gt; NULL, 'Serialize' =&gt; NULL, 'UnSerialize' =&gt; NULL)</default>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="103" description="&lt;p&gt;Predifined object Hooks.&lt;/p&gt;" type="array" variable="$Hooks">
            <type>array</type>
          </tag>
          <tag name="see" line="103" description="" link="\BLW\Object::on()"/>
        </docblock>
      </property>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="123" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Object::__construct()</full_name>
        <docblock line="123">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="123" description="" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="123" description="&lt;ul&gt;&#13;&#10;&lt;li&gt;If &lt;code&gt;$Options&lt;/code&gt; is of an invalid type.&lt;/li&gt;&#13;&#10;&lt;li&gt;If &lt;code&gt;$Options&lt;/code&gt; contains an invalid value.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="\BLW\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="123" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="184" package="BLW\Core">
        <name>ValidateOptions</name>
        <full_name>\BLW\Object::ValidateOptions()</full_name>
        <docblock line="184">
          <description>Validates options passed to Object::create().</description>
          <long-description></long-description>
          <tag name="see" line="184" description="" link="\BLW\Object::__construct()"/>
          <tag name="param" line="184" description="&lt;p&gt;Options to validate&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="184" description="Return &lt;code&gt;true&lt;/code&gt; if options are valid &lt;code&gt;false&lt;/code&gt; otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="195" package="BLW\Core">
        <name>BuildOptions</name>
        <full_name>\BLW\Object::BuildOptions()</full_name>
        <docblock line="195">
          <description>Builds Options for current object.</description>
          <long-description></long-description>
          <tag name="see" line="195" description="" link="\BLW\Object::__construct()"/>
          <tag name="param" line="195" description="&lt;p&gt;Options to build&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="195" description="Returns built options." type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="210" package="BLW\Core">
        <name>SanitizeLabel</name>
        <full_name>\BLW\Object::SanitizeLabel()</full_name>
        <docblock line="210">
          <description>Sanitize object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="210" description="Raises warning if label is not a string and returns empty string."/>
          <tag name="param" line="210" description="&lt;p&gt;String to sanitize.&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="210" description="Returns the sanitized label." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="223" package="BLW\Core">
        <name>ValidateLabel</name>
        <full_name>\BLW\Object::ValidateLabel()</full_name>
        <docblock line="223">
          <description>Validates that a label is valid.</description>
          <long-description></long-description>
          <tag name="param" line="223" description="&lt;p&gt;String to validate&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="223" description="Return true if label is valid." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="234" package="BLW\Core">
        <name>Nounce</name>
        <full_name>\BLW\Object::Nounce()</full_name>
        <docblock line="234">
          <description>Creates a valid Object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="234" description="Raises warning if Input is not scaler."/>
          <tag name="param" line="234" description="&lt;p&gt;ID can be biased to help regenerate ID's.&lt;/p&gt;&#10;" type="string|int" variable="$Input">
            <type>string</type>
            <type>int</type>
          </tag>
          <tag name="return" line="234" description="Returns the new ID. Returns NULL on errors." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Input</name>
          <default>NULL</default>
          <type>string|int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="252" package="BLW\Core">
        <name>init</name>
        <full_name>\BLW\Object::init()</full_name>
        <docblock line="252">
          <description>Initializes Class for subsequent use.</description>
          <long-description></long-description>
          <tag name="api" line="252" description="BLW"/>
          <tag name="since" line="252" description="0.1.0"/>
          <tag name="param" line="252" description="&lt;p&gt;Optional initialization data.&lt;/p&gt;" type="array" variable="$Data">
            <type>array</type>
          </tag>
          <tag name="return" line="252" description="Returns the options generated. Used by child classes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="285" package="BLW\Core">
        <name>initChild</name>
        <full_name>\BLW\Object::initChild()</full_name>
        <docblock line="285">
          <description>Initializes a child class for subsequent use.</description>
          <long-description></long-description>
          <tag name="api" line="285" description="BLW"/>
          <tag name="since" line="285" description="1.0.0"/>
          <tag name="param" line="285" description="&lt;p&gt;Initialization options. (Automatically adds blw_cfg())&lt;/p&gt;&#10;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="285" description="Returns Options used / generated during init." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="308" package="BLW\Core">
        <name>create</name>
        <full_name>\BLW\Object::create()</full_name>
        <docblock line="308">
          <description>Creates a new instance of the object.</description>
          <long-description></long-description>
          <tag name="api" line="308" description="BLW"/>
          <tag name="since" line="308" description="0.1.0"/>
          <tag name="param" line="308" description="&lt;p&gt;Options to use in initializing class.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="308" description="$thisInterface Returns a new instance of the class." type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="321" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\Object::onCreate()</full_name>
        <docblock line="321">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="api" line="321" description="BLW"/>
          <tag name="since" line="321" description="0.1.0"/>
          <tag name="note" line="321" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="321" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="321" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="350" package="BLW\Core">
        <name>on</name>
        <full_name>\BLW\Object::on()</full_name>
        <docblock line="350">
          <description>Generic hook handler function.</description>
          <long-description></long-description>
          <tag name="api" line="350" description="BLW"/>
          <tag name="since" line="350" description="0.1.0"/>
          <tag name="note" line="350" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="350" description="" type="\BLW\unknown" variable="$Hook">
            <type link="unknown.html">\BLW\unknown</type>
          </tag>
          <tag name="param" line="350" description="" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Hook</name>
          <default></default>
          <type>\BLW\unknown</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="402" package="BLW\Core">
        <name>GetID</name>
        <full_name>\BLW\Object::GetID()</full_name>
        <docblock line="402">
          <description>Fetches the current ID of the object.</description>
          <long-description></long-description>
          <tag name="api" line="402" description="BLW"/>
          <tag name="since" line="402" description="0.1.0"/>
          <tag name="return" line="402" description="Returns the ID of the current class." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="422" package="BLW\Core">
        <name>SetID</name>
        <full_name>\BLW\Object::SetID()</full_name>
        <docblock line="422">
          <description>Changes the ID of the current object.</description>
          <long-description></long-description>
          <tag name="param" line="422" description="&lt;p&gt;New ID to give Object&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="422" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="441" package="BLW\Core">
        <name>onSetID</name>
        <full_name>\BLW\Object::onSetID()</full_name>
        <docblock line="441">
          <description>Hook that is called on change of ID.</description>
          <long-description></long-description>
          <tag name="note" line="441" description="Format is &lt;code&gt;mixed function (string $ID, string $OldID, \BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="throws" line="441" description="If &lt;code&gt;$Function&lt;/code&gt; is not a valid callback." type="\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="441" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="441" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="465" package="BLW\Core">
        <name>GetParent</name>
        <full_name>\BLW\Object::GetParent()</full_name>
        <docblock line="465">
          <description>Retrieves the current parent of the object.</description>
          <long-description></long-description>
          <tag name="return" line="465" description="$thisInterface" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="494" package="BLW\Core">
        <name>ClearParent</name>
        <full_name>\BLW\Object::ClearParent()</full_name>
        <docblock line="494">
          <description>Clears parent of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="494" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="505" package="BLW\Core">
        <name>Status</name>
        <full_name>\BLW\Object::Status()</full_name>
        <docblock line="505">
          <description>Get the current status flag of the object.</description>
          <long-description></long-description>
          <tag name="return" line="505" description="Returns the current status flags of the object." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="514" package="BLW\Core">
        <name>ClearStatus</name>
        <full_name>\BLW\Object::ClearStatus()</full_name>
        <docblock line="514">
          <description>Clears the status flag of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="514" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="525" package="BLW\Core">
        <name>child</name>
        <full_name>\BLW\Object::child()</full_name>
        <docblock line="525">
          <description>Returns the child with current ID.</description>
          <long-description></long-description>
          <tag name="note" line="525" description="Changes the current context to the child."/>
          <tag name="param" line="525" description="&lt;p&gt;Object ID of child to return.&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="525" description="Returns &lt;code&gt;NULL&lt;/code&gt; if parent does not exits." type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="546" package="BLW\Core">
        <name>parent</name>
        <full_name>\BLW\Object::parent()</full_name>
        <docblock line="546">
          <description>Returns the parent of the current object.</description>
          <long-description></long-description>
          <tag name="note" line="546" description="Changes the current context to the parent."/>
          <tag name="return" line="546" description="Returns &lt;code&gt;NULL&lt;/code&gt; if parent does not exits." type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="557" package="BLW\Core">
        <name>each</name>
        <full_name>\BLW\Object::each()</full_name>
        <docblock line="557">
          <description>Calls an anonymous function on each child of the function.</description>
          <long-description></long-description>
          <tag name="note" line="557" description="Function format: &lt;code&gt;mixed funtion ($o, $Index)&lt;/code&gt;"/>
          <tag name="param" line="557" description="&lt;p&gt;Function to call.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="557" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="582" package="BLW\Core">
        <name>walk</name>
        <full_name>\BLW\Object::walk()</full_name>
        <docblock line="582">
          <description>Call an anonymous function on object and all its descendants.</description>
          <long-description></long-description>
          <tag name="note" line="582" description="Parents are called before children."/>
          <tag name="note" line="582" description="Function format: &lt;code&gt;mixed funtion ($o, $Index)&lt;/code&gt;"/>
          <tag name="param" line="582" description="&lt;p&gt;Funtion to call.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="582" description="Array of return values for each iteration of function." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="606" package="BLW\Core">
        <name>onAdd</name>
        <full_name>\BLW\Object::onAdd()</full_name>
        <docblock line="606">
          <description>Hook that is called when a child is added.</description>
          <long-description></long-description>
          <tag name="note" line="606" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o, int $Index)&lt;/code&gt;."/>
          <tag name="param" line="606" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="606" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="635" package="BLW\Core">
        <name>onUpdate</name>
        <full_name>\BLW\Object::onUpdate()</full_name>
        <docblock line="635">
          <description>Hook that is called when a child is changed.</description>
          <long-description></long-description>
          <tag name="note" line="635" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o, int $Index)&lt;/code&gt;."/>
          <tag name="param" line="635" description="&lt;p&gt;Function to call after Child has changed.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="635" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="664" package="BLW\Core">
        <name>onDelete</name>
        <full_name>\BLW\Object::onDelete()</full_name>
        <docblock line="664">
          <description>Hook that is called when a child is deleted.</description>
          <long-description></long-description>
          <tag name="note" line="664" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o, int $Index)&lt;/code&gt;."/>
          <tag name="param" line="664" description="&lt;p&gt;Function to call before Object is deleted.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="664" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="690" package="BLW\Core">
        <name>onSerialize</name>
        <full_name>\BLW\Object::onSerialize()</full_name>
        <docblock line="690">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="note" line="690" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="690" description="&lt;p&gt;Function to call before object is serialized.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="690" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="716" package="BLW\Core">
        <name>onUnSerialize</name>
        <full_name>\BLW\Object::onUnSerialize()</full_name>
        <docblock line="716">
          <description>Hook that is called just after an object is unserialized.</description>
          <long-description></long-description>
          <tag name="note" line="716" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="716" description="&lt;p&gt;Function to call after Object has been unserialized.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="716" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="743" package="BLW\Core">
        <name>Load</name>
        <full_name>\BLW\Object::Load()</full_name>
        <docblock line="743">
          <description>Loads and object data from an &lt;code&gt;obj.xxx.min.php&lt;/code&gt; file.</description>
          <long-description></long-description>
          <tag name="api" line="743" description="BLW"/>
          <tag name="since" line="743" description="0.1.0"/>
          <tag name="param" line="743" description="&lt;p&gt;Custom Data to reinstate class. (Used for info that cannot be serialized)&lt;/p&gt;&#10;" type="string" variable="$Data">
            <type>string</type>
          </tag>
          <tag name="return" line="743" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="759" package="BLW\Core">
        <name>Save</name>
        <full_name>\BLW\Object::Save()</full_name>
        <docblock line="759">
          <description>Saves an element to an obj.xxx.min.php file</description>
          <long-description></long-description>
          <tag name="api" line="759" description="BLW"/>
          <tag name="since" line="759" description="0.1.0"/>
          <tag name="throws" line="759" description="If &lt;code&gt;$File&lt;/code&gt; is not a string." type="\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="759" description="If unable to create / write to file." type="\BLW\FileError">
            <type link="FileError.html">\BLW\FileError</type>
          </tag>
          <tag name="param" line="759" description="&lt;p&gt;File to save the object to.&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="return" line="759" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="lib\BLW\ElementContainer.php" generated-path="lib.BLW.ElementContainer.html" hash="dce461e8bf7ebe0809e2d9bf88b51eb3" package="Default">
    <docblock line="0">
      <description>AjaxElement.php | Dec 10, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="32" package="BLW\Core">
      <extends>\BLW\Element</extends>
      <name>ElementContainer</name>
      <full_name>\BLW\ElementContainer</full_name>
      <docblock line="32">
        <description>Class for elements that contain others.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW DOMobject. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="32" description="BLW\Core"/>
        <tag name="api" line="32" description="BLW"/>
        <tag name="version" line="32" description="1.0.0"/>
        <tag name="since" line="32" description="0.1.0"/>
        <tag name="author" line="32" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <property static="true" visibility="public" line="40" namespace="BLW" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('HTML' =&gt; '&lt;div&gt;&lt;/div&gt;')</default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="40" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="40" description="BLW"/>
          <tag name="since" line="40" description="0.1.0"/>
          <tag name="see" line="40" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="49" package="BLW\Core">
        <name>GetHTML</name>
        <full_name>\BLW\ElementContainer::GetHTML()</full_name>
        <docblock line="49">
          <description>Overloads GetHTML.</description>
          <long-description></long-description>
          <tag name="see" line="49" description="" link="\BLW\Element::GetHTML()"/>
          <tag name="return" line="49" description="HTML output of Form" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9U2FP2zAQ/Zz8ihuqlKTq0pZ+a0tXVjJAAirRIqQJqXKTSxtI7Mh2gIjx33dO0gITLFIS3/n8/N7zefwj3+Z2t922oQ3H9+w5SDFDrn1Kwx84wRD6vQ4c9voDUwHmMxN5KZPNVoMbepAdq+XgOg8CR8FvwdFUmHe5TRQoUcgQIU5SBBMW63sMNWgBeotweb6ENAmRK6SYaVOyLniUYmQQnhK9pfwbTCgiguHV2gry4nwWXC0Cf7fn1GTr4ioM90w/Yznd7U08KO7aOx+mOQsf2Abh58Xt3UzIuvoRpUoEh77f83tVhhV6KyTcslSjhLlWZZEyGD+JejTNmNIDmSP6+mFS7cBZhorQK+gRJLH7LcI44Ri5DmUcz3vRRHiDcoVSCuk6N1yxGIGFISoFIoawUFpk5NtaMlk6nWB1swiuV7fH11fnV6feSKIuJB+92nZB0hZlFgtekoosJ9lc382UWmBKpyDk+/For36WMtopJmFY94KqDycUXDNyX5D9UvlfG8XyxCS+ME0lnOT3/P5HE/cH9F//wopb06OzmhBZj88aeaTgzvBoZu0XG+ipRJnHkGESmJSshNYJxqxI9TzXxE5BE4JoYrIugnUJ9X5JDFxoUKhN95EPSsvCmObvofeam/iDyl0OsWY4r27BcLha7bFcDz7NNou71T8v1tSyoDTT9PtXw1GtzbUtyzlbXl44lnU0AWccJY+Tcdd8nQrFo6O2jC0WkZrTAaWCkXenqM0qv0q/cW3cHA6beaJUFdRtRlxkwjdgZkAUOi+06dFfQmamrGtbDee44KGhCe9gXohpA5NL3Kwk5ildDdc5cP225467jt8y1//7RLON6/nOxDMTB4lyOuC0+q1B65BGOZMfCXagTxqtV5vuQIM/+gtFS4DV</source>
  </file>
  <file path="vendor\guzzle\http\Guzzle\Http\Client.php" generated-path="vendor.guzzle.http.Guzzle.Http.Client.html" hash="d953cec8d27e39b81cdc1644c49411e1" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Guzzle\Http" line="24" package="Default">
      <extends>\Guzzle\Common\AbstractHasDispatcher</extends>
      <implements>\Guzzle\Http\ClientInterface</implements>
      <name>Client</name>
      <full_name>\Guzzle\Http\Client</full_name>
      <docblock line="24">
        <description>HTTP client</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="Guzzle\Http" line="27" package="Default">
        <name>REQUEST_PARAMS</name>
        <full_name>\Guzzle\Http\Client::REQUEST_PARAMS</full_name>
        <value>'request.params'</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="deprecated" line="27" description="Use [request.options][params]"/>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="29" package="Default">
        <name>REQUEST_OPTIONS</name>
        <full_name>\Guzzle\Http\Client::REQUEST_OPTIONS</full_name>
        <value>'request.options'</value>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="30" package="Default">
        <name>CURL_OPTIONS</name>
        <full_name>\Guzzle\Http\Client::CURL_OPTIONS</full_name>
        <value>'curl.options'</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="31" package="Default">
        <name>SSL_CERT_AUTHORITY</name>
        <full_name>\Guzzle\Http\Client::SSL_CERT_AUTHORITY</full_name>
        <value>'ssl.certificate_authority'</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="32" package="Default">
        <name>DISABLE_REDIRECTS</name>
        <full_name>\Guzzle\Http\Client::DISABLE_REDIRECTS</full_name>
        <value>\Guzzle\Http\RedirectPlugin::DISABLE</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" line="35" namespace="Guzzle\Http" package="Default">
        <name>$defaultHeaders</name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;Default HTTP headers to set on each request&lt;/p&gt;" type="\Guzzle\Common\Collection" variable="">
            <type link="Collection.html">\Guzzle\Common\Collection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="38" namespace="Guzzle\Http" package="Default">
        <name>$userAgent</name>
        <default></default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;The user agent string to set on each request&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="41" namespace="Guzzle\Http" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="&lt;p&gt;Parameter object holding configuration data&lt;/p&gt;" type="\Guzzle\Common\Collection" variable="">
            <type link="Collection.html">\Guzzle\Common\Collection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="44" namespace="Guzzle\Http" package="Default">
        <name>$baseUrl</name>
        <default></default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="44" description="&lt;p&gt;Base URL of the client&lt;/p&gt;" type="\Guzzle\Http\Url" variable="">
            <type link="Url.html">\Guzzle\Http\Url</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="47" namespace="Guzzle\Http" package="Default">
        <name>$curlMulti</name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;CurlMulti object used internally&lt;/p&gt;" type="\Guzzle\Http\Curl\CurlMultiInterface" variable="">
            <type link="CurlMultiInterface.html">\Guzzle\Http\Curl\CurlMultiInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="50" namespace="Guzzle\Http" package="Default">
        <name>$uriTemplate</name>
        <default></default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;URI template owned by the client&lt;/p&gt;" type="\Guzzle\Parser\UriTemplate\UriTemplateInterface" variable="">
            <type link="UriTemplateInterface.html">\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="53" namespace="Guzzle\Http" package="Default">
        <name>$requestFactory</name>
        <default></default>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="53" description="&lt;p&gt;Request factory used by the client&lt;/p&gt;" type="\Guzzle\Http\Message\RequestFactoryInterface" variable="">
            <type link="RequestFactoryInterface.html">\Guzzle\Http\Message\RequestFactoryInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Guzzle\Http" line="55" package="Default">
        <name>getAllEvents</name>
        <full_name>\Guzzle\Http\Client::getAllEvents()</full_name>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="66" package="Default">
        <name>__construct</name>
        <full_name>\Guzzle\Http\Client::__construct()</full_name>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="66" description="&lt;p&gt;Base URL of the web service&lt;/p&gt;" type="string" variable="$baseUrl">
            <type>string</type>
          </tag>
          <tag name="param" line="66" description="&lt;p&gt;Configuration settings&lt;/p&gt;" type="array|\Guzzle\Common\Collection" variable="$config">
            <type>array</type>
            <type link="Collection.html">\Guzzle\Common\Collection</type>
          </tag>
          <tag name="throws" line="66" description="if cURL is not installed" type="\Guzzle\Common\Exception\RuntimeException">
            <type link="RuntimeException.html">\Guzzle\Common\Exception\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$baseUrl</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$config</name>
          <default>null</default>
          <type>array|\Guzzle\Common\Collection</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="84" package="Default">
        <name>setConfig</name>
        <full_name>\Guzzle\Http\Client::setConfig()</full_name>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="97" package="Default">
        <name>getConfig</name>
        <full_name>\Guzzle\Http\Client::getConfig()</full_name>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$key</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="110" package="Default">
        <name>setDefaultOption</name>
        <full_name>\Guzzle\Http\Client::setDefaultOption()</full_name>
        <docblock line="110">
          <description>Set a default request option on the client that will be used as a default for each request</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;request.options key (e.g. allow_redirects) or path to a nested key (e.g. headers/foo)&lt;/p&gt;&#10;" type="string" variable="$keyOrPath">
            <type>string</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Value to set&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="110" description="" type="\Guzzle\Http\Client">
            <type>\Guzzle\Http\Client</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0">
          <name>$keyOrPath</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="125" package="Default">
        <name>getDefaultOption</name>
        <full_name>\Guzzle\Http\Client::getDefaultOption()</full_name>
        <docblock line="125">
          <description>Retrieve a default request option from the client</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;request.options key (e.g. allow_redirects) or path to a nested key (e.g. headers/foo)&lt;/p&gt;&#10;" type="string" variable="$keyOrPath">
            <type>string</type>
          </tag>
          <tag name="return" line="125" description="" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$keyOrPath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="132" package="Default">
        <name>setSslVerification</name>
        <full_name>\Guzzle\Http\Client::setSslVerification()</full_name>
        <docblock line="132">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$certificateAuthority</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$verifyPeer</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$verifyHost</name>
          <default>2</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="170" package="Default">
        <name>createRequest</name>
        <full_name>\Guzzle\Http\Client::createRequest()</full_name>
        <docblock line="170">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$method</name>
          <default>'GET'</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="202" package="Default">
        <name>getBaseUrl</name>
        <full_name>\Guzzle\Http\Client::getBaseUrl()</full_name>
        <docblock line="202">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$expand</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="207" package="Default">
        <name>setBaseUrl</name>
        <full_name>\Guzzle\Http\Client::setBaseUrl()</full_name>
        <docblock line="207">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="214" package="Default">
        <name>setUserAgent</name>
        <full_name>\Guzzle\Http\Client::setUserAgent()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$userAgent</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0">
          <name>$includeDefault</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="229" package="Default">
        <name>getDefaultUserAgent</name>
        <full_name>\Guzzle\Http\Client::getDefaultUserAgent()</full_name>
        <docblock line="229">
          <description>Get the default User-Agent string to use with Guzzle</description>
          <long-description></long-description>
          <tag name="return" line="229" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="236" package="Default">
        <name>get</name>
        <full_name>\Guzzle\Http\Client::get()</full_name>
        <docblock line="236">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="244" package="Default">
        <name>head</name>
        <full_name>\Guzzle\Http\Client::head()</full_name>
        <docblock line="244">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="249" package="Default">
        <name>delete</name>
        <full_name>\Guzzle\Http\Client::delete()</full_name>
        <docblock line="249">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="254" package="Default">
        <name>put</name>
        <full_name>\Guzzle\Http\Client::put()</full_name>
        <docblock line="254">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="259" package="Default">
        <name>patch</name>
        <full_name>\Guzzle\Http\Client::patch()</full_name>
        <docblock line="259">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="264" package="Default">
        <name>post</name>
        <full_name>\Guzzle\Http\Client::post()</full_name>
        <docblock line="264">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$postBody</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="269" package="Default">
        <name>options</name>
        <full_name>\Guzzle\Http\Client::options()</full_name>
        <docblock line="269">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="274" package="Default">
        <name>send</name>
        <full_name>\Guzzle\Http\Client::send()</full_name>
        <docblock line="274">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$requests</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="296" package="Default">
        <name>setCurlMulti</name>
        <full_name>\Guzzle\Http\Client::setCurlMulti()</full_name>
        <docblock line="296">
          <description>Set a curl multi object to be used internally by the client for transferring requests.</description>
          <long-description></long-description>
          <tag name="param" line="296" description="&lt;p&gt;Multi object&lt;/p&gt;" type="\Guzzle\Http\Curl\CurlMultiInterface" variable="$curlMulti">
            <type link="CurlMultiInterface.html">\Guzzle\Http\Curl\CurlMultiInterface</type>
          </tag>
          <tag name="return" line="296" description="" type="\Guzzle\Http\Client">
            <type>\Guzzle\Http\Client</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0">
          <name>$curlMulti</name>
          <default></default>
          <type>\Guzzle\Http\Curl\CurlMultiInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="306" package="Default">
        <name>getCurlMulti</name>
        <full_name>\Guzzle\Http\Client::getCurlMulti()</full_name>
        <docblock line="306">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="306" description="" type="\Guzzle\Http\Curl\CurlMultiInterface|\Guzzle\Http\Curl\CurlMultiProxy">
            <type link="CurlMultiInterface.html">\Guzzle\Http\Curl\CurlMultiInterface</type>
            <type link="CurlMultiProxy.html">\Guzzle\Http\Curl\CurlMultiProxy</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="315" package="Default">
        <name>setRequestFactory</name>
        <full_name>\Guzzle\Http\Client::setRequestFactory()</full_name>
        <docblock line="315">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$factory</name>
          <default></default>
          <type>\Guzzle\Http\Message\RequestFactoryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="329" package="Default">
        <name>setUriTemplate</name>
        <full_name>\Guzzle\Http\Client::setUriTemplate()</full_name>
        <docblock line="329">
          <description>Set the URI template expander to use with the client</description>
          <long-description></long-description>
          <tag name="param" line="329" description="&lt;p&gt;URI template expander&lt;/p&gt;" type="\Guzzle\Parser\UriTemplate\UriTemplateInterface" variable="$uriTemplate">
            <type link="UriTemplateInterface.html">\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
          </tag>
          <tag name="return" line="329" description="" type="\Guzzle\Http\Client">
            <type>\Guzzle\Http\Client</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0">
          <name>$uriTemplate</name>
          <default></default>
          <type>\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="344" package="Default">
        <name>preparePharCacert</name>
        <full_name>\Guzzle\Http\Client::preparePharCacert()</full_name>
        <docblock line="344">
          <description>Copy the cacert.pem file from the phar if it is not in the temp folder and validate the MD5 checksum</description>
          <long-description></long-description>
          <tag name="param" line="344" description="&lt;p&gt;Set to false to not perform the MD5 validation&lt;/p&gt;" type="bool" variable="$md5Check">
            <type>bool</type>
          </tag>
          <tag name="return" line="344" description="Returns the path to the extracted cacert" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="344" description="if the file cannot be copied or there is a MD5 mismatch" type="\Guzzle\Common\Exception\RuntimeException">
            <type link="RuntimeException.html">\Guzzle\Common\Exception\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$md5Check</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="369" package="Default">
        <name>expandTemplate</name>
        <full_name>\Guzzle\Http\Client::expandTemplate()</full_name>
        <docblock line="369">
          <description>Expand a URI template while merging client config settings into the template variables</description>
          <long-description></long-description>
          <tag name="param" line="369" description="&lt;p&gt;Template to expand&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="369" description="&lt;p&gt;Variables to inject&lt;/p&gt;" type="array" variable="$variables">
            <type>array</type>
          </tag>
          <tag name="return" line="369" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$variables</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="384" package="Default">
        <name>getUriTemplate</name>
        <full_name>\Guzzle\Http\Client::getUriTemplate()</full_name>
        <docblock line="384">
          <description>Get the URI template expander used by the client</description>
          <long-description></long-description>
          <tag name="return" line="384" description="" type="\Guzzle\Parser\UriTemplate\UriTemplateInterface">
            <type link="UriTemplateInterface.html">\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="400" package="Default">
        <name>sendMultiple</name>
        <full_name>\Guzzle\Http\Client::sendMultiple()</full_name>
        <docblock line="400">
          <description>Send multiple requests in parallel</description>
          <long-description></long-description>
          <tag name="param" line="400" description="&lt;p&gt;Array of RequestInterface objects&lt;/p&gt;" type="array" variable="$requests">
            <type>array</type>
          </tag>
          <tag name="return" line="400" description="Returns an array of Response objects" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$requests</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="425" package="Default">
        <name>prepareRequest</name>
        <full_name>\Guzzle\Http\Client::prepareRequest()</full_name>
        <docblock line="425">
          <description>Prepare a request to be sent from the Client by adding client specific behaviors and properties to the request.</description>
          <long-description></long-description>
          <tag name="param" line="425" description="&lt;p&gt;Request to prepare for the client&lt;/p&gt;" type="\Guzzle\Http\Message\RequestInterface" variable="$request">
            <type link="RequestInterface.html">\Guzzle\Http\Message\RequestInterface</type>
          </tag>
          <tag name="param" line="425" description="&lt;p&gt;Options to apply to the request&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="425" description="" type="\Guzzle\Http\Message\RequestInterface">
            <type link="RequestInterface.html">\Guzzle\Http\Message\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$request</name>
          <default></default>
          <type>\Guzzle\Http\Message\RequestInterface</type>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="458" package="Default">
        <name>initSsl</name>
        <full_name>\Guzzle\Http\Client::initSsl()</full_name>
        <docblock line="458">
          <description>Initializes SSL settings</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="484" package="Default">
        <name>getDefaultHeaders</name>
        <full_name>\Guzzle\Http\Client::getDefaultHeaders()</full_name>
        <docblock line="484">
          <description></description>
          <long-description></long-description>
          <tag name="deprecated" line="484" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="493" package="Default">
        <name>setDefaultHeaders</name>
        <full_name>\Guzzle\Http\Client::setDefaultHeaders()</full_name>
        <docblock line="493">
          <description></description>
          <long-description></long-description>
          <tag name="deprecated" line="493" description=""/>
        </docblock>
        <argument line="0">
          <name>$headers</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="55" code="PPC:ERR-50008">No summary for method getAllEvents()</error>
      <error line="66" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="84" code="PPC:ERR-50015">Argument $config is missing from the Docblock of setConfig()</error>
      <error line="84" code="PPC:ERR-50008">No summary for method setConfig()</error>
      <error line="97" code="PPC:ERR-50015">Argument $key is missing from the Docblock of getConfig()</error>
      <error line="97" code="PPC:ERR-50008">No summary for method getConfig()</error>
      <error line="132" code="PPC:ERR-50015">Argument $certificateAuthority is missing from the Docblock of setSslVerification()</error>
      <error line="132" code="PPC:ERR-50015">Argument $verifyPeer is missing from the Docblock of setSslVerification()</error>
      <error line="132" code="PPC:ERR-50015">Argument $verifyHost is missing from the Docblock of setSslVerification()</error>
      <error line="132" code="PPC:ERR-50008">No summary for method setSslVerification()</error>
      <error line="170" code="PPC:ERR-50015">Argument $method is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50015">Argument $body is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50008">No summary for method createRequest()</error>
      <error line="202" code="PPC:ERR-50015">Argument $expand is missing from the Docblock of getBaseUrl()</error>
      <error line="202" code="PPC:ERR-50008">No summary for method getBaseUrl()</error>
      <error line="207" code="PPC:ERR-50015">Argument $url is missing from the Docblock of setBaseUrl()</error>
      <error line="207" code="PPC:ERR-50008">No summary for method setBaseUrl()</error>
      <error line="214" code="PPC:ERR-50015">Argument $userAgent is missing from the Docblock of setUserAgent()</error>
      <error line="214" code="PPC:ERR-50015">Argument $includeDefault is missing from the Docblock of setUserAgent()</error>
      <error line="214" code="PPC:ERR-50008">No summary for method setUserAgent()</error>
      <error line="236" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of get()</error>
      <error line="236" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of get()</error>
      <error line="236" code="PPC:ERR-50015">Argument $options is missing from the Docblock of get()</error>
      <error line="236" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="244" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of head()</error>
      <error line="244" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of head()</error>
      <error line="244" code="PPC:ERR-50008">No summary for method head()</error>
      <error line="249" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of delete()</error>
      <error line="249" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of delete()</error>
      <error line="249" code="PPC:ERR-50015">Argument $body is missing from the Docblock of delete()</error>
      <error line="249" code="PPC:ERR-50008">No summary for method delete()</error>
      <error line="254" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of put()</error>
      <error line="254" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of put()</error>
      <error line="254" code="PPC:ERR-50015">Argument $body is missing from the Docblock of put()</error>
      <error line="254" code="PPC:ERR-50008">No summary for method put()</error>
      <error line="259" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of patch()</error>
      <error line="259" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of patch()</error>
      <error line="259" code="PPC:ERR-50015">Argument $body is missing from the Docblock of patch()</error>
      <error line="259" code="PPC:ERR-50008">No summary for method patch()</error>
      <error line="264" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of post()</error>
      <error line="264" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of post()</error>
      <error line="264" code="PPC:ERR-50015">Argument $postBody is missing from the Docblock of post()</error>
      <error line="264" code="PPC:ERR-50008">No summary for method post()</error>
      <error line="269" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of options()</error>
      <error line="269" code="PPC:ERR-50008">No summary for method options()</error>
      <error line="274" code="PPC:ERR-50015">Argument $requests is missing from the Docblock of send()</error>
      <error line="274" code="PPC:ERR-50008">No summary for method send()</error>
      <error line="306" code="PPC:ERR-50008">No summary for method getCurlMulti()</error>
      <error line="315" code="PPC:ERR-50008">No summary for method setRequestFactory()</error>
      <error line="484" code="PPC:ERR-50008">No summary for method getDefaultHeaders()</error>
      <error line="493" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of setDefaultHeaders()</error>
      <error line="493" code="PPC:ERR-50008">No summary for method setDefaultHeaders()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="lib\BLW\Compiler.php" generated-path="lib.BLW.Compiler.html" hash="97632f80fbb6b54b245ffc7e66d0bf50" package="Default">
    <docblock line="0">
      <description>Compiler.php | Dec 11, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="30" package="BLW\Core">
      <extends>\BLW\Object</extends>
      <implements>\BLW\ObjectInterface</implements>
      <name>Compiler</name>
      <full_name>\BLW\Compiler</full_name>
      <docblock line="30">
        <description>Builds phar files for blw projects.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW object. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="30" description="BLW\Core"/>
        <tag name="api" line="30" description="BLW"/>
        <tag name="version" line="30" description="1.0.0"/>
        <tag name="since" line="30" description="1.0.0"/>
        <tag name="author" line="30" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <property static="true" visibility="public" line="38" namespace="BLW" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('PHAR' =&gt; 'app.BLW.phar', 'Root' =&gt; NULL)</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="38" description="BLW"/>
          <tag name="since" line="38" description="0.1.0"/>
          <tag name="see" line="38" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="48" package="BLW\Core">
        <name>init</name>
        <full_name>\BLW\Compiler::init()</full_name>
        <docblock line="48">
          <description>Initializes a class for subsequent use.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;Initialization options.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="48" description="Returns Options used / generated during init." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="73" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\Compiler::onCreate()</full_name>
        <docblock line="73">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="73" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="73" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="73" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="100" package="BLW\Core">
        <name>phar</name>
        <full_name>\BLW\Compiler::phar()</full_name>
        <docblock line="100">
          <description>Updates the name of phar file to output</description>
          <long-description></long-description>
          <tag name="param" line="100" description="" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="return" line="100" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="122" package="BLW\Core">
        <name>out</name>
        <full_name>\BLW\Compiler::out()</full_name>
        <docblock line="122">
          <description>Updates the build path.</description>
          <long-description></long-description>
          <tag name="param" line="122" description="" type="string" variable="$Dir">
            <type>string</type>
          </tag>
          <tag name="return" line="122" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Dir</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="145" package="BLW\Core">
        <name>Optimize</name>
        <full_name>\BLW\Compiler::Optimize()</full_name>
        <docblock line="145">
          <description>Optimizes a file and returns the optimized version of the file.</description>
          <long-description></long-description>
          <tag name="param" line="145" description="&lt;p&gt;File to optimize&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="throws" line="145" description="If file is not recognized as a file." type="\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="145" description="Optimized version of the file" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="166" package="BLW\Core">
        <name>run</name>
        <full_name>\BLW\Compiler::run()</full_name>
        <docblock line="166">
          <description>Creates a PHAR archives in the build path.</description>
          <long-description></long-description>
          <tag name="return" line="166" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW" line="263" package="BLW\Core">
        <name>GetLibFiles</name>
        <full_name>\BLW\Compiler::GetLibFiles()</full_name>
        <docblock line="263">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW" line="295" package="BLW\Core">
        <name>GetAppFiles</name>
        <full_name>\BLW\Compiler::GetAppFiles()</full_name>
        <docblock line="295">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW" line="314" package="BLW\Core">
        <name>GetApplications</name>
        <full_name>\BLW\Compiler::GetApplications()</full_name>
        <docblock line="314">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW" line="329" package="BLW\Core">
        <name>GetAssets</name>
        <full_name>\BLW\Compiler::GetAssets()</full_name>
        <docblock line="329">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="lib\BLW\ElementInterface.php" generated-path="lib.BLW.ElementInterface.html" hash="389a5593056225cd7c65278a8619eb8e" package="Default">
    <docblock line="0">
      <description>ElementInterface.php | Dec 01, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW" line="40" package="BLW\Core">
      <extends>\BLW\ObjectInterface</extends>
      <name>ElementInterface</name>
      <full_name>\BLW\ElementInterface</full_name>
      <docblock line="40">
        <description>Core BLW Object Interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Elements must either implement this interface or
extend the &lt;code&gt;\BLW\Element&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="40" description="BLW\Core"/>
        <tag name="api" line="40" description="BLW"/>
        <tag name="since" line="40" description="0.1.0"/>
        <tag name="version" line="40" description="1.0.0"/>
        <tag name="author" line="40" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="40" description="mAsT3RpEE's Zone &gt; Projects &gt; BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="46" package="BLW\Core">
        <name>Document</name>
        <full_name>\BLW\ElementInterface::Document()</full_name>
        <docblock line="46">
          <description>Returns the current elements document or creates one if it doesnt exist.</description>
          <long-description></long-description>
          <tag name="return" line="46" description="Current Object's &lt;code&gt;DOMDocument&lt;/code&gt;." type="\DOMDocument">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="53" package="BLW\Core">
        <name>LoadHTML</name>
        <full_name>\BLW\ElementInterface::LoadHTML()</full_name>
        <docblock line="53">
          <description>Converts HTML string into DOMNodes and ataches them to the object.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;HTML string to load.&lt;/p&gt;" type="string" variable="$HTML">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="$this" type="\BLW\ElementInterface">
            <type link="ElementInterface.html">\BLW\ElementInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$HTML</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="61" package="BLW\Core">
        <name>AddDocument</name>
        <full_name>\BLW\ElementInterface::AddDocument()</full_name>
        <docblock line="61">
          <description>Loads Nodes from a DOMDocument.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="&lt;p&gt;Document to Add to current Object.&lt;/p&gt;" type="\DOMDocument" variable="$Document">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
          <tag name="param" line="61" description="&lt;p&gt;Wheather to load the Entire document or just its body.&lt;/p&gt;" type="string" variable="$isDocument">
            <type>string</type>
          </tag>
          <tag name="return" line="61" description="$this" type="\BLW\ElementInterface">
            <type link="ElementInterface.html">\BLW\ElementInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Document</name>
          <default></default>
          <type>\DOMDocument</type>
        </argument>
        <argument line="0">
          <name>$isDocument</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="68" package="BLW\Core">
        <name>AddNode</name>
        <full_name>\BLW\ElementInterface::AddNode()</full_name>
        <docblock line="68">
          <description>Adds a DOMNode to the current object.</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;Node to Add to Object.&lt;/p&gt;" type="\DOMNode" variable="$Node">
            <type link="DOMNode.html">\DOMNode</type>
          </tag>
          <tag name="return" line="68" description="$this" type="\BLW\ElementInterface">
            <type link="ElementInterface.html">\BLW\ElementInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Node</name>
          <default></default>
          <type>\DOMNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="88" package="BLW\Core">
        <name>filter</name>
        <full_name>\BLW\ElementInterface::filter()</full_name>
        <docblock line="88">
          <description>Filters the list of nodes with a CSS selector.</description>
          <long-description></long-description>
          <tag name="api" line="88" description="BLW"/>
          <tag name="since" line="88" description="1.0.1"/>
          <tag name="link" line="88" description="Symfony &gt; CssSelector" link="http://symfony.com/doc/current/components/css_selector.html"/>
          <tag name="param" line="88" description="&lt;p&gt;A CSS selector&lt;/p&gt;" type="string" variable="$Selector">
            <type>string</type>
          </tag>
          <tag name="return" line="88" description="List of matched nodes." type="\DOMNodeList">
            <type link="DOMNodeList.html">\DOMNodeList</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Selector</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <source>eJy1VWFv2zYQ/Wz/ihsQzHIQSPayT43n2XW8LYDjdHGKDEOAgKZOkRqJ1EhqidH2v/dIibKdOsWAYgZsU+Tx3d17d6fRr2VadqPj4y4cwzzHAoW5EAZVwjiGdAaf4Bw5DIYn8NNgeGrN7Hcmy43KHlIDAe9DMdU3p9flfN7T8LcU6K1u0kyDlpXiCEmWI9jHav0BuQEjwaQIlxc3kGcchUZ6ZsaarCsR5xhbhKfMpLS/heEyJhjh7jrIxcVsvlzNQ+9zYndrY/fI20gPRTnxvikOeo66DRedScn4I3tAeLu4vZtJhW7zX1Q6kwKG4SAcuB1WmVQquGU5kQZXRm+qnMHoSdarScG0OVUlYmgex86DYAVqQnfQZ5AlwQ8xJpnAOOjRTq/f/2go4AdU96iUVEHvvdAsQWCco9YgE+CVNrIg3taKqU3vZH7/fjW/vr+dXi8vlr/3zxSaSomzzz4bsAlYd3BVk7+V2NM2Sn8eL6UhNt6MIlq3++V4mue+NDQU5BqQVKFss6Kst2uFMg8KUtmr+GxQxE6pkZVtfGe5bJBGkdsCnjOtd6JQredDCsCElZndcGudCXI2CIdOC/hKHfDqtMp/QxhbCuIRUmPKN1G0exqVSlrWdESOo6/KCMbwrjGgZR0b1dGWjZdt1RCjwfFRK9Iedj92gT5ON/s5hmsnpnY88kopyzd6OWLJK6cAZckVMoNUIBRTlkBm6BS1tX7OtAk93qSuDrg7v7o899dnDXAdDWVWK7Zj0gjmYSL3X1ZraiBIKsGNZf5H8OZB/8xZdDs2lY6rQUECUcx/3FwuQFONiwdbMxLIy5KwNTAqF2YYT9GlW/ghIV1UoYOhslCs8PePHNguIl3JJYsbY5/rTuVtdTiyZWvtom7nZSYLwrCwgfNAyXS2mdgzDXXIiaJGZLBD1F6YeyQftat2QdFO49j+8T0FDuaa6fbebUpa2x5s0nU0zYXJqM93a+KDbdeMSF/LePO9nFCkrbyHEzvZC/IXSFiucZ88AtE1YZZAr7DP/oDSd970yP36Ww1te3R9T2YWN9j3RYG/1ozCie9eWAWigeeS5IB/KlSbbaO1s6p5rueVnU7Dds+NCcFyeMs0xtS7sNoUZSrFxk8VSxXMFHvKUW2x9yvjT+sYpjBbrUDTcOBGqoMNb9Na0DQA90OvkoIZare4TujbzU0vVor1r3eUaVB7bHrc9fkLon5zxvXUyhtfNWnulc5eCfW/ULY7p/WmSIirkMsiorqPmjqiWVWUNAdpREZc6/vWUWqK3DJsL9G0nmm9ao5eYdYfvyD3/+E2aN0Rs5+/AOv7AOY=</source>
  </file>
  <file path="lib\BLW\ObjectInterface.php" generated-path="lib.BLW.ObjectInterface.html" hash="4a80c166e5e3e7c5b67081b27d09c6de" package="Default">
    <docblock line="0">
      <description>ObjectInterface.php | Nov 29, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW" line="40" package="BLW\Core">
      <extends>\Iterator</extends>
      <extends>\ArrayAccess</extends>
      <extends>\Countable</extends>
      <extends>\SeekableIterator</extends>
      <extends>\Serializable</extends>
      <name>ObjectInterface</name>
      <full_name>\BLW\ObjectInterface</full_name>
      <docblock line="40">
        <description>Core BLW Object Interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Elements must either implement this interface or
extend the &lt;code&gt;\BLW\Element&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="40" description="BLW\Core"/>
        <tag name="api" line="40" description="BLW"/>
        <tag name="since" line="40" description="0.1.0"/>
        <tag name="version" line="40" description="1.0.0"/>
        <tag name="author" line="40" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="40" description="mAsT3RpEE's Zone &gt; Projects &gt; BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <constant namespace="BLW" line="42" package="BLW\Core">
        <name>INVALID_OPTION</name>
        <full_name>\BLW\ObjectInterface::INVALID_OPTION</full_name>
        <value>4096</value>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW" line="43" package="BLW\Core">
        <name>INVALID_CALLBACK</name>
        <full_name>\BLW\ObjectInterface::INVALID_CALLBACK</full_name>
        <value>8192</value>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW" line="44" package="BLW\Core">
        <name>RESERVED_1</name>
        <full_name>\BLW\ObjectInterface::RESERVED_1</full_name>
        <value>16384</value>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW" line="45" package="BLW\Core">
        <name>RESERVED_2</name>
        <full_name>\BLW\ObjectInterface::RESERVED_2</full_name>
        <value>32768</value>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="53" package="BLW\Core">
        <name>SanitizeLabel</name>
        <full_name>\BLW\ObjectInterface::SanitizeLabel()</full_name>
        <docblock line="53">
          <description>Sanitize object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="53" description="Raises warning if label is not a string and returns empty string."/>
          <tag name="param" line="53" description="&lt;p&gt;String to sanitize.&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="Returns the sanitized label." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="61" package="BLW\Core">
        <name>ValidateOptions</name>
        <full_name>\BLW\ObjectInterface::ValidateOptions()</full_name>
        <docblock line="61">
          <description>Validates options passed to Object::create().</description>
          <long-description></long-description>
          <tag name="see" line="61" description="" link="\BLW\Object::__construct()"/>
          <tag name="param" line="61" description="&lt;p&gt;Options to validate&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="61" description="Return &lt;code&gt;true&lt;/code&gt; if options are valid &lt;code&gt;false&lt;/code&gt; otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="77" package="BLW\Core">
        <name>BuildOptions</name>
        <full_name>\BLW\ObjectInterface::BuildOptions()</full_name>
        <docblock line="77">
          <description>Builds Options used by an object.</description>
          <long-description>&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;This has been purposelely made into a static function to limit the
capabilities of this function. If you need more functionallity (such as
access to $this), then create a function to further contruct object
after creation and overload Object::create()&lt;/p&gt;

&lt;hr&gt;</long-description>
          <tag name="param" line="77" description="" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="77" description="Returns built options as an object." type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="84" package="BLW\Core">
        <name>ValidateLabel</name>
        <full_name>\BLW\ObjectInterface::ValidateLabel()</full_name>
        <docblock line="84">
          <description>Validates that a label is valid.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;String to validate&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="84" description="Return &lt;code&gt;true&lt;/code&gt; if label is valid." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="92" package="BLW\Core">
        <name>Nounce</name>
        <full_name>\BLW\ObjectInterface::Nounce()</full_name>
        <docblock line="92">
          <description>Creates a valid Object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="92" description="Raises warning if Input is not scaler."/>
          <tag name="param" line="92" description="&lt;p&gt;ID can be biased to help regenerate ID's.&lt;/p&gt;&#10;" type="string|int" variable="$Input">
            <type>string</type>
            <type>int</type>
          </tag>
          <tag name="return" line="92" description="Returns the new ID. Returns NULL on errors." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Input</name>
          <default>NULL</default>
          <type>string|int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="99" package="BLW\Core">
        <name>init</name>
        <full_name>\BLW\ObjectInterface::init()</full_name>
        <docblock line="99">
          <description>Initializes Class for subsequent use.</description>
          <long-description></long-description>
          <tag name="param" line="99" description="&lt;p&gt;Optional initialization data.&lt;/p&gt;" type="array" variable="$Data">
            <type>array</type>
          </tag>
          <tag name="return" line="99" description="Returns the options generated. Used by child classes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="106" package="BLW\Core">
        <name>create</name>
        <full_name>\BLW\ObjectInterface::create()</full_name>
        <docblock line="106">
          <description>Creates a new instance of the object.</description>
          <long-description></long-description>
          <tag name="param" line="106" description="&lt;p&gt;Options to use in initializing class.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="106" description="Returns a new instance of the class." type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="114" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\ObjectInterface::onCreate()</full_name>
        <docblock line="114">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="114" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="114" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="114" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="120" package="BLW\Core">
        <name>GetID</name>
        <full_name>\BLW\ObjectInterface::GetID()</full_name>
        <docblock line="120">
          <description>Fetches the current ID of the object.</description>
          <long-description></long-description>
          <tag name="return" line="120" description="Returns the ID of the current class." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="127" package="BLW\Core">
        <name>SetID</name>
        <full_name>\BLW\ObjectInterface::SetID()</full_name>
        <docblock line="127">
          <description>Changes the ID of the current object.</description>
          <long-description></long-description>
          <tag name="param" line="127" description="&lt;p&gt;New ID to give Object&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="127" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="135" package="BLW\Core">
        <name>onSetID</name>
        <full_name>\BLW\ObjectInterface::onSetID()</full_name>
        <docblock line="135">
          <description>Hook that is called on change of ID.</description>
          <long-description></long-description>
          <tag name="note" line="135" description="Format is &lt;code&gt;mixed function (string $ID, string $OldID, \BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="135" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="135" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="148" package="BLW\Core">
        <name>GetParent</name>
        <full_name>\BLW\ObjectInterface::GetParent()</full_name>
        <docblock line="148">
          <description>Retrieves the current parent of the object.</description>
          <long-description></long-description>
          <tag name="return" line="148" description="" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="163" package="BLW\Core">
        <name>ClearParent</name>
        <full_name>\BLW\ObjectInterface::ClearParent()</full_name>
        <docblock line="163">
          <description>Clears parent of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="163" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="169" package="BLW\Core">
        <name>Status</name>
        <full_name>\BLW\ObjectInterface::Status()</full_name>
        <docblock line="169">
          <description>Get the current status flag of the object.</description>
          <long-description></long-description>
          <tag name="return" line="169" description="Returns the current status flags of the object." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="175" package="BLW\Core">
        <name>ClearStatus</name>
        <full_name>\BLW\ObjectInterface::ClearStatus()</full_name>
        <docblock line="175">
          <description>Clears the status flag of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="175" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="183" package="BLW\Core">
        <name>child</name>
        <full_name>\BLW\ObjectInterface::child()</full_name>
        <docblock line="183">
          <description>Returns the child with current ID.</description>
          <long-description></long-description>
          <tag name="note" line="183" description="Changes the current context to the child."/>
          <tag name="param" line="183" description="&lt;p&gt;Object ID of child to return.&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="183" description="Returns &lt;code&gt;NULL&lt;/code&gt; if parent does not exits." type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="190" package="BLW\Core">
        <name>parent</name>
        <full_name>\BLW\ObjectInterface::parent()</full_name>
        <docblock line="190">
          <description>Returns the parent of the current object.</description>
          <long-description></long-description>
          <tag name="note" line="190" description="Changes the current context to the parent."/>
          <tag name="return" line="190" description="Returns &lt;code&gt;NULL&lt;/code&gt; if parent does not exits." type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="198" package="BLW\Core">
        <name>each</name>
        <full_name>\BLW\ObjectInterface::each()</full_name>
        <docblock line="198">
          <description>Calls an anonymous function on each child of the function.</description>
          <long-description></long-description>
          <tag name="note" line="198" description="Function format: &lt;code&gt;mixed funtion ($o, $Index)&lt;/code&gt;"/>
          <tag name="param" line="198" description="&lt;p&gt;Function to call.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="198" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="206" package="BLW\Core">
        <name>walk</name>
        <full_name>\BLW\ObjectInterface::walk()</full_name>
        <docblock line="206">
          <description>Call an anonymous function on object and all its descendants.</description>
          <long-description></long-description>
          <tag name="note" line="206" description="Function format: &lt;code&gt;mixed funtion ($o, $Index)&lt;/code&gt;"/>
          <tag name="param" line="206" description="&lt;p&gt;Funtion to call.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="206" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="214" package="BLW\Core">
        <name>onAdd</name>
        <full_name>\BLW\ObjectInterface::onAdd()</full_name>
        <docblock line="214">
          <description>Hook that is called when a child is added.</description>
          <long-description></long-description>
          <tag name="note" line="214" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o, int $Index)&lt;/code&gt;."/>
          <tag name="param" line="214" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="214" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="222" package="BLW\Core">
        <name>onUpdate</name>
        <full_name>\BLW\ObjectInterface::onUpdate()</full_name>
        <docblock line="222">
          <description>Hook that is called when a child is changed.</description>
          <long-description></long-description>
          <tag name="note" line="222" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o, int $Index)&lt;/code&gt;."/>
          <tag name="param" line="222" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="222" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="230" package="BLW\Core">
        <name>onDelete</name>
        <full_name>\BLW\ObjectInterface::onDelete()</full_name>
        <docblock line="230">
          <description>Hook that is called when a child is deleted.</description>
          <long-description></long-description>
          <tag name="note" line="230" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o, int $Index)&lt;/code&gt;."/>
          <tag name="param" line="230" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="230" description="$this" type="\BLW\ObjectInterface">
            <type link="ObjectInterface.html">\BLW\ObjectInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="237" package="BLW\Core">
        <name>Load</name>
        <full_name>\BLW\ObjectInterface::Load()</full_name>
        <docblock line="237">
          <description>Loads and object data from an &lt;code&gt;obj.xxx.min.php&lt;/code&gt; file.</description>
          <long-description></long-description>
          <tag name="param" line="237" description="&lt;p&gt;Custom Data to reinstate class. (Used for info that cannot be serialized)&lt;/p&gt;&#10;" type="string" variable="$Data">
            <type>string</type>
          </tag>
          <tag name="return" line="237" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="246" package="BLW\Core">
        <name>Save</name>
        <full_name>\BLW\ObjectInterface::Save()</full_name>
        <docblock line="246">
          <description>Saves an element to an obj.xxx.min.php file.</description>
          <long-description></long-description>
          <tag name="throws" line="246" description="If &lt;code&gt;$File&lt;/code&gt; is not a string." type="\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="246" description="If unable to create / write to file." type="\BLW\FileError">
            <type link="FileError.html">\BLW\FileError</type>
          </tag>
          <tag name="param" line="246" description="&lt;p&gt;File to save the object to.&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="return" line="246" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </interface>
    <source>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</source>
  </file>
  <file path="app\readme.php" generated-path="app.readme.html" hash="cf08d694e3fce0c1c7f7d213bf874267" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxtTj0LwjAU3Av9D7epRdTqKn6gGQR10E5ubfI0kZqUJkUEf7xpQLu4HNzHu3vzZSWrOBonSRwhQU25eNDIa3hjSxxpOsR0ks6Ci4AbU71qdZMOfT7AY22z2alirGdxMZpCJEAmlYU1Tc0JV1USWtoUd+IOzsBJwmGXoVSctCXPc9dGikaLkkSoeConvdH1cCN8jw7HoXO/27DjmY262RX//ff3t9V30I+3wjiOlosPcchLzA==</source>
  </file>
  <file path="app\APP.run.php" generated-path="app.APP.run.html" hash="01d44e0792661ed200aaeaced4805dad" package="Default">
    <docblock line="0">
      <description>APP.run.php | Dec 16, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <source>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</source>
  </file>
  <file path="lib\BLW\Settings.php" generated-path="lib.BLW.Settings.html" hash="34a50f00402cb6428c730e2b9d283f34" package="Default">
    <docblock line="0">
      <description>Settings.php | Dec 11, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="30" package="BLW\Core">
      <extends>\BLW\Object</extends>
      <implements>\BLW\ObjectInterface</implements>
      <name>Settings</name>
      <full_name>\BLW\Settings</full_name>
      <docblock line="30">
        <description>XXX.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW object. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="30" description="BLW\Core"/>
        <tag name="api" line="30" description="BLW"/>
        <tag name="version" line="30" description="1.0.0"/>
        <tag name="since" line="30" description="0.1.0"/>
        <tag name="author" line="30" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <property static="true" visibility="public" line="38" namespace="BLW" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array()</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="38" description="BLW"/>
          <tag name="since" line="38" description="0.1.0"/>
          <tag name="see" line="38" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
    </class>
    <source>eJyFUu9v2jAQ/Y7E/3CVJpGgKsD4VrqNjkYTUgcSUIGmSsg4F+I1sSP73A51+9/rxPxoq27zB9v3fH5+73yXX8qsbDY67XazAW2YI5GQWxM5FH7DNXLo9c7hY7fXr8+hnkeq3GmxzQgCHkJxZRb9WRnHLQM/lMQ6pZ4WmTBglNUcIRU5QhXazU/kBKSAMoTv4wXkgqM06GJGVcrGyiTHpKZ4FJS5gxMPV4njkfXlmvNmPIon8zg6PTuscJ/uY37U+67W4UGAE1MBnWbjVJFhyfg92yJ8vVnejZTeX3lAbYSS0Iu6UddDzFKmNCxZTqhhSmZncwaXj8rvhgUz1NclYkT3n/fvSFagcS/U9AMQaXCWYCokJkHLIa0wfCKnfIt6jVorHbRupWEpAuMcjQGVAreGVOGKuNFM71rn8fp2Hs/Wy6vZZDz5Fg40ktVy8OelqdVqFf3LHStFhfzVqhHSSe5GvTfej+X9j22eMyf+0GyAvwhlYuCuUjH1/SGKMscCJb2Cx9LVNmXVxz45Lje8pWpUUpkGpjXbwYdrTJnNaVqS025gH4Lax9ZgApsdeCUiBakIDFLVWtwlkLaclI5O3Kea7IHXRTiAiC/1Xlys10e6IIR30cPtjt+UduMaEgwxcstbI5+8wcDnhoNmo/5Z/8sweAY4giNo</source>
  </file>
  <file path="lib\BLW\AjaxElement.php" generated-path="lib.BLW.AjaxElement.html" hash="6218fb43ffdf7292c2d6000b1ff5bcf5" package="Default">
    <docblock line="0">
      <description>AjaxElement.php | Dec 10, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="48" package="BLW\Core">
      <extends>\BLW\Object</extends>
      <implements>\BLW\ElementInterface</implements>
      <name>Element</name>
      <full_name>\BLW\Element</full_name>
      <docblock line="48">
        <description>Core BLW Ajax object.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;I really thought about how to add ajax to objects. I finally resolved
it this way:&lt;/p&gt;

&lt;p&gt;Most CMS have ajax but my system needs to be compatible with all of
them while still allowing for ajax in a stand alone fashion.&lt;/p&gt;

&lt;p&gt;Therefore you must create an ajax element before any headers are sent
just like the header() function in php allowing ajax elements to output
cookies as well as output ajax replies on same url. Simple.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="48" description="BLW\Core"/>
        <tag name="api" line="48" description="BLW"/>
        <tag name="version" line="48" description="1.0.0"/>
        <tag name="since" line="48" description="0.1.0"/>
        <tag name="author" line="48" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="48" description="mAsT3RpEE's Zone &gt; Projects &gt; BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="public" line="56" namespace="BLW" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('HTML' =&gt; '&lt;span&gt;&lt;/span&gt;')</default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="56" description="BLW"/>
          <tag name="since" line="56" description="0.1.0"/>
          <tag name="see" line="56" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="65" package="BLW\Core">
        <name>GetHTML</name>
        <full_name>\BLW\Element::GetHTML()</full_name>
        <docblock line="65">
          <description>Overloads GetHTML.</description>
          <long-description></long-description>
          <tag name="see" line="65" description="" link="\BLW\Element::GetHTML()"/>
          <tag name="return" line="65" description="HTML output of Form" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9VG1v4jgQ/s6vmFshBapeAss3YDl6LLeH1JdTYVXpVAmZZELSJnZkO2Wj3v73m3FCDrrdiwS2x+PHM8884+lvRVJ0gouLDlzA1ZP4tswwR2l9MsM/8BlDGA4u4eNgOGIP4L+FKiqd7hMLvbAP+ZXZjO6L5dIz8LeSyB782ySpAaNKHSLEaYbAy3L3hKEFq8AmCDerDWRpiNIgrYVll10powwjRjikNiH7fzChighGurMO8nq1WN6ul/7xzjlba2e3DNtI34tyfryb4qB10DnyMC9E+Cz2CL9fPzwulK69X1CbVEkY+gN/4CyitInS8CAyixrurKnKTMD0oOrZPBfGjnSB6NvnmbtBihwNoTvoCaRx75cI41Ri1PPI4vX7r5YC3qPeotZK97yv0ogYQYQhGgMqhrA0VuXE204LXXmXy+3X9fJ++3B1f7u6/dKfaLSllpPvnU5Jqa2rPFayoizygtKW9nFhzBozqoLSp/NJmz0nzOE5OYByFWOGeW+ajGZXO1XaaUCzo7GYrUCjyLKKSqNK5luwEyTqwLUWUQSCwWhe4xkfVlRC6c5oKln2Utc8tXXFD6IaT4Pi5IobZSwsbtaQiBes4XZ0RV6BqYzFHCRiZPiKHSslL4RNd6QRpyK6h7hjJNJODoeE1WNsSmbaUodU7iGmUjpYUpigTSEp6oxIg1iYhCrvnwe0SVBjzGRVqoScygIhsWApOFkDYd1LFJBzE7KCBEVEOgJBa0N7jPXER7P0GZ2wa49eH+JShpYFR/FwN7aBnmK7hInqonRQoVLPKRI8MYicnGk260Mai4y3CdSQEqHUmQ/rNC8yPEsu0bOf94EoUjb8pCdMKkndA3943iNt//1PezQ9KZ8hsbYYB8GpQ1Bo5ZQT0N3BD/0MM/ircaBpHV7QCTNBTdM8aYDfLEqSyCOnc1e/RC73mkhnbnxXkjo6pj7tvHaAPtca/HHOgnSitaig+xljUWb2ruA6GWiWoJo1NWAEuwrqMNIYpLJUdcsVDcnB6pJbz2+hW2qb9RmZRxviaQbj8XbbYpFq3rU2hwM3FuWOHj4WuKXhbQ6f6tx69RH6vD83N9cevPk+zcCb0ksmZ9PADZ470J+44S1nd6STTAni/gtaxvN/TKdhfjxuXNqoYV4/aRSxZvnz5lHV9B7+oXT+Xn5t+5zjvbaJNaiFxv2WG4Oq3fM+9PyLfm8aeH6X36FfZ1bse33fm/V540NqvEvwusPuqPuRZgW18VnIlzBsKPheE0HPcHPP5F865kod</source>
  </file>
  <file path="lib\BLW\Element.php" generated-path="lib.BLW.Element.html" hash="25b8da726ffce9332f153b191dc146f3" package="Default">
    <docblock line="0">
      <description>Element.php | Nov 29, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="41" package="BLW\Core">
      <extends>\BLW\Object</extends>
      <implements>\BLW\ElementInterface</implements>
      <name>Element</name>
      <full_name>\BLW\Element</full_name>
      <docblock line="41">
        <description>Core BLW DOM Element object.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW DOMobject. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="41" description="BLW\Core"/>
        <tag name="api" line="41" description="BLW"/>
        <tag name="version" line="41" description="1.0.0"/>
        <tag name="since" line="41" description="0.1.0"/>
        <tag name="author" line="41" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="41" description="mAsT3RpEE's Zone &gt; Projects &gt; BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="public" line="49" namespace="BLW" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('HTML' =&gt; '&lt;span&gt;&lt;/span&gt;', 'DocumentVersion' =&gt; '1.0')</default>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="49" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="49" description="BLW"/>
          <tag name="since" line="49" description="0.1.0"/>
          <tag name="see" line="49" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="65" package="BLW\Core">
        <name>ValidateOptions</name>
        <full_name>\BLW\Element::ValidateOptions()</full_name>
        <docblock line="65">
          <description>Overloads parent function</description>
          <long-description></long-description>
          <tag name="see" line="65" description="Object::ValidateOptions()" link="\BLW\Object::ValidateOptions()"/>
          <tag name="param" line="65" description="&lt;p&gt;Options to validate&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="65" description="Return &lt;code&gt;true&lt;/code&gt; if options are valid &lt;code&gt;false&lt;/code&gt; otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="76" package="BLW\Core">
        <name>BuildOptions</name>
        <full_name>\BLW\Element::BuildOptions()</full_name>
        <docblock line="76">
          <description>Builds Options for current object.</description>
          <long-description></long-description>
          <tag name="see" line="76" description="Objecct::__contruct()" link="\BLW\Object::__construct()"/>
          <tag name="param" line="76" description="&lt;p&gt;Options to build&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="76" description="Returns built options." type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="108" package="BLW\Core">
        <name>initChild</name>
        <full_name>\BLW\Element::initChild()</full_name>
        <docblock line="108">
          <description>Initializes a child class for subsequent use.</description>
          <long-description></long-description>
          <tag name="param" line="108" description="&lt;p&gt;Initialization options. (Automatically adds blw_cfg())&lt;/p&gt;&#10;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="108" description="Returns Options used / generated during init." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW" line="148" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\Element::onCreate()</full_name>
        <docblock line="148">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="148" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="148" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="148" description="Current object" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="212" package="BLW\Core">
        <name>onSerialize</name>
        <full_name>\BLW\Element::onSerialize()</full_name>
        <docblock line="212">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="note" line="212" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="212" description="&lt;p&gt;Function to call before object is serialized.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="212" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="240" package="BLW\Core">
        <name>onUnSerialize</name>
        <full_name>\BLW\Element::onUnSerialize()</full_name>
        <docblock line="240">
          <description>Hook that is called just after an object is unserialized.</description>
          <long-description></long-description>
          <tag name="note" line="240" description="Format is &lt;code&gt;mixed function (\BLW\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="240" description="&lt;p&gt;Function to call after Object has been unserialized.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="240" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="267" package="BLW\Core">
        <name>Document</name>
        <full_name>\BLW\Element::Document()</full_name>
        <docblock line="267">
          <description>Returns the current elements document or creates one if it doesnt exist.</description>
          <long-description></long-description>
          <tag name="api" line="267" description="BLW"/>
          <tag name="since" line="267" description="1.0.0"/>
          <tag name="return" line="267" description="Current Object's &lt;code&gt;DOMDocument&lt;/code&gt;." type="\DOMDocument">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="288" package="BLW\Core">
        <name>LoadHTML</name>
        <full_name>\BLW\Element::LoadHTML()</full_name>
        <docblock line="288">
          <description>Converts HTML string into DOMNodes and ataches them to the object.</description>
          <long-description></long-description>
          <tag name="api" line="288" description="BLW"/>
          <tag name="since" line="288" description="1.0.0"/>
          <tag name="param" line="288" description="&lt;p&gt;HTML string to load.&lt;/p&gt;" type="string" variable="$HTML">
            <type>string</type>
          </tag>
          <tag name="return" line="288" description="$this" type="\BLW\Element">
            <type link="Element.html">\BLW\Element</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$HTML</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="342" package="BLW\Core">
        <name>AddDocument</name>
        <full_name>\BLW\Element::AddDocument()</full_name>
        <docblock line="342">
          <description>Loads Nodes from a DOMDocument.</description>
          <long-description></long-description>
          <tag name="api" line="342" description="BLW"/>
          <tag name="since" line="342" description="1.0.0"/>
          <tag name="param" line="342" description="&lt;p&gt;Document to Add to current Object.&lt;/p&gt;" type="\DOMDocument" variable="$Document">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
          <tag name="param" line="342" description="&lt;p&gt;Wheather to load the Entire document or just its body.&lt;/p&gt;" type="string" variable="$isDocument">
            <type>string</type>
          </tag>
          <tag name="return" line="342" description="$this" type="\BLW\Element">
            <type link="Element.html">\BLW\Element</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Document</name>
          <default></default>
          <type>\DOMDocument</type>
        </argument>
        <argument line="0">
          <name>$isDocument</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW" line="364" package="BLW\Core">
        <name>AddNode</name>
        <full_name>\BLW\Element::AddNode()</full_name>
        <docblock line="364">
          <description>Adds a DOMNode to the current object.</description>
          <long-description></long-description>
          <tag name="api" line="364" description="BLW"/>
          <tag name="since" line="364" description="1.0.0"/>
          <tag name="param" line="364" description="&lt;p&gt;Node to Add to Object.&lt;/p&gt;" type="\DOMNode" variable="$Node">
            <type link="DOMNode.html">\DOMNode</type>
          </tag>
          <tag name="return" line="364" description="$this" type="\BLW\Element">
            <type link="Element.html">\BLW\Element</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Node</name>
          <default></default>
          <type>\DOMNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="391" package="BLW\Core">
        <name>GetHTML</name>
        <full_name>\BLW\Element::GetHTML()</full_name>
        <docblock line="391">
          <description>Returns HTML of current element.</description>
          <long-description></long-description>
          <tag name="api" line="391" description="BLW"/>
          <tag name="since" line="391" description="1.0.1"/>
          <tag name="throws" line="391" description="When current node list is empty." type="\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="391" description="The node html" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="447" package="BLW\Core">
        <name>PrintHTML</name>
        <full_name>\BLW\Element::PrintHTML()</full_name>
        <docblock line="447">
          <description>Echos element. (Needed for chaining)</description>
          <long-description></long-description>
          <tag name="api" line="447" description="BLW"/>
          <tag name="since" line="447" description="1.0.1"/>
          <tag name="param" line="447" description="&lt;p&gt;Whether object is a document element.&lt;/p&gt;" type="bool" variable="$isDocument">
            <type>bool</type>
          </tag>
          <tag name="return" line="447" description="$this" type="\BLW\Element">
            <type link="Element.html">\BLW\Element</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$isDocument</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="462" package="BLW\Core">
        <name>tag</name>
        <full_name>\BLW\Element::tag()</full_name>
        <docblock line="462">
          <description>Set / Get Current elements tag.</description>
          <long-description></long-description>
          <tag name="note" line="462" description="Raises &lt;code&gt;E_USER_ERROR&lt;/code&gt; if default node does not exist."/>
          <tag name="param" line="462" description="&lt;p&gt;New tag name. (&lt;code&gt;[A-Za-z][\w_-]*&lt;/code&gt;)&lt;/p&gt;&#10;" type="string" variable="$Tag">
            <type>string</type>
          </tag>
          <tag name="return" line="462" description="| \BLW\Element Returns current tagName string or $this" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Tag</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="545" package="BLW\Core">
        <name>filter</name>
        <full_name>\BLW\Element::filter()</full_name>
        <docblock line="545">
          <description>Filters the list of nodes with a CSS selector.</description>
          <long-description></long-description>
          <tag name="api" line="545" description="BLW"/>
          <tag name="since" line="545" description="1.0.1"/>
          <tag name="link" line="545" description="Symfony &gt; CssSelector" link="http://symfony.com/doc/current/components/css_selector.html"/>
          <tag name="param" line="545" description="&lt;p&gt;A CSS selector&lt;/p&gt;" type="string" variable="$Selector">
            <type>string</type>
          </tag>
          <tag name="return" line="545" description="List of matched nodes." type="\DOMNodeList">
            <type link="DOMNodeList.html">\DOMNodeList</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Selector</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="lib\BLW\InvalidClassException.php" generated-path="lib.BLW.InvalidClassException.html" hash="d23596aef8c54fa4b16754ba7321cdf0" package="Default">
    <docblock line="0">
      <description>InvalidClassException.php | 20 Nov 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="37" package="BLW\Core">
      <extends>\LogicException</extends>
      <name>InvalidClassException</name>
      <full_name>\BLW\InvalidClassException</full_name>
      <docblock line="37">
        <description>Makes reporting errors just easy.</description>
        <long-description></long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="version" line="37" description="1.0.0"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="PHP Reference &gt; LogicException Class" link="http://php.net/LogicException"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="55" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\InvalidClassException::__construct()</full_name>
        <docblock line="55">
          <description>Overloads parent constructor</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;The argument that is invalid.&lt;/p&gt;" type="int" variable="$argno">
            <type>int</type>
          </tag>
          <tag name="param" line="55" description="&lt;ul&gt;&#10;&lt;li&gt;&lt;b&gt;%header%&lt;/b&gt;: &lt;code&gt;class::function(arguments):&lt;/code&gt; &lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%status%&lt;/b&gt;: Status code of current object.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%args%&lt;/b&gt;: All arguments as a string.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%class%&lt;/b&gt;: Class of of function.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%func%&lt;/b&gt;: Function with invalid argument.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;" type="\BLW\name" variable="$message">
            <type link="name.html">\BLW\name</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Exception code.&lt;/p&gt;" type="int" variable="$code">
            <type>int</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Previous Exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type link="Exception.html">\Exception</type>
          </tag>
          <tag name="return" line="55" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$message</name>
          <default>'%header% Current class is currupted. Status: %status%.'</default>
          <type>\BLW\name</type>
        </argument>
        <argument line="0">
          <name>$code</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$previous</name>
          <default>NULL</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <source>eJyVVW1v2kgQ/nz8iqmUyHaO2kmjfjGEkkP0LhKlUV4U6RKEFnsAN8Zr7a5pUa///WZfbCjloouFwLs788zMM88s3Q/lsmxFJyctOIGrYs3yLB3kTMrhtwRLlfEiJAP4B96dwpiv6efsnEy19YCXG5Etlgr8JIDVpbw7vymHQ0/C37xAZ3S3zCRIXokEYZ7lCHpZzb5gokBxUEuET1d3kGcJFhJpzZQ2mVVFmmOqEb5makn7W5iEpwRTGF8DOboaDMe3w9CF7OtNa2uWSZPngRyhX4emNGgdtWoy+iVLntkC4Y/Rg1mvUUjiA87C0/DU7LBKLbmAB5YrFPBZyU2VM+h+5fatv2JSnYsSMVTPPQtesBVKQjawHcjm/psU51mBqe/RjhcE3xUlu0AxRSG48L37QrI5AksSlBL4HJJKKr4iymaCiY3XHk7vb4c304fLm/HV+M+gI1BVouj8aLUqKqvpY6ep7BN7RgkCSy5UVizABJLwhXABmdw0RO4w8DTgwvLFyuwFSmRWUG2/UNQw/wI7rhvFMyyVKuMoIuGFBapoxBdZ0tQB139dww3OUaAO1YO9Y6NeS3aiXw+rGvCbwiKV8PSze+t7C+gxTOnnBD5TkTlnZFoyCqlIf4VUokoUF86mNiXCBFuRNhUcMbEoOMmfOicW1Uo71uLObELhnpuWBhyRPCRxXp91q7zXvOdZrzvrHS+RpSiOu9GsF0NXj0PPVBrH86pIdBV+HVMGcTcyFtCNyH0fSiqmKumgbs3CzpfRmTD1cjOt4UF/ilN7X+Z5U6oERh8gmkhfhz1Nxs7VtEaHpE9dwmEvfeqcPjpDe0E4TpsM9tyjHRp3u2Rq3YpCL/fb8rQ9PioFrjNOHF3XL9trsnGz8wdrnqVuLzK/ZTWju6YpEKbTRkl+3Xa4AK/uLwxcA6yMSTi6I1WpMA1dr2KoOxh6bVfNBZy24VDOFzC+H40Ck4tVuX6OUpxVC6BT8zKd0cwrQReUH3S2RrrPv10AYS2mdHHk+tyLnuTvEcX1gL7oUqda/JI6rqbCt7CPZ5NHT/t6kzZQpRi04X0b3p4Fu+DmEtcZZFKiql3fTYLGRD8foDl49LSLN/npPIadmHvnO8HognltMO3yUrC9851g264SN1vi6g5r7twgxLHVtm9HKoh1P5178D8QnQzIazczO7re5G3P6sUPXodqctGYTgKv87aVGff+TlJmWwviNViGHJvJLlY9TP8B9ytuSMBGo3PfgwGjf8gUZhsaI6BZMdo4Ts0saQW1rVwOAdr/gjg+NMRuEtvb2XMIP1r0p+yuh86/+jvWPQ==</source>
  </file>
  <file path="lib\BLW\InvalidArgumentException.php" generated-path="lib.BLW.InvalidArgumentException.html" hash="457548efc7478cf873a0dbbbfbe60f8f" package="Default">
    <docblock line="0">
      <description>InvalidArgumentException.php | Dec 2, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW" line="35" package="BLW\Core">
      <extends>\InvalidArgumentException</extends>
      <name>InvalidArgumentException</name>
      <full_name>\BLW\InvalidArgumentException</full_name>
      <docblock line="35">
        <description>Makes reporting errors just easy.</description>
        <long-description></long-description>
        <tag name="package" line="35" description="BLW\Core"/>
        <tag name="api" line="35" description="BLW"/>
        <tag name="version" line="35" description="1.0.0"/>
        <tag name="since" line="35" description="1.0.0"/>
        <tag name="author" line="35" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="35" description="PHP Reference &gt; InvalidArgumentException Class" link="http://php.net/InvalidArgumentException"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW" line="53" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\InvalidArgumentException::__construct()</full_name>
        <docblock line="53">
          <description>Overloads parent constructor</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;The argument that is invalid.&lt;/p&gt;" type="int" variable="$argno">
            <type>int</type>
          </tag>
          <tag name="param" line="53" description="&lt;ul&gt;&#10;&lt;li&gt;&lt;b&gt;%header%&lt;/b&gt;: &lt;code&gt;class::function(arguments):&lt;/code&gt;.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%argno%&lt;/b&gt;: Invalid argument position.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%args%&lt;/b&gt;: All arguments as a string.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%class%&lt;/b&gt;: Class of of function.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%func%&lt;/b&gt;: Function with invalid argument.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="53" description="&lt;p&gt;Exception code.&lt;/p&gt;" type="int" variable="$code">
            <type>int</type>
          </tag>
          <tag name="param" line="53" description="&lt;p&gt;Previous Exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type link="Exception.html">\Exception</type>
          </tag>
          <tag name="return" line="53" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$argno</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$message</name>
          <default>'%header% Argument %argno% is invalid.'</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$code</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$previous</name>
          <default>NULL</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <source>eJyVVW1v2zYQ/lz/iiuQQFKmWXlBv8iO68xztwBpGqQJAiwJDFo622pkUiCptEbX/74jRUmuaweL4Ngieffc3XMPL/33xaLoRAcHHTiAc/7M8iw9k/NyiVyPvyVY6EzwLtnAv/AnJnAcwvHh0YmxNn8jUaxkNl9o8JMAlmfq5uS6GI89Bf8IjrXVzSJToEQpE4RZliOYZTn9gokGLUAvED6e30CeJcgV0pppYzIteZpjahC+ZnpB+y1MIlKC4dbXQl6cj8aXn8fdOubQ7FbGdpk0mW7LcljHpjxoHXVqSoYFS57YHOGPizu7fkapiBI46h52D+0OK/VCSLhjuUYJn7RalTmD/ldRvQ2XTOkTWSB29dOgAudsiYqQLWwPspn/NsVZxjH1PdrxguC7pmTnKCcopZC+d8sVmyGwJEGlQMwgKZUWS+JsKplceeF4cvt5fD25O7u+PL/8K+hJ1KXkvR9NJR/ZEyqQWAipMz4HC6zgC+EAMrUyzG1W/DASsuKHFdkLFKiMUy2/UNIw/QIbjn3+BAutiziKSGtdjjraJUa4+vsKrnGGEk3QwU7VwihnSlWEJ+Z1tyV+08hTBQ+7LDrfO0CPpdI8B/CJWMgFI6eCUSaaFMmVlmWihXQ2tSkxKtmS1Kphj8k5F3QhqJUuRiP3rIrd3XAjUNOuPVKMorbUp/0yHzTveTboTwf7C2Qpyv1+NB3E0DdXZGALj+NZyRNTh19HVUHcj6xFtx+R+yaUzdMhOVLajAuhMjsXdrkq53mW542XAkYfV852T5usc7XNM0KnT539di9z6pw+OMNqXmQbeW+4R2sMrrfIjpZWG2a52ZOH9nivkPiciVLBVf3Szs3GrbqN8Cyy1O1F9rcopzR5mgJhMmlk5FdaCZvOwyl4dYuhVii4Tq0LyAtdEadwGG7P9RQuby8uAptDJW3z7KU4LedvTsH+TqY0CLSkKeUHvdbGtJdMCGo+oWmSm3MvelC/RRTXA/qi0U4l+AU1Wk+kX6HeHz3ee8bXewyBCsQghHch/H4UrIPbUQ6UXqYU6tr1+DFoTMzzHpqDe8+4eI8/ncewFnPjfC0YTZ3XBjMuLwXbOF8L1jaRuGmJqxvqhW88p/84riTtVzcpiL1WA8H/QKwEQYBD2idFOCEFr0ZRBsT2+3WuVRkmgTVm7Kbp/WuQLA8bQPVd2YH1K2iXUK0WZ74HI1YqTGG6gn2aLhysBvarO2OUElay2AZYzfk4/umOuiDuxoXtFXMIPzr0H9jd/t5/sfHVGg==</source>
  </file>
  <package name="BLW" full_name="BLW">
    <package name="Core" full_name="BLW\Core"/>
  </package>
  <package name="Default" full_name="Default"/>
  <namespace name="BLW" full_name="BLW"/>
  <namespace name="Guzzle" full_name="Guzzle">
    <namespace name="Http" full_name="Guzzle\Http"/>
  </namespace>
  <deprecated count="3"/>
</project>
