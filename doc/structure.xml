<?xml version="1.0" encoding="utf-8"?>
<project title="BLW Library" version="2.1.0&#10;">
  <partials/>
  <file path="src\BLW\Interfaces\Object.php" generated-path="src.BLW.Interfaces.Object.html" hash="b02a9b1bd0f7937da75df5debef4f322" package="Default">
    <docblock line="0">
      <description>Object.php | Nov 29, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\Serializable</extends>
      <name>Object</name>
      <full_name>\BLW\Interfaces\Object</full_name>
      <docblock line="37">
        <description>Core BLW Object Interface.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;All Objects must either implement this interface or
extend the &lt;code&gt;\BLW\Type\Object&lt;/code&gt; class.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="0.1.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <constant namespace="BLW\Interfaces" line="40" package="BLW\Core">
        <name>INVALID_OPTION</name>
        <full_name>\BLW\Interfaces\Object::INVALID_OPTION</full_name>
        <value>4096</value>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Interfaces" line="41" package="BLW\Core">
        <name>INVALID_CALLBACK</name>
        <full_name>\BLW\Interfaces\Object::INVALID_CALLBACK</full_name>
        <value>8192</value>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Interfaces" line="42" package="BLW\Core">
        <name>RESERVED_1</name>
        <full_name>\BLW\Interfaces\Object::RESERVED_1</full_name>
        <value>16384</value>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Interfaces" line="43" package="BLW\Core">
        <name>RESERVED_2</name>
        <full_name>\BLW\Interfaces\Object::RESERVED_2</full_name>
        <value>32768</value>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="55" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Interfaces\Object::__construct()</full_name>
        <docblock line="55">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="throws" line="55" description="&lt;ul&gt;&#13;&#10;&lt;li&gt;If &lt;code&gt;$Options&lt;/code&gt; is of an invalid type.&lt;/li&gt;&#13;&#10;&lt;li&gt;If &lt;code&gt;$Options&lt;/code&gt; contains an invalid value.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Constructor Options&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="55" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="63" package="BLW\Core">
        <name>ValidateOptions</name>
        <full_name>\BLW\Interfaces\Object::ValidateOptions()</full_name>
        <docblock line="63">
          <description>Validates options passed to Object::__construct().</description>
          <long-description></long-description>
          <tag name="see" line="63" description="" link="\BLW\Type\Object::__construct()"/>
          <tag name="param" line="63" description="&lt;p&gt;Options to validate&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="63" description="Return &lt;code&gt;true&lt;/code&gt; if options are valid &lt;code&gt;false&lt;/code&gt; otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="79" package="BLW\Core">
        <name>BuildOptions</name>
        <full_name>\BLW\Interfaces\Object::BuildOptions()</full_name>
        <docblock line="79">
          <description>Builds Options used by an object.</description>
          <long-description>&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;This has been purposelely made into a static function to limit the
capabilities of this function. If you need more functionallity (such as
access to &lt;code&gt;$this&lt;/code&gt;), then overload
&lt;code&gt;Object::onCreate()&lt;/code&gt; method.&lt;/p&gt;

&lt;hr&gt;</long-description>
          <tag name="param" line="79" description="&lt;p&gt;Options to build&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="79" description="Returns built options as an object." type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="87" package="BLW\Core">
        <name>SanitizeLabel</name>
        <full_name>\BLW\Interfaces\Object::SanitizeLabel()</full_name>
        <docblock line="87">
          <description>Sanitize object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="87" description="Raises warning if label is not a string and returns empty string."/>
          <tag name="param" line="87" description="&lt;p&gt;String to sanitize.&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="87" description="Returns the sanitized label." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="94" package="BLW\Core">
        <name>ValidateLabel</name>
        <full_name>\BLW\Interfaces\Object::ValidateLabel()</full_name>
        <docblock line="94">
          <description>Validates that a label is valid.</description>
          <long-description></long-description>
          <tag name="param" line="94" description="&lt;p&gt;String to validate&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="94" description="Return &lt;code&gt;true&lt;/code&gt; if label is valid." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="102" package="BLW\Core">
        <name>BuildLabel</name>
        <full_name>\BLW\Interfaces\Object::BuildLabel()</full_name>
        <docblock line="102">
          <description>Creates a valid Object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="102" description="Raises warning if Input is not scaler."/>
          <tag name="param" line="102" description="&lt;p&gt;Input can be biased to help regenerate ID's.&lt;/p&gt;&#10;" type="string|int" variable="$Input">
            <type>string</type>
            <type>int</type>
          </tag>
          <tag name="return" line="102" description="Returns the new ID. Returns &lt;code&gt;NULL&lt;/code&gt; on errors." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Input</name>
          <default>NULL</default>
          <type>string|int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="111" package="BLW\Core">
        <name>Initialize</name>
        <full_name>\BLW\Interfaces\Object::Initialize()</full_name>
        <docblock line="111">
          <description>Initializes Class for subsequent use.</description>
          <long-description></long-description>
          <tag name="api" line="111" description="BLW"/>
          <tag name="since" line="111" description="0.1.0"/>
          <tag name="param" line="111" description="&lt;p&gt;Optional initialization data.&lt;/p&gt;" type="array" variable="$Data">
            <type>array</type>
          </tag>
          <tag name="return" line="111" description="Returns the options generated. Used by child classes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="120" package="BLW\Core">
        <name>GetInstance</name>
        <full_name>\BLW\Interfaces\Object::GetInstance()</full_name>
        <docblock line="120">
          <description>Creates a new instance of the object.</description>
          <long-description></long-description>
          <tag name="api" line="120" description="BLW"/>
          <tag name="since" line="120" description="0.1.0"/>
          <tag name="param" line="120" description="&lt;p&gt;Options to use in initializing class.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="120" description="Returns a new instance of the class." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="128" package="BLW\Core">
        <name>GetID</name>
        <full_name>\BLW\Interfaces\Object::GetID()</full_name>
        <docblock line="128">
          <description>Fetches the current ID of the object.</description>
          <long-description></long-description>
          <tag name="api" line="128" description="BLW"/>
          <tag name="since" line="128" description="0.1.0"/>
          <tag name="return" line="128" description="Returns the ID of the current class." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="135" package="BLW\Core">
        <name>SetID</name>
        <full_name>\BLW\Interfaces\Object::SetID()</full_name>
        <docblock line="135">
          <description>Changes the ID of the current object.</description>
          <long-description></long-description>
          <tag name="param" line="135" description="&lt;p&gt;New ID to give Object&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="135" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="148" package="BLW\Core">
        <name>GetParent</name>
        <full_name>\BLW\Interfaces\Object::GetParent()</full_name>
        <docblock line="148">
          <description>Retrieves the current parent of the object.</description>
          <long-description></long-description>
          <tag name="return" line="148" description="Returns &lt;code&gt;NULL&lt;/code&gt; if no parent is set." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="163" package="BLW\Core">
        <name>ClearParent</name>
        <full_name>\BLW\Interfaces\Object::ClearParent()</full_name>
        <docblock line="163">
          <description>Clears parent of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="163" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="169" package="BLW\Core">
        <name>Status</name>
        <full_name>\BLW\Interfaces\Object::Status()</full_name>
        <docblock line="169">
          <description>Get the current status flag of the object.</description>
          <long-description></long-description>
          <tag name="return" line="169" description="Returns the current status flags of the object." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="175" package="BLW\Core">
        <name>ClearStatus</name>
        <full_name>\BLW\Interfaces\Object::ClearStatus()</full_name>
        <docblock line="175">
          <description>Clears the status flag of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="175" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="182" package="BLW\Core">
        <name>parent</name>
        <full_name>\BLW\Interfaces\Object::parent()</full_name>
        <docblock line="182">
          <description>Returns the parent of the current object.</description>
          <long-description></long-description>
          <tag name="note" line="182" description="Changes the current context to the parent."/>
          <tag name="return" line="182" description="Returns &lt;code&gt;NULL&lt;/code&gt; if parent does not exits." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="191" package="BLW\Core">
        <name>Load</name>
        <full_name>\BLW\Interfaces\Object::Load()</full_name>
        <docblock line="191">
          <description>Loads and object data from an &lt;code&gt;obj.xxx.min.php&lt;/code&gt; file.</description>
          <long-description></long-description>
          <tag name="api" line="191" description="BLW"/>
          <tag name="since" line="191" description="0.1.0"/>
          <tag name="param" line="191" description="&lt;p&gt;Custom Data to reinstate class. (Used for info that cannot be serialized)&lt;/p&gt;&#10;" type="string" variable="$Data">
            <type>string</type>
          </tag>
          <tag name="return" line="191" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="202" package="BLW\Core">
        <name>Save</name>
        <full_name>\BLW\Interfaces\Object::Save()</full_name>
        <docblock line="202">
          <description>Saves an element to an obj.xxx.min.php file.</description>
          <long-description></long-description>
          <tag name="api" line="202" description="BLW"/>
          <tag name="since" line="202" description="0.1.0"/>
          <tag name="throws" line="202" description="If &lt;code&gt;$File&lt;/code&gt; is not a string." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="202" description="If unable to create / write to file." type="\BLW\FileError">
            <type link="FileError.html">\BLW\FileError</type>
          </tag>
          <tag name="param" line="202" description="&lt;p&gt;File to save the object to.&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="return" line="202" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="208" package="BLW\Core">
        <name>GetMediator</name>
        <full_name>\BLW\Interfaces\Object::GetMediator()</full_name>
        <docblock line="208">
          <description>Gets mediator object associated with the class.</description>
          <long-description></long-description>
          <tag name="return" line="208" description="Returns &lt;code&gt;NULL&lt;/code&gt; if no mediator exists." type="\BLW\Interfaces\Mediator">
            <type link="Mediator.html">\BLW\Interfaces\Mediator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="216" package="BLW\Core">
        <name>SetMediator</name>
        <full_name>\BLW\Interfaces\Object::SetMediator()</full_name>
        <docblock line="216">
          <description>Sets mediator object associated with the class.</description>
          <long-description></long-description>
          <tag name="note" line="216" description="Mediators are assiciated classwide instead of per instance using &lt;code&gt;Initialize&lt;/code&gt; method."/>
          <tag name="param" line="216" description="&lt;p&gt;Mediator to associate with the class.&lt;/p&gt;" type="\BLW\Interfaces\Mediator" variable="$Mediator">
            <type link="Mediator.html">\BLW\Interfaces\Mediator</type>
          </tag>
          <tag name="return" line="216" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Mediator</name>
          <default></default>
          <type>\BLW\Interfaces\Mediator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="224" package="BLW\Core">
        <name>_do</name>
        <full_name>\BLW\Interfaces\Object::_do()</full_name>
        <docblock line="224">
          <description>Activates a mediator event.</description>
          <long-description></long-description>
          <tag name="param" line="224" description="&lt;p&gt;Event ID to activate.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="224" description="&lt;p&gt;Event object associated with the event.&lt;/p&gt;" type="\BLW\Interfaces\Event" variable="$Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
          <tag name="return" line="224" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interfaces\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="233" package="BLW\Core">
        <name>_on</name>
        <full_name>\BLW\Interfaces\Object::_on()</full_name>
        <docblock line="233">
          <description>Registers a function to execute on a mediator event.</description>
          <long-description></long-description>
          <tag name="note" line="233" description="Format is &lt;code&gt;mixed function (\BLW\Model\Event\SetID $Event)&lt;/code&gt;."/>
          <tag name="param" line="233" description="&lt;p&gt;Event ID to attach to.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="233" description="&lt;p&gt;Function to call.&lt;/p&gt;" type="callable" variable="$Action">
            <type>callable</type>
          </tag>
          <tag name="return" line="233" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="240" package="BLW\Core">
        <name>AddDecorator</name>
        <full_name>\BLW\Interfaces\Object::AddDecorator()</full_name>
        <docblock line="240">
          <description>Notifies a base class that a new decorator has been added.</description>
          <long-description></long-description>
          <tag name="param" line="240" description="&lt;p&gt;Decorator object to add.&lt;/p&gt;" type="\BLW\Interfaces\Decorator" variable="$Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
          <tag name="return" line="240" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Decorator</name>
          <default></default>
          <type>\BLW\Interfaces\Decorator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="247" package="BLW\Core">
        <name>RemDecorator</name>
        <full_name>\BLW\Interfaces\Object::RemDecorator()</full_name>
        <docblock line="247">
          <description>Notifies a base class that a new decorator has been removed.</description>
          <long-description></long-description>
          <tag name="param" line="247" description="&lt;p&gt;Decorator object to add.&lt;/p&gt;" type="\BLW\Interfaces\Decorator" variable="$Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
          <tag name="return" line="247" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Decorator</name>
          <default></default>
          <type>\BLW\Interfaces\Decorator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="253" package="BLW\Core">
        <name>doCreate</name>
        <full_name>\BLW\Interfaces\Object::doCreate()</full_name>
        <docblock line="253">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="return" line="253" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="263" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\Interfaces\Object::onCreate()</full_name>
        <docblock line="263">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="api" line="263" description="BLW"/>
          <tag name="since" line="263" description="0.1.0"/>
          <tag name="note" line="263" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Object $Event)&lt;/code&gt;."/>
          <tag name="param" line="263" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="263" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="270" package="BLW\Core">
        <name>doSetID</name>
        <full_name>\BLW\Interfaces\Object::doSetID()</full_name>
        <docblock line="270">
          <description>Hook that is called on change of ID.</description>
          <long-description></long-description>
          <tag name="note" line="270" description="Format is &lt;code&gt;mixed function (\BLW\Model\Event\SetID $Event)&lt;/code&gt;."/>
          <tag name="return" line="270" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="279" package="BLW\Core">
        <name>onSetID</name>
        <full_name>\BLW\Interfaces\Object::onSetID()</full_name>
        <docblock line="279">
          <description>Hook that is called on change of ID.</description>
          <long-description></long-description>
          <tag name="note" line="279" description="Format is &lt;code&gt;mixed function (\BLW\Interface\Event $Event)&lt;/code&gt;."/>
          <tag name="throws" line="279" description="If &lt;code&gt;$Function&lt;/code&gt; is not callable." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="279" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="279" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="285" package="BLW\Core">
        <name>doSerialize</name>
        <full_name>\BLW\Interfaces\Object::doSerialize()</full_name>
        <docblock line="285">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="return" line="285" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="294" package="BLW\Core">
        <name>onSerialize</name>
        <full_name>\BLW\Interfaces\Object::onSerialize()</full_name>
        <docblock line="294">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="note" line="294" description="Format is &lt;code&gt;mixed function (\BLW\Interface\Event $Event)&lt;/code&gt;."/>
          <tag name="throws" line="294" description="If &lt;code&gt;$Function&lt;/code&gt; is not callable." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="294" description="&lt;p&gt;Function to call before object is serialized.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="294" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="300" package="BLW\Core">
        <name>doUnSerialize</name>
        <full_name>\BLW\Interfaces\Object::doUnSerialize()</full_name>
        <docblock line="300">
          <description>Hook that is called just after an object is unserialized.</description>
          <long-description></long-description>
          <tag name="return" line="300" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="309" package="BLW\Core">
        <name>onUnSerialize</name>
        <full_name>\BLW\Interfaces\Object::onUnSerialize()</full_name>
        <docblock line="309">
          <description>Hook that is called just after an object is unserialized.</description>
          <long-description></long-description>
          <tag name="note" line="309" description="Format is &lt;code&gt;mixed function (\BLW\Interface\Event $Event)&lt;/code&gt;."/>
          <tag name="throws" line="309" description="If &lt;code&gt;$Function&lt;/code&gt; is not callable." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="309" description="&lt;p&gt;Function to call after Object has been unserialized.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="309" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="316" package="BLW\Core">
        <name>__call</name>
        <full_name>\BLW\Interfaces\Object::__call()</full_name>
        <docblock line="316">
          <description>Property methods.</description>
          <long-description></long-description>
          <tag name="param" line="316" description="&lt;p&gt;Method interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="316" description="&lt;p&gt;Arguments passed to method&lt;/p&gt;" type="array" variable="$arguments">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="323" package="BLW\Core">
        <name>__toString</name>
        <full_name>\BLW\Interfaces\Object::__toString()</full_name>
        <docblock line="323">
          <description>All objects must have a string representation.</description>
          <long-description></long-description>
          <tag name="note" line="323" description="Default is the serialized form of the object."/>
          <tag name="return" line="323" description="String value of object." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <source>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</source>
  </file>
  <file path="src\BLW\Interfaces\Element.php" generated-path="src.BLW.Interfaces.Element.html" hash="95ebfa2f23e492e52f0f3a880f1c912c" package="Default">
    <docblock line="0">
      <description>Element.php | Dec 01, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\BLW\Interfaces\Iterator</extends>
      <name>Element</name>
      <full_name>\BLW\Interfaces\Element</full_name>
      <docblock line="37">
        <description>Core BLW DOM Element Interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Elements must either implement this interface or
extend the &lt;code&gt;\BLW\Model\Element&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="0.1.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="43" package="BLW\Core">
        <name>Document</name>
        <full_name>\BLW\Interfaces\Element::Document()</full_name>
        <docblock line="43">
          <description>Returns the current elements document or creates one if it doesnt exist.</description>
          <long-description></long-description>
          <tag name="return" line="43" description="Current Object's &lt;code&gt;DOMDocument&lt;/code&gt;." type="\DOMDocument">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="50" package="BLW\Core">
        <name>LoadHTML</name>
        <full_name>\BLW\Interfaces\Element::LoadHTML()</full_name>
        <docblock line="50">
          <description>Converts HTML string into DOMNodes and ataches them to the object.</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;HTML string to load.&lt;/p&gt;" type="string" variable="$HTML">
            <type>string</type>
          </tag>
          <tag name="return" line="50" description="$this" type="\BLW\ElementInterface">
            <type link="ElementInterface.html">\BLW\ElementInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$HTML</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="58" package="BLW\Core">
        <name>AddDocument</name>
        <full_name>\BLW\Interfaces\Element::AddDocument()</full_name>
        <docblock line="58">
          <description>Loads Nodes from a DOMDocument.</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;Document to Add to current Object.&lt;/p&gt;" type="\DOMDocument" variable="$Document">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
          <tag name="param" line="58" description="&lt;p&gt;Wheather to load the Entire document or just its body.&lt;/p&gt;" type="string" variable="$isDocument">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="$this" type="\BLW\ElementInterface">
            <type link="ElementInterface.html">\BLW\ElementInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Document</name>
          <default></default>
          <type>\DOMDocument</type>
        </argument>
        <argument line="0">
          <name>$isDocument</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="65" package="BLW\Core">
        <name>AddNode</name>
        <full_name>\BLW\Interfaces\Element::AddNode()</full_name>
        <docblock line="65">
          <description>Adds a DOMNode to the current object.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Node to Add to Object.&lt;/p&gt;" type="\DOMNode" variable="$Node">
            <type link="DOMNode.html">\DOMNode</type>
          </tag>
          <tag name="return" line="65" description="$this" type="\BLW\ElementInterface">
            <type link="ElementInterface.html">\BLW\ElementInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Node</name>
          <default></default>
          <type>\DOMNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="85" package="BLW\Core">
        <name>filter</name>
        <full_name>\BLW\Interfaces\Element::filter()</full_name>
        <docblock line="85">
          <description>Filters the list of nodes with a CSS selector.</description>
          <long-description></long-description>
          <tag name="api" line="85" description="BLW"/>
          <tag name="since" line="85" description="1.0.1"/>
          <tag name="link" line="85" description="Symfony &gt; CssSelector" link="http://symfony.com/doc/current/components/css_selector.html"/>
          <tag name="param" line="85" description="&lt;p&gt;A CSS selector&lt;/p&gt;" type="string" variable="$Selector">
            <type>string</type>
          </tag>
          <tag name="return" line="85" description="List of matched nodes." type="\DOMNodeList">
            <type link="DOMNodeList.html">\DOMNodeList</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Selector</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <source>eJy1VVFv2zYQfk6A/IcbEMxyEFj2sqfG8+w63mbAcbo4RYbBQEBTp0iNRGoktdRo+997JCVZDpxtwDY/yBTJ++7u++5Owx+LpDg5Ds/OTo7hDGYZ5ihMjzbhM1whh/7gHL7rDy7ssbsylcVWpY+JgYB3IZ/ou4vbYjbraPhdCmyu3SWpBi1LxRHiNEOwr+XmA3IDRoJJEK7nd5ClHIVGemfGXtmUIsowchDPqUnoYIfDZUQ4whk7zMV8OluuZr3G69hu+9v+nTfRHooUxrV/isVuhCfHDRlH44LxJ/aI8HZxv55KhX73T1Q6lQIGvX6v77dYaRKp4J5lBhXcGL0tMwbDZ+lX45xpc6EKxJ55GlV+BMtRkwcPPxdkGdObvoQ0Dr6JME4FRkGHDjvd7idDSTyiekClpAo674VmMQLjZKBBxsBLbWROdG4UU9vO+ezh/Wp2+3A/uV3Olz93LxWaUonLL638wKZkncPVzXWtPDSB7EgdJt+PltIQU2+GIa13B8VokmW1qYacggAk1YiENC8qRKdgWsOCVM4WPxoUkZNyaHUdrS0N17TK1hXgMHQHwDOmdTscNfLiHdIHxqxI7Y5/0akgn/3ewEsFtVRNNfyVSrY8xBMkxhRvwrB9HBZK2lLWIXkKa3ek6i7PmlCfqIb1vszrOa2YsWx8Ilv6eVns7wxunVza0cNLpRxQTXMkeemgKQ+ukBmkEhDUGTGkhk5RO7epNr0GcOwLANak9VVtP62Qb1xbUl94JVpXKgkanNAvinJDjQNxKbixrfAt1AZB99KW2JFL5sgVmaCGoah/ubtegKY6Fo+2GqStuiWBa2BUB8wwnqBLOK/ng3Rh9TwOia1YXgOcOrQ2JNlkkkX17TpdS3qlRMM9nNqSdBcpn6OXySwIxiIHzsnLfOypBh94rKjlGLT42g92j+zTZtUsKOZJFNk/vqfE4ZRT3RjeJ6S67bIqa0fXTJiUGrpdHR9sQ6ZE/kZG2/+AGoq2Efpwcud7cf4AMcs0vuSQYLTnzfJYy11zcEj2dX331D1rs4q9fdb+XX4WOth358N/rUWFKwX3/coRDXwsSBr4o0S1bbXfbihVG34w2W/IYLfppodgGbxlGiNqalht8yKRYgvv/MBxs3qq2HOGqgW/Xym/WucwgelqBZrGBqcxc3gU2PQWNCjAPeg7kjNDfRj5rP6u7eljS/H+9o4SDrzTw1T95O75aZZVjjxt7hPPXgv0n5HWntF6m8fEVo/LPKRGCKuaoimWFzQiaXqGXOuHxldi8sxybI1gBFOtV9XRa9zW5y/o/d/YDRqPltsvXwGqo/bB</source>
  </file>
  <file path="src\BLW\Model\Object.php" generated-path="src.BLW.Model.Object.html" hash="cf45c0e8055d08b019f063d83b781796" package="Default">
    <docblock line="0">
      <description>Object.php | Dec 26, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="28" package="BLW\Core">
      <extends>\BLW\Type\Iterator</extends>
      <name>Object</name>
      <full_name>\BLW\Model\Object</full_name>
      <docblock line="28">
        <description>Default BLW object.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Iterators must either implement this class or
implement the &lt;code&gt;\BLW\Interfaces\Iterator&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="28" description="BLW\Core"/>
        <tag name="author" line="28" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="28" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
    </class>
    <source>eJx9Ut1r2lAUfw/kfzh7ikqX2AqjzLLZ2TAEa8FahCHI9ebEZMZ7L+eetJOu//vuTaztw+hLyPn6fSVX301hwiDp9cIAenC3+Y2SY9eDv3CDEi6+nMFF/3zgp83GWJsDlduCoSO7zeize1zC/touBnOTppGFX1rh6WBRlBasrkki5GWF4Mu64QHWwAXC7WQBVSlRWXS1YL+yqVVWYdZAPJVcuMEbjtSZw1HNcYM5nYzT2X0an1hHvt1ut7U86f6fUhi98jstvpGEwVsqIyPkTmwRfkyXq7Gm48kjki21gvO4H/fblqi50ARLUTES3LE91JWAqyfdvo32wvKADGLMu29HHiX2aB1DC3/rrFVDKPPOpwzzUmHWiVw/6naf2enfIq2RSFMnelBW5AhCSrQWdA6ytqz3LskNCTpEZ+n64T6dr5fX89lk9rM7JOSa1PDlvbUbzEVdsacG3X78jywf/Z0i/Miaz1TtoGA2X5Pk/TgxpD2VTRx60nBPW9HHSGQlnKX2ZwT8w6gyCysvZXEwuJq4cAVrCoPnMHj5B8/s1+E=</source>
  </file>
  <file path="src\BLW\Interfaces\Adaptor.php" generated-path="src.BLW.Interfaces.Adaptor.html" hash="22c8ec7a8a106192104d338ee44aef13" package="Default">
    <docblock line="0">
      <description>Adaptor.php | Dec 27, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\ArrayAccess</extends>
      <extends>\Serializable</extends>
      <name>Adaptor</name>
      <full_name>\BLW\Interfaces\Adaptor</full_name>
      <docblock line="37">
        <description>Core Adapter pattern class.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Adaptor objects must either extend this class or
implement the &lt;code&gt;\BLW\Interfaces\Adaptor&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="45" package="BLW\Core">
        <name>GetInstance</name>
        <full_name>\BLW\Interfaces\Adaptor::GetInstance()</full_name>
        <docblock line="45">
          <description>Creates an instance of the adaptor object.</description>
          <long-description></long-description>
          <tag name="note" line="45" description="Default creates"/>
          <tag name="param" line="45" description="" type="\BLW\Interfaces\..." variable="">
            <type link="....html">\BLW\Interfaces\...</type>
          </tag>
          <tag name="return" line="45" description="" type="\BLW\Interface\Adaptor">
            <type link="Adaptor.html">\BLW\Interface\Adaptor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="51" package="BLW\Core">
        <name>GetSubject</name>
        <full_name>\BLW\Interfaces\Adaptor::GetSubject()</full_name>
        <docblock line="51">
          <description>Getter for subject property.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="$subject The adaptor subject." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="58" package="BLW\Core">
        <name>__call</name>
        <full_name>\BLW\Interfaces\Adaptor::__call()</full_name>
        <docblock line="58">
          <description>Import child methods.</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="Overloaded method return value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="65" package="BLW\Core">
        <name>__get</name>
        <full_name>\BLW\Interfaces\Adaptor::__get()</full_name>
        <docblock line="65">
          <description>Import child properties.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="Overloaded propery" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="73" package="BLW\Core">
        <name>__set</name>
        <full_name>\BLW\Interfaces\Adaptor::__set()</full_name>
        <docblock line="73">
          <description>Import child properties.</description>
          <long-description></long-description>
          <tag name="param" line="73" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="73" description="&lt;p&gt;Value to set property to.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="80" package="BLW\Core">
        <name>__isset</name>
        <full_name>\BLW\Interfaces\Adaptor::__isset()</full_name>
        <docblock line="80">
          <description>Import child properties.</description>
          <long-description></long-description>
          <tag name="param" line="80" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="80" description="Returns true if the dyanamic property exists." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="87" package="BLW\Core">
        <name>__unset</name>
        <full_name>\BLW\Interfaces\Adaptor::__unset()</full_name>
        <docblock line="87">
          <description>Import child properties.</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="87" description="Overloaded propery" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="94" package="BLW\Core">
        <name>__toString</name>
        <full_name>\BLW\Interfaces\Adaptor::__toString()</full_name>
        <docblock line="94">
          <description>All objects must have a string representation.</description>
          <long-description></long-description>
          <tag name="note" line="94" description="Default is the serialized form of the object."/>
          <tag name="return" line="94" description="String value of object." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <source>eJzFVWFrIzcQ/dxA/sMUAraDu5u7FFrOxrWbmsOQ5kqca6AYjLw79qrRSkLS5uJe+987knbXziWpD0p7/rBeaTQz780bzQ5/0IU+PkpPT4+P4BQmOdNOmYQ24U/4CTN4/V0fXp+9OvfmcORC6a3hm8JBN+sF0zf0+B7Kib05v9bTacfCb0pi63BTcAtWVSZDWHOB4JfV6nfMHDgFrkD4eXYDgmcoLdKaOX9kVclcYB5CfOCuIMMuTqZyiiODc4h5ObuYXs2nSZt17Lfj6bjOWtzPIYVxk5+w+I30+Kgty1djzbI7tkH48fJ2caEMxt17NJYrCa+Ss+QsbrHKFcrALRMODbxzdlsJBsMPKr6NS2bdudGIibsb1XkkK9FShhh+JslzTSs7AL7ufp3jmkvMux0ydnq9j45IbNAs0Rhlup330rI1AsvIwYJaQ1ZZp0oq58ows+30p8v38+n18nZyfTW7etsbGHSVkYO/9viBpxS1J9CaOfqTkAlm7a6gw+Lb0ZVyVKU3w5TedwY9mgjRtA6ooKyFknAAknAUEh8cyjwqGMKCMsGXl1pgidIFJYde1tHicRUWdeBhGqykem3Zh2ZGUcTndIIx09zvxIXlkirdSgaNZG1X/JNavk3kHRTO6Tdpum9OtVGBeEqZUp8OLqMEtcot7rZSsSoWFhNj2HYSFOzDYo6GM8H/YCtB+D+SO/2iUv5HahlkDi0wScWwjnk+JLyvIHskQtK6jKVySPd5zSrhIIsBdlbNDCshSfYcYpvAYzEaLZpjaXzR1YpuDxAUag9YVzJz/lq8RTer8XV7A99vnzKhE77j1oS4mQhURo3GbZ9CKfkD5nDSHLzZo1vvJc/j2gc0jydfwDMrtTJUn4KLHEqkvsht8mmZLN1AuYETf23hlxpubEuWOYLop9VL8N/RzBCK5djEh9p8z0SFhwgslxkTohtS94H5toETZjaVv0L2MzjV1eX439GKKbYHmWzQRSL/L+zoVfdSKDr8Gp70KbK46z9aPyV7r3h+kJhtiPXrBF9El5VSAq7DuwVniCCPIyLfMgpFkFum+MCts4d7j1v7ZTT7t61WyQPA/ffr0XerYPc0XRqgBrVBS1eM+YAvTVX6tvn62np8Ez6aa2UzmZ9M5JpUnWIe/2JDkov6rIG2XDoVPcNAC9/0Oq6XfPA3KJb8fQ==</source>
  </file>
  <file path="src\BLW\Interfaces\Iterator.php" generated-path="src.BLW.Interfaces.Iterator.html" hash="61f677be74156f43937fadb69e2292f6" package="Default">
    <docblock line="0">
      <description>Iterator.php | Dec 26, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\BLW\Interfaces\Object</extends>
      <extends>\ArrayAccess</extends>
      <extends>\SeekableIterator</extends>
      <extends>\Countable</extends>
      <name>Iterator</name>
      <full_name>\BLW\Interfaces\Iterator</full_name>
      <docblock line="37">
        <description>Core Iterator pattern interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Iterators must either implement this interface or
extend the &lt;code&gt;\BLW\Type\Iterator&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="45" package="BLW\Core">
        <name>child</name>
        <full_name>\BLW\Interfaces\Iterator::child()</full_name>
        <docblock line="45">
          <description>Returns the child with current ID.</description>
          <long-description></long-description>
          <tag name="note" line="45" description="Changes the current context to the child."/>
          <tag name="param" line="45" description="&lt;p&gt;Object ID of child to return.&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="45" description="Returns &lt;code&gt;NULL&lt;/code&gt; if child does not exits." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="53" package="BLW\Core">
        <name>each</name>
        <full_name>\BLW\Interfaces\Iterator::each()</full_name>
        <docblock line="53">
          <description>Calls an anonymous function on each child of the function.</description>
          <long-description></long-description>
          <tag name="note" line="53" description="Function format: &lt;code&gt;mixed function (\BLW\Model\Event\ObjectItem $Object)&lt;/code&gt;"/>
          <tag name="param" line="53" description="&lt;p&gt;Function to call.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="53" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="61" package="BLW\Core">
        <name>walk</name>
        <full_name>\BLW\Interfaces\Iterator::walk()</full_name>
        <docblock line="61">
          <description>Call an anonymous function on object and all its descendants.</description>
          <long-description></long-description>
          <tag name="note" line="61" description="Function format: &lt;code&gt;mixed function (\BLW\Model\Event\ObjectItem $Object)&lt;/code&gt;"/>
          <tag name="param" line="61" description="&lt;p&gt;Funtion to call.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="61" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="67" package="BLW\Core">
        <name>doAdd</name>
        <full_name>\BLW\Interfaces\Iterator::doAdd()</full_name>
        <docblock line="67">
          <description>Hook that is called when a child is added.</description>
          <long-description></long-description>
          <tag name="return" line="67" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="75" package="BLW\Core">
        <name>onAdd</name>
        <full_name>\BLW\Interfaces\Iterator::onAdd()</full_name>
        <docblock line="75">
          <description>Hook that is called when a child is added.</description>
          <long-description></long-description>
          <tag name="note" line="75" description="Format is &lt;code&gt;mixed function (\BLW\Model\Event\ObjectItem $Event)&lt;/code&gt;."/>
          <tag name="param" line="75" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="75" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="81" package="BLW\Core">
        <name>doUpdate</name>
        <full_name>\BLW\Interfaces\Iterator::doUpdate()</full_name>
        <docblock line="81">
          <description>Hook that is called when a child is changed.</description>
          <long-description></long-description>
          <tag name="return" line="81" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="89" package="BLW\Core">
        <name>onUpdate</name>
        <full_name>\BLW\Interfaces\Iterator::onUpdate()</full_name>
        <docblock line="89">
          <description>Hook that is called when a child is changed.</description>
          <long-description></long-description>
          <tag name="note" line="89" description="Format is &lt;code&gt;mixed function (\BLW\Model\Event\ObjectItem $Event)&lt;/code&gt;."/>
          <tag name="param" line="89" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="89" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="95" package="BLW\Core">
        <name>doDelete</name>
        <full_name>\BLW\Interfaces\Iterator::doDelete()</full_name>
        <docblock line="95">
          <description>Hook that is called when a child is deleted.</description>
          <long-description></long-description>
          <tag name="return" line="95" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="103" package="BLW\Core">
        <name>onDelete</name>
        <full_name>\BLW\Interfaces\Iterator::onDelete()</full_name>
        <docblock line="103">
          <description>Hook that is called when a child is deleted.</description>
          <long-description></long-description>
          <tag name="note" line="103" description="Format is &lt;code&gt;mixed function (\BLW\Model\Event\ObjectItem $Event)&lt;/code&gt;."/>
          <tag name="param" line="103" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="103" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="110" package="BLW\Core">
        <name>push</name>
        <full_name>\BLW\Interfaces\Iterator::push()</full_name>
        <docblock line="110">
          <description>Push a node at the end of the list.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Value to push.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="110" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="116" package="BLW\Core">
        <name>pop</name>
        <full_name>\BLW\Interfaces\Iterator::pop()</full_name>
        <docblock line="116">
          <description>Pops a node from the end of the list</description>
          <long-description></long-description>
          <tag name="return" line="116" description="Popped Object." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="122" package="BLW\Core">
        <name>shift</name>
        <full_name>\BLW\Interfaces\Iterator::shift()</full_name>
        <docblock line="122">
          <description>Shifts a node from the end of the list</description>
          <long-description></long-description>
          <tag name="return" line="122" description="Shifted Object." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="129" package="BLW\Core">
        <name>unshift</name>
        <full_name>\BLW\Interfaces\Iterator::unshift()</full_name>
        <docblock line="129">
          <description>Prepend a node at the beginning of the list</description>
          <long-description></long-description>
          <tag name="param" line="129" description="&lt;p&gt;Value to push.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="129" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </interface>
    <source>eJzlV21v2zYQ/rwA+Q83wJjtILPSZhiGxPDsOe5mwHWLvCzAYCCgpZOlWSIJkkpitP3vPZKy7MZxE7Tu9qGG4ZB3vLvnnoeklPbvMpH7e8HBwf4eHMDQoGJGqBZZ4T2cYQgvfz2El0cvjq3frekLuVDpLDHQCJvO9TP9/AZ5T18en8vBoK7hH8GxCrhMUg1aFCpEiNMMwU6L6b8YGjACTILwengJWRoi10hzZuySacGjDCOX4i41CTlWeUIRUR7ugl3O0bA/GF8MWlXVrjX71X4eVrgfQwrdZX3CYg3B/l7Fyw9dycI5myH8Mbqe9IVCb71FpVPB4UXrqHXkTawwiVBwzTKiEt4YvSgyBu074UfdnGlzrCRiy8w7ZR3OctRUwacfcoqMaaZPIY0bP0YYpxyjRp2c9WbznaEmZqhuUCmhGvUrrlmMwEIK0CBiCAttRE50ThVTi/rh4ObqYnB+c907Hw/HfzZPFZpC8dMPa/2BbakSHyQzNOTEb4lkxWo7+aUzFoaoOmkHNF45ZKeXZVUODTnBACTdiIY0lxnmyI3XsMoLQrlgvDfIIydm2yrbmVgiLhcSJ8uE7cA5IMyY1ut4VMfL95hC0GUytRY/0SmnmpVYsBSr2g+f08luED6HxBh5EgTr7kAqYTezDqhSYMvByJNf6rvqt6LYd6xh8qnikzfuWBzCpKcUW/ScqDS7QJyzaYbLeDL1RcGNte3vvaM69PFi2s8BnDuRtaM0TNIs8kcoLJSyMgzPWtXSLhcGoZ8wPsMyoFwVCgJ2Xx1Sl2ctTjLFctC0H/kMasMz8OApuduGriqF+v22FucNW1qvkPuNML4ajZbSp8ukkSCghJpYTI2uMgd+IIspHWWICx4aOpw/+aAGAWye2j3/kKo+yzINjNNX8EUuCl3FAn2RhUlZl7py903pfUjhq2VULFTOzEnZQp7eY7RK2XB9vyZPNhncEs1l4yRtDjU/bpYtP+Q6JKhWcqhVtaoBMW3dz+a5Zo/i56lzvTeqWtvp286e8MUYnW67juSCCDVdtBHja9L9zwx+MwLvWDZ/isC/hJhXDz2LgHq9S5AYLbcdmVkUYbRTZJHoRVFjd4i8fk426/4C4ZxlqdvGNfOMrQ8sts9cun4SRrjdhbZb0gS3pO1Az28BLhJXMmIGv0LUTVjfiawlcztQlkhAs3Nlz1zWr1B2E9Z3omzJ3BPKvi10QnRx+18FM+4pb19Iywd+lmqz0Z+nqnbLsgLhb/dLbUlKtNMObMKGr7IFupB6CT1W9OL/CPgNQB48hUr649E88RoFUsgt++8iSWPzpRhc8LNBaLt6C4y3CqWt+amMU5ylnNs31Eex/KdaFtzjX8n54SPn6bSM</source>
  </file>
  <file path="src\BLW\Model\ActionParser.php" generated-path="src.BLW.Model.ActionParser.html" hash="2164aa028f9d0b925ba93d188358ffcc" package="Default">
    <docblock line="0">
      <description>ActionParser.php | Dec 31, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="27" package="BLW\Core">
      <extends>\BLW\Type\Singleton</extends>
      <name>ActionParser</name>
      <full_name>\BLW\Model\ActionParser</full_name>
      <docblock line="27">
        <description>Actions Generator. Used by BLW class.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;All Objects must extend this class or
implement the &lt;code&gt;\BLW\Interface\Object&lt;/code&gt; interface.&lt;/p&gt;

&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Whenever &lt;code&gt;$DefaultOptions&lt;/code&gt; is used you must
also define &lt;code&gt;$_Initialized&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object must implement dynamic properties&lt;/p&gt;
&lt;hr&gt;</long-description>
        <tag name="package" line="27" description="BLW\Core"/>
        <tag name="author" line="27" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <constant namespace="BLW\Model" line="32" package="BLW\Core">
        <name>ACTION</name>
        <full_name>\BLW\Model\ActionParser::ACTION</full_name>
        <value>'a'</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="32" description="&lt;p&gt;ACTION Action key in arrays / json.&lt;/p&gt;&#10;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="BLW\Model" line="37" package="BLW\Core">
        <name>OBJECT</name>
        <full_name>\BLW\Model\ActionParser::OBJECT</full_name>
        <value>'o'</value>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="37" description="&lt;p&gt;OBJECT Object key in arrays / json.&lt;/p&gt;&#10;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="BLW\Model" line="40" package="BLW\Core">
        <name>TYPE_GET</name>
        <full_name>\BLW\Model\ActionParser::TYPE_GET</full_name>
        <value>1</value>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Model" line="41" package="BLW\Core">
        <name>TYPE_POST</name>
        <full_name>\BLW\Model\ActionParser::TYPE_POST</full_name>
        <value>2</value>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Model" line="42" package="BLW\Core">
        <name>TYPE_COOKIE</name>
        <full_name>\BLW\Model\ActionParser::TYPE_COOKIE</full_name>
        <value>4</value>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Model" line="43" package="BLW\Core">
        <name>TYPE_SESSION</name>
        <full_name>\BLW\Model\ActionParser::TYPE_SESSION</full_name>
        <value>8</value>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Model" line="44" package="BLW\Core">
        <name>TYPE_DB</name>
        <full_name>\BLW\Model\ActionParser::TYPE_DB</full_name>
        <value>16</value>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Model" line="45" package="BLW\Core">
        <name>TYPE_OTHER</name>
        <full_name>\BLW\Model\ActionParser::TYPE_OTHER</full_name>
        <value>128</value>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Model" line="52" package="BLW\Core">
        <name>doCreate</name>
        <full_name>\BLW\Model\ActionParser::doCreate()</full_name>
        <docblock line="52">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="52" description="Format is &lt;code&gt;mixed function (\BLW\Interface\Event $Event)&lt;/code&gt;."/>
          <tag name="return" line="52" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="BLW\Model" line="63" package="BLW\Core">
        <name>ParseGet</name>
        <full_name>\BLW\Model\ActionParser::ParseGet()</full_name>
        <docblock line="63">
          <description>Parses Actions from $_GET.</description>
          <long-description>return void</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="BLW\Model" line="100" package="BLW\Core">
        <name>ParsePost</name>
        <full_name>\BLW\Model\ActionParser::ParsePost()</full_name>
        <docblock line="100">
          <description>Parses Actions from $_POST.</description>
          <long-description>return void</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="135" package="BLW\Core">
        <name>ParseActions</name>
        <full_name>\BLW\Model\ActionParser::ParseActions()</full_name>
        <docblock line="135">
          <description>Parses Actions from $_GET and $_POST.</description>
          <long-description>return \BLW\Interfaces\Object $this</long-description>
        </docblock>
      </method>
    </class>
    <source>eJztVttO40gQfV4k/qFWQpMEgROGfUAJMEDGw2SXSRAxQrsThBq7knhwuq3udiCa5d+3L46diwmw7O1h/ZDE3VWnqk5XnfT+h3gYr69VNzfX12ATjn0ZMnpOuEDuqB34HT6iD7s7W/C+trOrbYxdk8UTHg6GEsp+xWxtq489GB0Lb/cidt2SgN8YxczBG4YCBEu4j9APIwT9mtx+Q1+CZCCHCF9aHkShj1SgeidSm9wmNIgwMBD3oRyqjRzHZ4HCocbZYJ61mm676zpZ1CO9bK3tu5/lXZQpHE3jq1z0QnV9LePmh6OY+HdkgHBydtVrMo52dYxcKM5gx6k5NbtEEjlkHK5IJJFDR4pJEhHYv2f219GICLnLY0RH3h2mcSgZoVARLPwXVVrUgLBf/jHAfkgxKJfUeqlS+S5V/gPkN8g54+XSJRWkj0B8H4UA1gc/EZKNFJO3nPBJacu9uey6FzdXxxftVvu00uAoE04bjzOlpccu4BQpciIZd+BSYAC3E50N+BERwrEMFZEA04ozUp8p1gDONRvgg0QaCOhpYG8SY68b0kGEktH1te/KTz02Xf2okGPCQSgy6ACOm16r007x4A4nuisI52QioArfBKPO1K9qf/iqWjn1s88BlEipoVlZFapz8rPb9KBjO/floVK/LBSbCVWdZq7LFrNe3q/n7s2p66VetYdarbbTWLI473S9GYv3yxbNTueXlptZ/LRs0XW7XU1GarG3bPHxBGby2KktW3S8z+5FZrFXK2TzM2N32Xz7JFLjDfdDVCwCxXtFp5CE+kYgfI5EYuDkJ0GZRPjE+Mi672sJOByFDwqjn1DLYtm0UIuq2eureeq5Y6QSNsxXZb9qXGYg7TzAvJPopSe8oQVn4UTVPJII4uRWqYXqCyLVVxY9YE2TdblijdPW1U9MuEqhXs9NGvmmjl+vb3Qx6m8fmplIh3LOaibZ1DjdfCyi2sCIbLr7XOnChu6nvPwUcMzCYKHKmIdjlWRemUE7RVlQ2UbawAfmCHtdGTT1hJvUc6uwD+VQCIVgkvgqVPr1uh3C6wq8ewfLu3ZurisVHS6HyuFuhOohwldAFlnMwcLCk1azfdhWmpzOq11ySuBAQaTGChA91BbEukxnepWPbT6hfNqXZ2fPW2r0gvKKHHU/f73OFw6Uuqu/vynigsvjIukYCXwx8UYX/1O8a6V8GfG9Y518S9r/w8IiXnguC9jbh2MShcF0ihafDwUOfsK1cjzlUjddsrz3Nx1/0dEtXEpa1NQIA5TqZmJPcAvSm0i746l72iJ7j/nrXNSEGkmw6VVer3b6xP+83J0zsUrvpoInnhc8nccKxZvZfoXkPQlaaPK24VuO9Vcr2JG6Y6m+KU76H9KypxmditnbCX0bn0vC9EKy/lemWWWK1WD/29KkL/aEBk+J1CtupOlddF67svvjsnxpiPSWaS50jeI9q35zkpbmZqzyik3R6ZbkCTb+ABW5Q3w=</source>
  </file>
  <file path="src\BLW\Interfaces\Factory.php" generated-path="src.BLW.Interfaces.Factory.html" hash="ee13476b115a319b855a38176b192ec7" package="Default">
    <docblock line="0">
      <description>Factory.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\BLW\Interfaces\Singleton</extends>
      <name>Factory</name>
      <full_name>\BLW\Interfaces\Factory</full_name>
      <docblock line="37">
        <description>Core Factory pattern class.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Factory objects must either extend this class or
implement the &lt;code&gt;\BLW\Interfaces\Factory&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="0.1.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="48" package="BLW\Core">
        <name>O</name>
        <full_name>\BLW\Interfaces\Factory::O()</full_name>
        <docblock line="48">
          <description>Creates a BLW Library Object.</description>
          <long-description></long-description>
          <tag name="api" line="48" description="BLW"/>
          <tag name="since" line="48" description="0.1.0"/>
          <tag name="param" line="48" description="&lt;p&gt;Name of object to create.&lt;/p&gt;" type="string" variable="$Class">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;Options passed to object.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;Load extention.&lt;/p&gt;" type="bool" variable="$isExtention">
            <type>bool</type>
          </tag>
          <tag name="return" line="48" description="Returns the newly created object." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0">
          <name>$isExtention</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
    </interface>
    <source>eJx9U21v2jAQ/jwk/sNNqgRULIF2H6pCGR3LJiQGEm1VaapUmeRCsia2ZTvrUNf/vrMNKWXV8gF8d76X53nOw08yk81GeHzcbMAxfGWxEWoTkBP+wBeM4eSsCye9/qkNuysTITcqX2cG2nHHhT7QzxmUl/r6dCmjqKXhh+BYJ1xnuQYtKhUjpHmBYM1q9RNjA0aAyRC+T6+hyGPkGslmxl5ZVTwpMHElHnOTUeClTiwSqsNdsqs5m06i+VUU1F3H1u1vezuu535rUhjv+tMs1hE2GzUt78aSxQ9sjfB5dns3EQq99xcqnQsO/aAX9LyLVSYTCm5ZYVDBwuhNVTAYPgp/GpdMm1MlEQPzMNr24axETR18+SmnzJQsPYA8bb9PMM05Ju0WBVudzpMhEGtU96iUUO3WDdcsRWAxJWgQKcSVNqIkOleKqU2rG93fXEXL+9vL5Xw6/9YZKDSV4oPnPXxgIe20B8kMTcAhLpjWL4QOs4+juTDE0vkwpPNLQI4ui6JOF05ZDSXNAUjCEQ/42yBPvIKuLAjlcvNSFlgiN07JoZV1dPeahbtt4WHooqT6NrI/mhp5Ed/SCcZM5tbjDZ1zYroX9L1ksJOs3or/qWXXhD9AZow8D8P9cCiVcMBD6hTadjDzEmxVrueumfKsaDgEfJXzdYFG8GbjiZLp8zrZj7RSyAxqYPs9YOFYD+pbe5i3jte4t07JFCtB007xNRxNnDRzWke7SKJ+orFrGRymMaXYBo4W0tAj0LD7l1QEE5snDofyeSshCjjKdWTx2xyYCZZ4Oqy5l+CX9R+GPFpYuqh2u8PxsdhsJ00OO4f+IKsVvXKCy2iNIa147Lov2h559xDRhXe0O93X415AygqNnUGz8fwXHsebGQ==</source>
  </file>
  <file path="src\BLW\Type\Object.php" generated-path="src.BLW.Type.Object.html" hash="a31a2fe52ac1620d1999557eb5bf3549" package="Default">
    <docblock line="0">
      <description>Object.php | Nov 29, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="43" package="BLW\Core">
      <extends>\SplDoublyLinkedList</extends>
      <implements>\BLW\Interfaces\Object</implements>
      <name>Object</name>
      <full_name>\BLW\Type\Object</full_name>
      <docblock line="43">
        <description>Core BLW Object Class.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;All Objects must extend this class or
implement the &lt;code&gt;\BLW\Interface\Object&lt;/code&gt; interface.&lt;/p&gt;

&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Whenever &lt;code&gt;$DefaultOptions&lt;/code&gt; is used you must
also define &lt;code&gt;$_Initialized&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object must implement dynamic properties&lt;/p&gt;
&lt;hr&gt;</long-description>
        <tag name="package" line="43" description="BLW\Core"/>
        <tag name="api" line="43" description="BLW"/>
        <tag name="since" line="43" description="0.1.0"/>
        <tag name="author" line="43" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="43" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="public" line="51" namespace="BLW\Type" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array()</default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="51" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="51" description="BLW"/>
          <tag name="since" line="51" description="0.1.0"/>
          <tag name="see" line="51" description="__construct()" link="\BLW\Type\Object::___construct()"/>
        </docblock>
      </property>
      <property static="true" visibility="protected" line="57" namespace="BLW\Type" package="BLW\Core">
        <name>$_Initialized</name>
        <default>false</default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="57" description="&lt;p&gt;Used to store class information status.&lt;/p&gt;" type="bool" variable="$Initialized">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" line="66" namespace="BLW\Type" package="BLW\Core">
        <name>$_Mediator</name>
        <default>NULL</default>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="66" description="&lt;p&gt;Mediator associated with the class.&lt;/p&gt;" type="\BLW\Interfaces\Mediator" variable="$Mediator">
            <type link="Mediator.html">\BLW\Interfaces\Mediator</type>
          </tag>
          <tag name="api" line="66" description="BLW"/>
          <tag name="since" line="66" description="1.0.0"/>
          <tag name="see" line="66" description="GetMediator()" link="\BLW\Type\Object::GetMediator()"/>
          <tag name="see" line="66" description="SetMediator()" link="\BLW\Type\Object::SetMediator()"/>
        </docblock>
      </property>
      <property static="false" visibility="private" line="71" namespace="BLW\Type" package="BLW\Core">
        <name>$_MediatorID</name>
        <default>NULL</default>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="71" description="&lt;p&gt;ID used to track events.&lt;/p&gt;" type="string" variable="$Mediator_ID">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="80" namespace="BLW\Type" package="BLW\Core">
        <name>$_Decorators</name>
        <default>array()</default>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="80" description="&lt;p&gt;List of decorators associated with the object.&lt;/p&gt;" type="array" variable="$Decorators">
            <type>array</type>
          </tag>
          <tag name="api" line="80" description="BLW"/>
          <tag name="since" line="80" description="1.0.0"/>
          <tag name="see" line="80" description="AddDecorator()" link="\BLW\Type\Object::AddDecorator()"/>
          <tag name="see" line="80" description="RemDecorator()" link="\BLW\Type\Object::RemDecorator()"/>
        </docblock>
      </property>
      <property static="false" visibility="private" line="87" namespace="BLW\Type" package="BLW\Core">
        <name>$_ID</name>
        <default>''</default>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="87" description="&lt;p&gt;Id of the current object amongst it's siblings.&lt;/p&gt;&#10;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="see" line="87" description="GetID()" link="\BLW\Type\Object::GetID()"/>
          <tag name="see" line="87" description="SetID()" link="\BLW\Type\Object::SetID()"/>
        </docblock>
      </property>
      <property static="false" visibility="private" line="92" namespace="BLW\Type" package="BLW\Core">
        <name>$_Parent</name>
        <default>NULL</default>
        <docblock line="92">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="92" description="&lt;p&gt;Pointer to current object Parent.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Parent">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="97" namespace="BLW\Type" package="BLW\Core">
        <name>$_OldID</name>
        <default>''</default>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="97" description="&lt;p&gt;Previous ID of Object.&lt;/p&gt;" type="string" variable="$OldID">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="102" namespace="BLW\Type" package="BLW\Core">
        <name>$_Status</name>
        <default>0</default>
        <docblock line="102">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="102" description="&lt;p&gt;Current status flag of the class.&lt;/p&gt;" type="int" variable="$Status">
            <type>int</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="107" namespace="BLW\Type" package="BLW\Core">
        <name>$_Current</name>
        <default>0</default>
        <docblock line="107">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="107" description="&lt;p&gt;Index of last child to use with hooks.&lt;/p&gt;" type="int" variable="$_Current">
            <type>int</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" line="112" namespace="BLW\Type" package="BLW\Core">
        <name>$Options</name>
        <default>NULL</default>
        <docblock line="112">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="112" description="&lt;p&gt;Constructor Options&lt;/p&gt;" type="\stdClass" variable="$Options">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
      </property>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="124" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Type\Object::__construct()</full_name>
        <docblock line="124">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="throws" line="124" description="&lt;ul&gt;&#13;&#10;&lt;li&gt;If &lt;code&gt;$Options&lt;/code&gt; is of an invalid type.&lt;/li&gt;&#13;&#10;&lt;li&gt;If &lt;code&gt;$Options&lt;/code&gt; contains an invalid value.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="124" description="&lt;p&gt;Constructor Options&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="187" package="BLW\Core">
        <name>ValidateOptions</name>
        <full_name>\BLW\Type\Object::ValidateOptions()</full_name>
        <docblock line="187">
          <description>Validates options passed to Object::__construct().</description>
          <long-description></long-description>
          <tag name="see" line="187" description="" link="\BLW\Type\Object::__construct()"/>
          <tag name="param" line="187" description="&lt;p&gt;Options to validate&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="187" description="Return &lt;code&gt;true&lt;/code&gt; if options are valid &lt;code&gt;false&lt;/code&gt; otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="206" package="BLW\Core">
        <name>BuildOptions</name>
        <full_name>\BLW\Type\Object::BuildOptions()</full_name>
        <docblock line="206">
          <description>Builds Options used by an object.</description>
          <long-description>&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;This has been purposelely made into a static function to limit the
capabilities of this function. If you need more functionallity (such as
access to &lt;code&gt;$this&lt;/code&gt;), then overload
&lt;code&gt;Object::onCreate()&lt;/code&gt; method.&lt;/p&gt;

&lt;hr&gt;</long-description>
          <tag name="param" line="206" description="&lt;p&gt;Options to build&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="206" description="Returns built options as an object." type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="221" package="BLW\Core">
        <name>SanitizeLabel</name>
        <full_name>\BLW\Type\Object::SanitizeLabel()</full_name>
        <docblock line="221">
          <description>Sanitize object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="221" description="Raises warning if label is not a string and returns empty string."/>
          <tag name="param" line="221" description="&lt;p&gt;String to sanitize.&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="221" description="Returns the sanitized label." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="234" package="BLW\Core">
        <name>ValidateLabel</name>
        <full_name>\BLW\Type\Object::ValidateLabel()</full_name>
        <docblock line="234">
          <description>Validates that a label is valid.</description>
          <long-description></long-description>
          <tag name="param" line="234" description="&lt;p&gt;String to validate&lt;/p&gt;" type="string" variable="$Label">
            <type>string</type>
          </tag>
          <tag name="return" line="234" description="Return &lt;code&gt;true&lt;/code&gt; if label is valid." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="245" package="BLW\Core">
        <name>BuildLabel</name>
        <full_name>\BLW\Type\Object::BuildLabel()</full_name>
        <docblock line="245">
          <description>Creates a valid Object ID / Label / Name.</description>
          <long-description></long-description>
          <tag name="note" line="245" description="Raises warning if Input is not scaler."/>
          <tag name="param" line="245" description="&lt;p&gt;Input can be biased to help regenerate ID's.&lt;/p&gt;&#10;" type="string|int" variable="$Input">
            <type>string</type>
            <type>int</type>
          </tag>
          <tag name="return" line="245" description="Returns the new ID. Returns &lt;code&gt;NULL&lt;/code&gt; on errors." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Input</name>
          <default>NULL</default>
          <type>string|int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="263" package="BLW\Core">
        <name>Initialize</name>
        <full_name>\BLW\Type\Object::Initialize()</full_name>
        <docblock line="263">
          <description>Initializes Class for subsequent use.</description>
          <long-description></long-description>
          <tag name="api" line="263" description="BLW"/>
          <tag name="since" line="263" description="0.1.0"/>
          <tag name="param" line="263" description="&lt;p&gt;Optional initialization data.&lt;/p&gt;" type="array" variable="$Data">
            <type>array</type>
          </tag>
          <tag name="return" line="263" description="Returns the options generated. Used by child classes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="312" package="BLW\Core">
        <name>GetInstance</name>
        <full_name>\BLW\Type\Object::GetInstance()</full_name>
        <docblock line="312">
          <description>Creates a new instance of the object.</description>
          <long-description></long-description>
          <tag name="api" line="312" description="BLW"/>
          <tag name="since" line="312" description="0.1.0"/>
          <tag name="param" line="312" description="&lt;p&gt;Options to use in initializing class.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="312" description="Returns a new instance of the class." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="323" package="BLW\Core">
        <name>GetID</name>
        <full_name>\BLW\Type\Object::GetID()</full_name>
        <docblock line="323">
          <description>Fetches the current ID of the object.</description>
          <long-description></long-description>
          <tag name="api" line="323" description="BLW"/>
          <tag name="since" line="323" description="0.1.0"/>
          <tag name="return" line="323" description="Returns the ID of the current class." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="333" package="BLW\Core">
        <name>SetID</name>
        <full_name>\BLW\Type\Object::SetID()</full_name>
        <docblock line="333">
          <description>Changes the ID of the current object.</description>
          <long-description></long-description>
          <tag name="param" line="333" description="&lt;p&gt;New ID to give Object&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="333" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="362" package="BLW\Core">
        <name>GetParent</name>
        <full_name>\BLW\Type\Object::GetParent()</full_name>
        <docblock line="362">
          <description>Retrieves the current parent of the object.</description>
          <long-description></long-description>
          <tag name="return" line="362" description="Returns &lt;code&gt;NULL&lt;/code&gt; if no parent is set." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="387" package="BLW\Core">
        <name>ClearParent</name>
        <full_name>\BLW\Type\Object::ClearParent()</full_name>
        <docblock line="387">
          <description>Clears parent of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="387" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="398" package="BLW\Core">
        <name>Status</name>
        <full_name>\BLW\Type\Object::Status()</full_name>
        <docblock line="398">
          <description>Get the current status flag of the object.</description>
          <long-description></long-description>
          <tag name="return" line="398" description="Returns the current status flags of the object." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="407" package="BLW\Core">
        <name>ClearStatus</name>
        <full_name>\BLW\Type\Object::ClearStatus()</full_name>
        <docblock line="407">
          <description>Clears the status flag of the current object.</description>
          <long-description></long-description>
          <tag name="return" line="407" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="417" package="BLW\Core">
        <name>parent</name>
        <full_name>\BLW\Type\Object::parent()</full_name>
        <docblock line="417">
          <description>Returns the parent of the current object.</description>
          <long-description></long-description>
          <tag name="note" line="417" description="Changes the current context to the parent."/>
          <tag name="return" line="417" description="Returns &lt;code&gt;NULL&lt;/code&gt; if parent does not exits." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="430" package="BLW\Core">
        <name>Load</name>
        <full_name>\BLW\Type\Object::Load()</full_name>
        <docblock line="430">
          <description>Loads and object data from an &lt;code&gt;obj.xxx.min.php&lt;/code&gt; file.</description>
          <long-description></long-description>
          <tag name="api" line="430" description="BLW"/>
          <tag name="since" line="430" description="0.1.0"/>
          <tag name="param" line="430" description="&lt;p&gt;Custom Data to reinstate class. (Used for info that cannot be serialized)&lt;/p&gt;&#10;" type="string" variable="$Data">
            <type>string</type>
          </tag>
          <tag name="return" line="430" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="446" package="BLW\Core">
        <name>Save</name>
        <full_name>\BLW\Type\Object::Save()</full_name>
        <docblock line="446">
          <description>Saves an element to an obj.xxx.min.php file.</description>
          <long-description></long-description>
          <tag name="api" line="446" description="BLW"/>
          <tag name="since" line="446" description="0.1.0"/>
          <tag name="throws" line="446" description="If &lt;code&gt;$File&lt;/code&gt; is not a string." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="446" description="If unable to create / write to file." type="\BLW\FileError">
            <type link="FileError.html">\BLW\FileError</type>
          </tag>
          <tag name="param" line="446" description="&lt;p&gt;File to save the object to.&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="return" line="446" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="481" package="BLW\Core">
        <name>GetMediator</name>
        <full_name>\BLW\Type\Object::GetMediator()</full_name>
        <docblock line="481">
          <description>Gets mediator object associated with the class.</description>
          <long-description></long-description>
          <tag name="return" line="481" description="Returns &lt;code&gt;NULL&lt;/code&gt; if no mediator exists." type="\BLW\Interfaces\Mediator">
            <type link="Mediator.html">\BLW\Interfaces\Mediator</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="495" package="BLW\Core">
        <name>SetMediator</name>
        <full_name>\BLW\Type\Object::SetMediator()</full_name>
        <docblock line="495">
          <description>Sets mediator object associated with the class.</description>
          <long-description></long-description>
          <tag name="note" line="495" description="Mediators are assiciated classwide instead of per instance using &lt;code&gt;Initialize&lt;/code&gt; method."/>
          <tag name="param" line="495" description="&lt;p&gt;Mediator to associate with the class.&lt;/p&gt;" type="\BLW\Interfaces\Mediator" variable="$Mediator">
            <type link="Mediator.html">\BLW\Interfaces\Mediator</type>
          </tag>
          <tag name="return" line="495" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Mediator</name>
          <default></default>
          <type>\BLW\Interfaces\Mediator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="506" package="BLW\Core">
        <name>_do</name>
        <full_name>\BLW\Type\Object::_do()</full_name>
        <docblock line="506">
          <description>Activates a mediator event.</description>
          <long-description></long-description>
          <tag name="param" line="506" description="&lt;p&gt;Event ID to activate.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="506" description="&lt;p&gt;Event object associated with the event.&lt;/p&gt;" type="\BLW\Interfaces\Event" variable="$Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
          <tag name="return" line="506" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interfaces\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="523" package="BLW\Core">
        <name>_on</name>
        <full_name>\BLW\Type\Object::_on()</full_name>
        <docblock line="523">
          <description>Registers a function to execute on a mediator event.</description>
          <long-description></long-description>
          <tag name="note" line="523" description="Format is &lt;code&gt;mixed function (\BLW\Model\Event\SetID $Event)&lt;/code&gt;."/>
          <tag name="param" line="523" description="&lt;p&gt;Event ID to attach to.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="523" description="&lt;p&gt;Function to call.&lt;/p&gt;" type="callable" variable="$Action">
            <type>callable</type>
          </tag>
          <tag name="param" line="523" description="&lt;p&gt;Priotory of $Action. (Higher priority = Higher Importance)&lt;/p&gt;&#10;" type="int" variable="$Priority">
            <type>int</type>
          </tag>
          <tag name="return" line="523" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>callable</type>
        </argument>
        <argument line="0">
          <name>$Priority</name>
          <default>0</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="544" package="BLW\Core">
        <name>AddDecorator</name>
        <full_name>\BLW\Type\Object::AddDecorator()</full_name>
        <docblock line="544">
          <description>Notifies a base class that a new decorator has been added.</description>
          <long-description></long-description>
          <tag name="param" line="544" description="&lt;p&gt;Decorator object to add.&lt;/p&gt;" type="\BLW\Interfaces\Decorator" variable="$Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
          <tag name="return" line="544" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Decorator</name>
          <default></default>
          <type>\BLW\Interfaces\Decorator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="555" package="BLW\Core">
        <name>RemDecorator</name>
        <full_name>\BLW\Type\Object::RemDecorator()</full_name>
        <docblock line="555">
          <description>Notifies a base class that a new decorator has been removed.</description>
          <long-description></long-description>
          <tag name="param" line="555" description="&lt;p&gt;Decorator object to add.&lt;/p&gt;" type="\BLW\Interfaces\Decorator" variable="$Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
          <tag name="return" line="555" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Decorator</name>
          <default></default>
          <type>\BLW\Interfaces\Decorator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="568" package="BLW\Core">
        <name>doCreate</name>
        <full_name>\BLW\Type\Object::doCreate()</full_name>
        <docblock line="568">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="return" line="568" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="583" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\Type\Object::onCreate()</full_name>
        <docblock line="583">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="api" line="583" description="BLW"/>
          <tag name="since" line="583" description="0.1.0"/>
          <tag name="note" line="583" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="583" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="583" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="601" package="BLW\Core">
        <name>doSetID</name>
        <full_name>\BLW\Type\Object::doSetID()</full_name>
        <docblock line="601">
          <description>Hook that is called on change of ID.</description>
          <long-description></long-description>
          <tag name="return" line="601" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="617" package="BLW\Core">
        <name>onSetID</name>
        <full_name>\BLW\Type\Object::onSetID()</full_name>
        <docblock line="617">
          <description>Hook that is called on change of ID.</description>
          <long-description></long-description>
          <tag name="api" line="617" description="BLW"/>
          <tag name="since" line="617" description="0.1.0"/>
          <tag name="note" line="617" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="throws" line="617" description="If &lt;code&gt;$Function&lt;/code&gt; is not a valid callback." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="617" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="617" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="635" package="BLW\Core">
        <name>doSerialize</name>
        <full_name>\BLW\Type\Object::doSerialize()</full_name>
        <docblock line="635">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="return" line="635" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="650" package="BLW\Core">
        <name>onSerialize</name>
        <full_name>\BLW\Type\Object::onSerialize()</full_name>
        <docblock line="650">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="api" line="650" description="BLW"/>
          <tag name="since" line="650" description="0.1.0"/>
          <tag name="note" line="650" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="650" description="&lt;p&gt;Function to call before object is serialized.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="650" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="668" package="BLW\Core">
        <name>doUnSerialize</name>
        <full_name>\BLW\Type\Object::doUnSerialize()</full_name>
        <docblock line="668">
          <description>Hook that is called just after an object is unserialized.</description>
          <long-description></long-description>
          <tag name="return" line="668" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="683" package="BLW\Core">
        <name>onUnSerialize</name>
        <full_name>\BLW\Type\Object::onUnSerialize()</full_name>
        <docblock line="683">
          <description>Hook that is called just after an object is unserialized.</description>
          <long-description></long-description>
          <tag name="api" line="683" description="BLW"/>
          <tag name="since" line="683" description="0.1.0"/>
          <tag name="note" line="683" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="683" description="&lt;p&gt;Function to call after Object has been unserialized.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="683" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="702" package="BLW\Core">
        <name>__call</name>
        <full_name>\BLW\Type\Object::__call()</full_name>
        <docblock line="702">
          <description>Property methods.</description>
          <long-description></long-description>
          <tag name="param" line="702" description="&lt;p&gt;Method interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="702" description="&lt;p&gt;Arguments passed to method&lt;/p&gt;" type="array" variable="$arguments">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="722" package="BLW\Core">
        <name>__toString</name>
        <full_name>\BLW\Type\Object::__toString()</full_name>
        <docblock line="722">
          <description>All objects must have a string representation.</description>
          <long-description></long-description>
          <tag name="note" line="722" description="Default is the serialized form of the object."/>
          <tag name="return" line="722" description="String value of object." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="738" package="BLW\Core">
        <name>serialize</name>
        <full_name>\BLW\Type\Object::serialize()</full_name>
        <docblock line="738">
          <description>Serializable interface.</description>
          <long-description></long-description>
          <tag name="param" line="738" description="&lt;p&gt;For internal use only.&lt;/p&gt;" type="\BLW\Interfaces\Iterator" variable="$Parent">
            <type link="Iterator.html">\BLW\Interfaces\Iterator</type>
          </tag>
          <tag name="return" line="738" description="Serialized object." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Parent</name>
          <default>NULL</default>
          <type>\BLW\Interfaces\Iterator</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="772" package="BLW\Core">
        <name>unserialize</name>
        <full_name>\BLW\Type\Object::unserialize()</full_name>
        <docblock line="772">
          <description>Serializable interface.</description>
          <long-description></long-description>
          <tag name="param" line="772" description="&lt;p&gt;Serialized form of object&lt;/p&gt;" type="string" variable="$serialized">
            <type>string</type>
          </tag>
          <tag name="return" line="772" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$serialized</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Interfaces\Event.php" generated-path="src.BLW.Interfaces.Event.html" hash="40120b65c85dbd7272ee920d11ed4a65" package="Default">
    <docblock line="0">
      <description>Event.php | Dec 27, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\ArrayAccess</extends>
      <extends>\Iterator</extends>
      <extends>\Countable</extends>
      <extends>\Serializable</extends>
      <name>Event</name>
      <full_name>\BLW\Interfaces\Event</full_name>
      <docblock line="37">
        <description>Core Event interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Events must either implement this interface or
extend the &lt;code&gt;\BLW\Type\Event&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="0.1.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="43" package="BLW\Core">
        <name>GetSubject</name>
        <full_name>\BLW\Interfaces\Event::GetSubject()</full_name>
        <docblock line="43">
          <description>Getter for subject property.</description>
          <long-description></long-description>
          <tag name="return" line="43" description="$subject The adaptor subject." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="50" package="BLW\Core">
        <name>__call</name>
        <full_name>\BLW\Interfaces\Event::__call()</full_name>
        <docblock line="50">
          <description>Property methods.</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="50" description="Overloaded method return value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="57" package="BLW\Core">
        <name>__get</name>
        <full_name>\BLW\Interfaces\Event::__get()</full_name>
        <docblock line="57">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="Overloaded propery" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="65" package="BLW\Core">
        <name>__set</name>
        <full_name>\BLW\Interfaces\Event::__set()</full_name>
        <docblock line="65">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Value to set property to.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="72" package="BLW\Core">
        <name>__isset</name>
        <full_name>\BLW\Interfaces\Event::__isset()</full_name>
        <docblock line="72">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="72" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="72" description="Returns true if the dyanamic property exists." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="79" package="BLW\Core">
        <name>__unset</name>
        <full_name>\BLW\Interfaces\Event::__unset()</full_name>
        <docblock line="79">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="Overloaded propery" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="86" package="BLW\Core">
        <name>__toString</name>
        <full_name>\BLW\Interfaces\Event::__toString()</full_name>
        <docblock line="86">
          <description>All objects must have a string representation.</description>
          <long-description></long-description>
          <tag name="note" line="86" description="Default is the serialized form of the object."/>
          <tag name="return" line="86" description="String value of object." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="93" package="BLW\Core">
        <name>isPropagationStopped</name>
        <full_name>\BLW\Interfaces\Event::isPropagationStopped()</full_name>
        <docblock line="93">
          <description>Returns whether further event listeners should be triggered.</description>
          <long-description></long-description>
          <tag name="api" line="93" description="Symfony"/>
          <tag name="return" line="93" description="Whether propagation was already stopped for this event." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="108" package="BLW\Core">
        <name>stopPropagation</name>
        <full_name>\BLW\Interfaces\Event::stopPropagation()</full_name>
        <docblock line="108">
          <description>Stops the propagation of the event to further event listeners.</description>
          <long-description>&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;If multiple event listeners are connected to the same event, no
further event listener will be triggered once any trigger calls
&lt;code&gt;stopPropagation()&lt;/code&gt;.
&lt;hr&gt;</long-description>
          <tag name="api" line="108" description="Symfony"/>
          <tag name="since" line="108" description="1.0.0"/>
          <tag name="return" line="108" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <source>eJy9Vm1vIjcQ/txI+Q9TKRIQUUgulVodiEJz6ISU5k6Ba6QKCZndWdaN117ZXnJ71/73ju1ll7uQ0qpq+LD4bV6eecbjGf6Up/npSf/8/PQEzmG6RWl7tAR/wBuM4NUPXXh1cXnlNv2Ba5WXmm9SC+2o47e+o8+PkE3M4uoun05bBn5TEmuBRcoNGFXoCCHhAsFNi/XvGFmwCmyK8MtsAYJHKA3SnFl3ZF3IWGDsVTxym9JGoydSMemRXtjrvJldT2/n015tdeyWw+kwj2q/D3kK45198sUt9E9P6qB8M85Z9MA2CD/f3C+vlcawukVtuJJw2bvoXYQlVthUabhnwqKGd9aUhWAwfFRhNM6YsVc6R+zZh1FlR7IMDVkI6meSJBOamQHwpP1tjAmXGLdbtNnqdD5bArFBvUKtlW63PkjDEgQWkYABlUBUGKsyCudaM122utPVh/n0bnU/ubud3b7tDDTaQsvBn3v4wEEKzFNQK/NNKIfp96NbZSk+r4d9Gjcb+WgiRBA0kJFhQGKKgPMsF5g5fZ61Wiko7SXxo0UZe/qGjsvR0kFflDkuvbZh369CJJgx+57oUWDrECEwZjl3K2FiuCSDF73LwA3suKnp/ztaXD7IB0itzV/3+/vb/Vwrl7umT5b6zhzchFhXdDZgQ0QDVgPLidasnHiiurCc0SlmlabhtSqkZWuBNJ6j5kzwT256evKZdNIv8OR+5/AWrUuthJDsbhF5lKO2Za8+NA4sQ8Y/Ygxnu4MLijeLWW4b4VqmHwZ5saabAEkhI+tym8zNw8l2Z+By5mt/3lfGIUMKb2z2nMiZZhkYyli5gTOX5s1pHyUWWXLP3e7nXH9Hd0woFtMw6Idqe8tEgcecX60iJkTbm+4Cc/GHM6Y3hUtNcxjPm5JOk5IqqBz/P0TBRHkUxAZtwPBiHgepKnt8qOFX/6WCbbDJOJo/xblVPD6KyewwdSsDL83GWikBd35swGrCxhNfkOKSfWGzpBvMjTXHk40b8+JM/dfcKuQRn12FV74AVCU+ZVuqIjtHNeYaDV0n5hTuOSaVReogElYI/5670JqquJF/VL8y91y5ZfVlJapBVSbm4S+kIYmof1S4ViurguQzhWvH/WOK/s1KCu3/0VdtQZSjpAceTKoKEcOakj88vRjvueqenHmZJUqWh1PsvlLvCGEbHyV4ZAaY0MjikkCqPA8BCY+lt38MHTfvG33zoOIZnG43hH/fhSr0ASzd6mfQ137U6qpuoOkFvtrOR7OEEkVYTi3Ak2Ay7Zo3KdHnctX+GZfr/mQXpKpVHXaJLgBl5D4boNxDz2S5WwJX9U3jku8lXJz3YtbuVD1Gbw+ZHh0hNvQUu37vX5e9Jz4QYb4Rq1S4MjT4C6KwgOw=</source>
  </file>
  <file path="src\BLW\Model\Event\General.php" generated-path="src.BLW.Model.Event.General.html" hash="7ff4fd3bf11b8696a90134a32dc9d12e" package="Default">
    <docblock line="0">
      <description>General.php | Dec 27, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model\Event" line="29" package="BLW\Core">
      <extends>\BLW\Type\Event</extends>
      <name>General</name>
      <full_name>\BLW\Model\Event\General</full_name>
      <docblock line="29">
        <description>Generic event object.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Events must either extend this class or
impliment the &lt;code&gt;\BLW\Interfaces\Event&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="29" description="BLW\Core"/>
        <tag name="api" line="29" description="BLW"/>
        <tag name="since" line="29" description="1.0.0"/>
        <tag name="author" line="29" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
    </class>
    <source>eJx9UltrwjAUfl5/xdlTVVy9PWygbHWuiKAOvCAMQWJ6ajNrUpJUJ87/vjRexkD2UnK+c/pdTtJ6SePUqZRKDpSgixwlSTwDwTe8IYX6Yxnq1VrDdPOBjkj3kq1iDQVatI0H83mCTVtNGqM0CFwFH4LjeXwSMwVKZJIiRCxByMts+YlUgxagY4RBbwIJo8gVmprofGSZ8TDBMGfYMR0b/JeGitDQcPuvpez3OsFwHHhnST8HT7O2pFfHNzyCf5E2Nkxdcc6buPNTQtdkhfDan807QqIFtygVExxqXtWrWoRkOhYSZiTRKOFdq32WEGjtxOnkb4jSDZkienr9bBU42aAy7CfqgYmTzIMtct0EFhXuQ4wYx7Dgmq5bLB60Mb9CuUAphSy4U65IhEAoRaVAREAzpcXGrHApidy75WAxHQejxaw9GvaG3WJTos4kbx6dP3fMKGCuCcJehmd3cSMy+CRlOWDPinFj+xIeLuGvi/03N02IcXx+YYBfGnmoYJ6LTfYpnnbgHJzjD3llzbI=</source>
  </file>
  <file path="src\BLW\Model\Event\ObjectItem.php" generated-path="src.BLW.Model.Event.ObjectItem.html" hash="b21a435dcea9b5d008073f3de06dd4f8" package="Default">
    <docblock line="0">
      <description>ObjectItem.php | Dec 27, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model\Event" line="29" package="BLW\Core">
      <extends>\BLW\Type\Event</extends>
      <name>ObjectItem</name>
      <full_name>\BLW\Model\Event\ObjectItem</full_name>
      <docblock line="29">
        <description>Event for passing a set of objects one at a time.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Events must either extend this class or
impliment the &lt;code&gt;\BLW\Interfaces\Event&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="29" description="BLW\Core"/>
        <tag name="api" line="29" description="BLW"/>
        <tag name="since" line="29" description="1.0.0"/>
        <tag name="author" line="29" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model\Event" line="37" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Model\Event\ObjectItem::__construct()</full_name>
        <docblock line="37">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;The subject of the event, usually an object.&lt;/p&gt;" type="mixed" variable="$Subject">
            <type>mixed</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;Index of argument amongst it's pears.&lt;/p&gt;&#10;" type="int" variable="$Index">
            <type>int</type>
          </tag>
          <tag name="return" line="37" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0">
          <name>$Index</name>
          <default>-1</default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>eJyFU21r2zAQ/rxA/sMNColD6jTNh42m69JlZgT6AmlKYBSCIp8TrbZk9JI2dP3vO1mxV1hh+iCs093z3D16fP613Jbt1qDXa7egB7frX8jtzGIRUxx+w3fkcPqpD6cnw5HPqLKmqtxrsdla6PKoujqm7TMUl2YxmpdJ0jHwU0lsChZbYcAopzlCJnIEf3QVF1gFdotwPVtALjhKg3Rm1qesnUxzTCuIJ2G3dPEXh6uUcGRVXGFezabJzV0SN6wTHw7Z4cybvt/rFCY1P/XiA4N2q1Hmw6Rk/JFtEL5dLR+mSmOI7lAboSQM45P4JISYs1ulYclyixpurdm7nMH5kwpfk4IZO9IlYmwfLw48khVoiCHAX9No+UOyQ2nHILLuxxQzITHtdui2E0UvlqbYoF6h1kp3O/fSsAyBcY7GgMqAO2NVQXquNdP7Tj9Z3d8l89Xycn4zu/kRjTVap+X49c2AUNFBRp2XzBghN8DAoPVwqnopQpZEYiluRYFx0Ow9WWDCSuEj4UBgNFijENQKNY/wH3F4Tg29sSbgs0WZGnjwpIt9iUGrduuFKmiFkfzyXpXGaset0nETpK41K6AQz5jC0d3BiQtyUu1KmtobCz1uH5xxLM/3wORBi3+gBGl3NJMpPkPYCYDpjSu8qKxQcmPI0pbsViLT5k19eAvYKZHWwUH4KN2aHAmZk9x6j61WvB6mWzfdr1m/wPEwCnUHFSoIpqmBs7P3SqOxf/4688j/W8cXNVhAHYd78snrH3jyPoE=</source>
  </file>
  <file path="src\BLW\Model\ElementContainer.php" generated-path="src.BLW.Model.ElementContainer.html" hash="7fb9782771bcce32a524319a93183a8d" package="Default">
    <docblock line="0">
      <description>AjaxElement.php | Dec 10, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="32" package="BLW\Core">
      <extends>\BLW\Type\Element</extends>
      <name>ElementContainer</name>
      <full_name>\BLW\Model\ElementContainer</full_name>
      <docblock line="32">
        <description>Class for elements that contain others.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW DOMobject. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="32" description="BLW\Core"/>
        <tag name="api" line="32" description="BLW"/>
        <tag name="version" line="32" description="1.0.0"/>
        <tag name="since" line="32" description="0.1.0"/>
        <tag name="author" line="32" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <property static="true" visibility="public" line="40" namespace="BLW\Model" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('HTML' =&gt; '&lt;div&gt;&lt;/div&gt;', 'DocumentVersion' =&gt; '1.0')</default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="40" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="40" description="BLW"/>
          <tag name="since" line="40" description="0.1.0"/>
          <tag name="see" line="40" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="50" package="BLW\Core">
        <name>GetHTML</name>
        <full_name>\BLW\Model\ElementContainer::GetHTML()</full_name>
        <docblock line="50">
          <description>Overloads GetHTML.</description>
          <long-description></long-description>
          <tag name="see" line="50" description="" link="\BLW\Element::GetHTML()"/>
          <tag name="return" line="50" description="HTML output of Form" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9VFFP2zAQfm5+xQ1VclJ1aUvf2tLBSseQgEq0DGmqVLnJpQ0kdmQ7QMT47zsnaRkI5ofEd77cfd9354y+ZdvM6bRaDrTg5I4/TRNMURif3PAHTjGAXrcNh91enyJs0ERmhYo3WwNu4EF6ohf962w6ZRp+S4F10GIba9AyVwFCFCcI1szXdxgYMBLMFuHyfAFJHKDQSDY3NmSdizDB0GZ4jM2W/K9pAhlSGlF+W6a8OJ9Mr+ZTvy55bJ1VbGkGe5wfYITjXWmCQXbH2WlwnPHgnm8Qvl/cLidSVdEPqHQsBfT8rt8tPTw3W6nglicGFcyMLvKEw+hRVrvjlGvTVxmib+7HZQXBU9SUvUp9SXSSIcSR+yXEKBYYuoz8zPOeDcHeoFqhUlK57EZoHiHwIECtQUYQ5NrIlMRbK64K1p6ububT69XtyfXV+dWZN1RociWGL46TE8F5kUZSFMQlzYi8MMuJ1nNMqBVS/bsf7jWYJJwqRUQPq2nQVYcCKQynFkjqgdL+53LxLLaOT6TTsSARun7vrZT7Nv1XxaDEVk/ppAJEDcAngyLUsLQ4FkWGyzrEeXaAVsnMLouIK+BK8QKapxjxPDGzzBBEDbUJsrZJvxDWBVRF4wiENKDR2DkkMbRRuVXO36feE6/tN1R3PsQK5qy8D4PBarXP5Xrwobf+uFO+s3xN0wvacEOv9xyOKm6u02iwn4vLCwbv1tEY2CiMH8ajjn0yZ3fQZqcyyK1ov6qesV04wa/CPBqShtWyQUxm1NpEclL9DI0t5ZfuV4J1CwaD+px4lAHVgBIBFYsN2BOQuclyY6f7h1SpDes4jZpolIvAcoN/0jwTvTpNpnCzUpgldLVcduD6Lc8ddZjftH+Pr2PDN67ns7FnDw5izdrAmr1mv3lIu4yrtwDb0COOjReHbk+df/gXNs2QLw==</source>
  </file>
  <file path="src\bootstrap.php" generated-path="src.bootstrap.html" hash="3cee0bb4404f32f6049b1b6e4fde9a2f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVG1v2jAQ/o7Efzhpk2KqAdvYhwpQVqCURQsvgkzVqkjIJAfxauzMcca6af99TsJLKeumTjUKie17nnvO57v2+ziKy6X62Vm5BGfQlVInisaQBIrFGnRENQRSLNkqVZhA170Gly0UVXe1DJCD2lHDdoRWMkwDzaRo183CYTe224EM0TbY+cT9NHBG80tn2q7niyAQwwS0hAVCiEsmMIQlU4kGqYDpnGLDOAet2GqFCqgAVEqqWrseH7x4EUsgkakK0MA5QjZNF18w0Bm5jhCGjgecBSgSLOIyJotUhBzDrRcdmY0DTyYQmMjBOafr9PqjWf8Q+QVNdWR0XlOujbSxTu5STqG9kcXXxZomuqFixJq+tQtIIOM7E0qk4e3rN42q+TuHdSfxGtO437cSuJECC8udWCM8W6iXS9mvbrLU6X287kwvoTceTjpep+u4jvd5a9EyY2/pOt1pZ+r0Z9tNhV9TpnAuhYkPQqYEXSOZZwmZzytQA6v+DUUoVd1EJrmkYc3cD6v1ELlF5ACT1+zZGW49OyPHczquc9PxnPFor94YNpuOYJpRzn4gqewR1WcY5tS2fhTqVAnI3Y2JdSXV2npl7lCKlXKpatP8ohLrhZVP12jSGBLfmPtDk3XuZ4BmczKeeblBnCYRuU/m+xO6wgMlmFG1NdMciTXTGMMba798hC74/YJkoGQaH7McMblyZS5grv5o+3HGK4Y89P2Ryet9SAHLkhrIdcxRI1lSnuCJyTbPIXkgqdgNqabEKurDyLYGUq44zpCqILrv7mliJzRJNlKFp4L/robTBXJiPQ5fM0Hena7S76Rx/nS13VRrKXx/li7WTJ9m7UhUnrn/OJKdk+L9Dyc9aqqRn8YtRc80j9udQcZMss5Waf1BkXnld3xD+S1ZpqIojZd90wh0BX4WRsW0ag9Qz4q2SipV2zUNghjwr5xgopjQH7yhu63q56npR8euo+WFnp1S6zdSpMw+</source>
  </file>
  <file path="src\BLW\Interfaces\ActiveRecord.php" generated-path="src.BLW.Interfaces.ActiveRecord.html" hash="704f52d9981f249f6ea4532de8addd91" package="Default">
    <docblock line="0">
      <description>ActiveRecord.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <name>ActiveRecord</name>
      <full_name>\BLW\Interfaces\ActiveRecord</full_name>
      <docblock line="37">
        <description>Core ActiveRecord pattern interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All &lt;code&gt;DAO&lt;/code&gt; must either implement this interface or
extend the &lt;code&gt;\BLW\Type\ActiveRecord&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="43" package="BLW\Core">
        <name>table_name</name>
        <full_name>\BLW\Interfaces\ActiveRecord::table_name()</full_name>
        <docblock line="43">
          <description>Retrieves the name of the table for this Model.</description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="49" package="BLW\Core">
        <name>connection</name>
        <full_name>\BLW\Interfaces\ActiveRecord::connection()</full_name>
        <docblock line="49">
          <description>Retrieve the connection for this model.</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="\ActiveRecord\Connection">
            <type link="Connection.html">\ActiveRecord\Connection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="55" package="BLW\Core">
        <name>reestablish_connection</name>
        <full_name>\BLW\Interfaces\ActiveRecord::reestablish_connection()</full_name>
        <docblock line="55">
          <description>Re-establishes the database connection with a new connection.</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="\ActiveRecord\Connection">
            <type link="Connection.html">\ActiveRecord\Connection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="62" package="BLW\Core">
        <name>table</name>
        <full_name>\BLW\Interfaces\ActiveRecord::table()</full_name>
        <docblock line="62">
          <description>Returns the &lt;code&gt;ActiveRecord\Table&lt;/code&gt; object for this model.</description>
          <long-description></long-description>
          <tag name="note" line="62" description="Be sure to call in static scoping: static::table()"/>
          <tag name="return" line="62" description="" type="\BLW\Interfaces\ActiveRecord\Table">
            <type link="Table.html">\BLW\Interfaces\ActiveRecord\Table</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="70" package="BLW\Core">
        <name>create</name>
        <full_name>\BLW\Interfaces\ActiveRecord::create()</full_name>
        <docblock line="70">
          <description>Creates a model and saves it to the database.</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;Array of the models attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="70" description="&lt;p&gt;True if the validators should be run&lt;/p&gt;" type="boolean" variable="$validate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="70" description="" type="\BLW\Interfaces\Model">
            <type link="Model.html">\BLW\Interfaces\Model</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0">
          <name>$validate</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="87" package="BLW\Core">
        <name>save</name>
        <full_name>\BLW\Interfaces\ActiveRecord::save()</full_name>
        <docblock line="87">
          <description>Save the model to the database.</description>
          <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This function will automatically determine if an INSERT or UPDATE needs to occur.
If a validation or a callback for this model returns false, then the model will
not be saved and this will return false.&lt;/p&gt;

&lt;p&gt;If saving an existing model only data that has changed will be saved.&lt;/p&gt;
&lt;hr&gt;</long-description>
          <tag name="param" line="87" description="&lt;p&gt;Set to true or false depending on if you want the validators to run or not&lt;/p&gt;" type="boolean" variable="$validate">
            <type>boolean</type>
          </tag>
          <tag name="return" line="87" description="True if the model was saved to the database otherwise false" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$validate</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="93" package="BLW\Core">
        <name>delete</name>
        <full_name>\BLW\Interfaces\ActiveRecord::delete()</full_name>
        <docblock line="93">
          <description>Deletes this model from the database and returns true if successful.</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="131" package="BLW\Core">
        <name>delete_all</name>
        <full_name>\BLW\Interfaces\ActiveRecord::delete_all()</full_name>
        <docblock line="131">
          <description>Deletes records matching conditions in $options</description>
          <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;Does not instantiate models and therefore does not invoke callbacks&lt;/p&gt;

&lt;p&gt;Delete all using a hash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::delete_all(array('conditions' =&gt; array('name' =&gt; 'Tito')));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete all using an array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::delete_all(array('conditions' =&gt; array('name = ?', 'Tito')));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete all using a string:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::delete_all(array('conditions' =&gt; 'name = "Tito"));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An options array takes the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;conditions:&lt;/b&gt; Conditions using a string/hash/array&lt;/li&gt;
&lt;li&gt;&lt;b&gt;limit:&lt;/b&gt; Limit number of records to delete (MySQL &amp; Sqlite only)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;order:&lt;/b&gt; A SQL fragment for ordering such as: 'name asc', 'id desc, name asc' (MySQL &amp; Sqlite only)&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag name="param" line="131" description="&lt;p&gt;See Documentation&#13;&#10;return integer Number of rows affected&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="164" package="BLW\Core">
        <name>update_all</name>
        <full_name>\BLW\Interfaces\ActiveRecord::update_all()</full_name>
        <docblock line="164">
          <description>Updates records using set in $options</description>
          <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;Does not instantiate models and therefore does not invoke callbacks&lt;/p&gt;

&lt;p&gt;Update all using a hash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::update_all(array('set' =&gt; array('name' =&gt; "Bob")));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Update all using a string:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::update_all(array('set' =&gt; 'name = "Bob"'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An options array takes the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;set:&lt;/b&gt; String/hash of field names and their values to be updated with
&lt;li&gt;&lt;b&gt;conditions:&lt;/b&gt; Conditions using a string/hash/array&lt;/li&gt;
&lt;li&gt;&lt;b&gt;limit:&lt;/b&gt; Limit number of records to update (MySQL &amp; Sqlite only)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;order:&lt;/b&gt; A SQL fragment for ordering such as: 'name asc', 'id desc, name asc' (MySQL &amp; Sqlite only)&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag name="param" line="164" description="&lt;p&gt;See documentation&#13;&#10;return integer Number of rows affected&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="179" package="BLW\Core">
        <name>count</name>
        <full_name>\BLW\Interfaces\ActiveRecord::count()</full_name>
        <docblock line="179">
          <description>Get a count of qualifying records.</description>
          <long-description>&lt;h4&gt;Example:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::count(array('conditions' =&gt; 'amount &gt; 3.14159265'));
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;</long-description>
          <tag name="see" line="179" description="" link="\ActiveRecord\Model::find()"/>
          <tag name="param" line="179" description="" type="\BLW\Interfaces\..." variable="">
            <type link="....html">\BLW\Interfaces\...</type>
          </tag>
          <tag name="return" line="179" description="Number of records that matched the query" type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="196" package="BLW\Core">
        <name>exists</name>
        <full_name>\BLW\Interfaces\ActiveRecord::exists()</full_name>
        <docblock line="196">
          <description>Determine if a record exists.</description>
          <long-description>&lt;h4&gt;Example:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;
SomeModel::exists(123);
SomeModel::exists(array('conditions' =&gt; array('id=? and name=?', 123, 'Tito')));
SomeModel::exists(array('id' =&gt; 123, 'name' =&gt; 'Tito'));
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;</long-description>
          <tag name="see" line="196" description="" link="\ActiveRecord\Model::find()"/>
          <tag name="param" line="196" description="" type="\BLW\Interfaces\..." variable="">
            <type link="....html">\BLW\Interfaces\...</type>
          </tag>
          <tag name="return" line="196" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="203" package="BLW\Core">
        <name>first</name>
        <full_name>\BLW\Interfaces\ActiveRecord::first()</full_name>
        <docblock line="203">
          <description>Alias for self::find('first').</description>
          <long-description></long-description>
          <tag name="see" line="203" description="" link="\ActiveRecord\Model::find()"/>
          <tag name="return" line="203" description="The first matched record or null if not found" type="\BLW\Interfaces\Model">
            <type link="Model.html">\BLW\Interfaces\Model</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="210" package="BLW\Core">
        <name>last</name>
        <full_name>\BLW\Interfaces\ActiveRecord::last()</full_name>
        <docblock line="210">
          <description>Alias for self::find('last')</description>
          <long-description></long-description>
          <tag name="see" line="210" description="" link="\ActiveRecord\Model::find()"/>
          <tag name="return" line="210" description="The last matched record or null if not found" type="\BLW\Interfaces\Model">
            <type link="Model.html">\BLW\Interfaces\Model</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="269" package="BLW\Core">
        <name>find</name>
        <full_name>\BLW\Interfaces\ActiveRecord::find()</full_name>
        <docblock line="269">
          <description>Find records in the database.</description>
          <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;Finding by the primary key:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
# queries for the model with id=123
YourModel::find(123);

# queries for model with id in(1,2,3)
YourModel::find(1,2,3);

# finding by pk accepts an options array
YourModel::find(123,array('order' =&gt; 'name desc'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finding by using a conditions array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::find('first', array('conditions' =&gt; array('name=?','Tito'),
  'order' =&gt; 'name asc'))
YourModel::find('all', array('conditions' =&gt; 'amount &gt; 3.14159265'));
YourModel::find('all', array('conditions' =&gt; array('id in(?)', array(1,2,3))));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finding by using a hash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
YourModel::find(array('name' =&gt; 'Tito', 'id' =&gt; 1));
YourModel::find('first',array('name' =&gt; 'Tito', 'id' =&gt; 1));
YourModel::find('all',array('name' =&gt; 'Tito', 'id' =&gt; 1));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An options array can take the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;select:&lt;/b&gt; A SQL fragment for what fields to return such as: '*', 'people.*', 'first_name, last_name, id'&lt;/li&gt;
&lt;li&gt;&lt;b&gt;joins:&lt;/b&gt; A SQL join fragment such as: 'JOIN roles ON(roles.user_id=user.id)' or a named association on the model&lt;/li&gt;
&lt;li&gt;&lt;b&gt;include:&lt;/b&gt; TODO not implemented yet&lt;/li&gt;
&lt;li&gt;&lt;b&gt;conditions:&lt;/b&gt; A SQL fragment such as: 'id=1', array('id=1'), array('name=? and id=?','Tito',1), array('name IN(?)', array('Tito','Bob')),
array('name' =&gt; 'Tito', 'id' =&gt; 1)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;limit:&lt;/b&gt; Number of records to limit the query to&lt;/li&gt;
&lt;li&gt;&lt;b&gt;offset:&lt;/b&gt; The row offset to return results from for the query&lt;/li&gt;
&lt;li&gt;&lt;b&gt;order:&lt;/b&gt; A SQL fragment for order such as: 'name asc', 'name asc, id desc'&lt;/li&gt;
&lt;li&gt;&lt;b&gt;readonly:&lt;/b&gt; Return all the models in readonly mode&lt;/li&gt;
&lt;li&gt;&lt;b&gt;group:&lt;/b&gt; A SQL group by fragment&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</long-description>
          <tag name="throws" line="269" description="if no options are passed or finding by pk and no records matched" type="\ActiveRecord\RecordNotFound">
            <type link="RecordNotFound.html">\ActiveRecord\RecordNotFound</type>
          </tag>
          <tag name="return" line="269" description="&lt;p&gt;An array of records found if doing a find_all otherwise a&#13;&#10;single Model object or null if it wasn't found. NULL is only return when&#13;&#10;doing a first/last find. If doing an all find and no records matched this&#13;&#10;will return an empty array.&lt;/p&gt;" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="279" package="BLW\Core">
        <name>find_by_pk</name>
        <full_name>\BLW\Interfaces\ActiveRecord::find_by_pk()</full_name>
        <docblock line="279">
          <description>Finder method which will find by a single or array of primary keys for this model.</description>
          <long-description></long-description>
          <tag name="see" line="279" description="" link="\ActiveRecord\Model::find()"/>
          <tag name="param" line="279" description="&lt;p&gt;An array containing values for the pk&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="279" description="&lt;p&gt;An options array&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="279" description="" type="\BLW\Interfaces\Model">
            <type link="Model.html">\BLW\Interfaces\Model</type>
          </tag>
          <tag name="throws" line="279" description="if a record could not be found" type="\ActiveRecord\RecordNotFound">
            <type link="RecordNotFound.html">\ActiveRecord\RecordNotFound</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="294" package="BLW\Core">
        <name>find_by_sql</name>
        <full_name>\BLW\Interfaces\ActiveRecord::find_by_sql()</full_name>
        <docblock line="294">
          <description>Find using a raw SELECT query.</description>
          <long-description>&lt;h4&gt;Example:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
YourModel::find_by_sql("SELECT * FROM people WHERE name=?",array('Tito'));
YourModel::find_by_sql("SELECT * FROM people WHERE name='Tito'");
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;</long-description>
          <tag name="param" line="294" description="&lt;p&gt;The raw SELECT query&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="294" description="&lt;p&gt;An array of values for any parameters that needs to be bound&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="294" description="An array of models" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="302" package="BLW\Core">
        <name>query</name>
        <full_name>\BLW\Interfaces\ActiveRecord::query()</full_name>
        <docblock line="302">
          <description>Helper method to run arbitrary queries against the model's database connection.</description>
          <long-description></long-description>
          <tag name="param" line="302" description="&lt;p&gt;SQL to execute&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="302" description="&lt;p&gt;Bind values, if any, for the query&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="302" description="A PDOStatement object" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
    </interface>
    <source>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</source>
  </file>
  <file path="src\BLW\Type\LogicException.php" generated-path="src.BLW.Type.LogicException.html" hash="ce3785b9c58b8e6b1e6b68527f3d7390" package="Default">
    <docblock line="0">
      <description>LogicException.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="30" package="BLW\Core">
      <extends>\LogicException</extends>
      <implements>\BLW\Interfaces\Exception</implements>
      <name>LogicException</name>
      <full_name>\BLW\Type\LogicException</full_name>
      <docblock line="30">
        <description>Core exception class for Logic Exceptions.</description>
        <long-description></long-description>
        <tag name="package" line="30" description="BLW\Core"/>
        <tag name="api" line="30" description="BLW"/>
        <tag name="since" line="30" description="0.1.0"/>
        <tag name="author" line="30" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="30" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="36" package="BLW\Core">
        <name>GetFields</name>
        <full_name>\BLW\Type\LogicException::GetFields()</full_name>
        <docblock line="36">
          <description>Generates fields to replace in messege string.</description>
          <long-description></long-description>
          <tag name="return" line="36" description="Array of fields to replace in messege text." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9VNtO20AQfS4S/zCVatmOUjuBPiBSaCgNCCmlEgQhNabRZj2+FGdt7a7bRpR/76yXGNNG3QfLO7czc87Y7z9UWbW7E/Z6uzvQg2mZ5nzyi2Ol81IE5IPf8Ak57B30YW8w3DdRTeRpWa1lnmYaPO43rrf0OIDViZrtX1WTiavgaymwTZhluQJV1pIjJHmBYK718jtyDboEnSF8vphBkXMUCunOtAlZ1iIuMG5K/Mx1Ro7nOryMqY5okpua04vTyeX1JGhRx8Zso+2dt31v6xTGG3zqxRjC3Z2WnVfjivF7liJ8nN5Gp6VEa/2BUhFbMAwGwcCaWK2zUsItKzRK+KLVui4YvP9Z2rfxiim9LyvEQN8fP+EItkJFCLb8bF3hCPLEex1jkguMPZfMru8/aGo/RblAKUvpuTdCsQSBcY5KQZkAr5UuV0TkUjK5dvuTxc315Gpxe3J1eXF57o8k6lqK0WNnMjDDAG50B14wqpXQBM1CQLsRKrAsbSMCxqzKjcVeVC5olEEwtJzAhpOW9v/RYXQQ95BpXR2GYdcdVrI0O6NCQgoNHEztpE80sqXSktFS2SFebjTNqFHECqK/7PmqKnCFQpPLDHUhSLiExFBRG7S780AYdCxr5vTgHAVKppHoyrGgyrTLEqvC6EibSZIqJKKop1ykQZs2tioAk5Kt4aR5knb/raGp+bZCaF+qekkbC0kteDPHOeqzpobn24Cnls15M5OmojlH8MZ8R2+PU9SN1fNHncATmdaWjCOoqHG9kJ7Nng/u5i6TqXLv+qBljSbvObOSmC5WTPNswYrCc8NvkXoY9t89RtE8iqPoLlK9o2N6eEHPD1duv4PVfX9ZtcuV92w2x3UyZDFKx4WjY7o1ojuHh45hxPEc06rjH7ovs/qudbhgsoz29CPxqJsXDc2Hd/4/eRagQSNNf7DCG3eYabzulrSmHQu3JW0j37ZMzmqF8RNiI0biuXDaWGG5Boc+ekFfu0Bw4sAM0Cp7Rv8+z+9aphTm+R2Qjez0N3j8A0dQxjk=</source>
  </file>
  <file path="src\BLW\Type\Element.php" generated-path="src.BLW.Type.Element.html" hash="0234f46b841f1e0ab68319897265b754" package="Default">
    <docblock line="0">
      <description>Element.php | Nov 29, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="43" package="BLW\Core">
      <extends>\BLW\Type\Iterator</extends>
      <implements>\BLW\Interfaces\Element</implements>
      <name>Element</name>
      <full_name>\BLW\Type\Element</full_name>
      <docblock line="43">
        <description>Core BLW DOM Element object.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW DOMobject. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="43" description="BLW\Core"/>
        <tag name="api" line="43" description="BLW"/>
        <tag name="version" line="43" description="1.0.0"/>
        <tag name="since" line="43" description="0.1.0"/>
        <tag name="author" line="43" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="43" description="mAsT3RpEE's Zone &gt; Projects &gt; BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="56" package="BLW\Core">
        <name>ValidateOptions</name>
        <full_name>\BLW\Type\Element::ValidateOptions()</full_name>
        <docblock line="56">
          <description>Overloads parent function</description>
          <long-description></long-description>
          <tag name="see" line="56" description="Object::ValidateOptions()" link="\BLW\Type\Object::ValidateOptions()"/>
          <tag name="param" line="56" description="&lt;p&gt;Options to validate&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="56" description="Return &lt;code&gt;true&lt;/code&gt; if options are valid &lt;code&gt;false&lt;/code&gt; otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="67" package="BLW\Core">
        <name>BuildOptions</name>
        <full_name>\BLW\Type\Element::BuildOptions()</full_name>
        <docblock line="67">
          <description>Builds Options for current object.</description>
          <long-description></long-description>
          <tag name="see" line="67" description="Objecct::__contruct()" link="\BLW\Type\Object::__construct()"/>
          <tag name="param" line="67" description="&lt;p&gt;Options to build&lt;/p&gt;" type="mixed" variable="$Options">
            <type>mixed</type>
          </tag>
          <tag name="return" line="67" description="Returns built options." type="\stdClass">
            <type link="stdClass.html">\stdClass</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="117" package="BLW\Core">
        <name>doCreate</name>
        <full_name>\BLW\Type\Element::doCreate()</full_name>
        <docblock line="117">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="return" line="117" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="149" package="BLW\Core">
        <name>doSerialize</name>
        <full_name>\BLW\Type\Element::doSerialize()</full_name>
        <docblock line="149">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="return" line="149" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="177" package="BLW\Core">
        <name>doUnSerialize</name>
        <full_name>\BLW\Type\Element::doUnSerialize()</full_name>
        <docblock line="177">
          <description>Hook that is called just after an object is unserialized.</description>
          <long-description></long-description>
          <tag name="return" line="177" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="206" package="BLW\Core">
        <name>Document</name>
        <full_name>\BLW\Type\Element::Document()</full_name>
        <docblock line="206">
          <description>Returns the current elements document or creates one if it doesnt exist.</description>
          <long-description></long-description>
          <tag name="api" line="206" description="BLW"/>
          <tag name="since" line="206" description="1.0.0"/>
          <tag name="return" line="206" description="Current Object's &lt;code&gt;DOMDocument&lt;/code&gt;." type="\DOMDocument">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="228" package="BLW\Core">
        <name>LoadHTML</name>
        <full_name>\BLW\Type\Element::LoadHTML()</full_name>
        <docblock line="228">
          <description>Converts HTML string into DOMNodes and ataches them to the object.</description>
          <long-description></long-description>
          <tag name="api" line="228" description="BLW"/>
          <tag name="since" line="228" description="1.0.0"/>
          <tag name="param" line="228" description="&lt;p&gt;HTML string to load.&lt;/p&gt;" type="string" variable="$HTML">
            <type>string</type>
          </tag>
          <tag name="return" line="228" description="$this" type="\BLW\Interfaces\Element">
            <type link="Element.html">\BLW\Interfaces\Element</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$HTML</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="269" package="BLW\Core">
        <name>AddDocument</name>
        <full_name>\BLW\Type\Element::AddDocument()</full_name>
        <docblock line="269">
          <description>Loads Nodes from a DOMDocument.</description>
          <long-description></long-description>
          <tag name="api" line="269" description="BLW"/>
          <tag name="since" line="269" description="1.0.0"/>
          <tag name="param" line="269" description="&lt;p&gt;Document to Add to current Object.&lt;/p&gt;" type="\DOMDocument" variable="$Document">
            <type link="DOMDocument.html">\DOMDocument</type>
          </tag>
          <tag name="param" line="269" description="&lt;p&gt;Wheather to load the Entire document or just its body.&lt;/p&gt;" type="string" variable="$isDocument">
            <type>string</type>
          </tag>
          <tag name="return" line="269" description="$this" type="\BLW\Interfaces\Element">
            <type link="Element.html">\BLW\Interfaces\Element</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Document</name>
          <default></default>
          <type>\DOMDocument</type>
        </argument>
        <argument line="0">
          <name>$isDocument</name>
          <default>false</default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="291" package="BLW\Core">
        <name>AddNode</name>
        <full_name>\BLW\Type\Element::AddNode()</full_name>
        <docblock line="291">
          <description>Adds a DOMNode to the current object.</description>
          <long-description></long-description>
          <tag name="api" line="291" description="BLW"/>
          <tag name="since" line="291" description="1.0.0"/>
          <tag name="param" line="291" description="&lt;p&gt;Node to Add to Object.&lt;/p&gt;" type="\DOMNode" variable="$Node">
            <type link="DOMNode.html">\DOMNode</type>
          </tag>
          <tag name="return" line="291" description="$this" type="\BLW\Interfaces\Element">
            <type link="Element.html">\BLW\Interfaces\Element</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Node</name>
          <default></default>
          <type>\DOMNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="318" package="BLW\Core">
        <name>GetHTML</name>
        <full_name>\BLW\Type\Element::GetHTML()</full_name>
        <docblock line="318">
          <description>Returns HTML of current element.</description>
          <long-description></long-description>
          <tag name="api" line="318" description="BLW"/>
          <tag name="since" line="318" description="1.0.1"/>
          <tag name="note" line="318" description="Raises &lt;code&gt;E_USER_WARNING&lt;/code&gt; when current node list is empty."/>
          <tag name="return" line="318" description="The node html" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="356" package="BLW\Core">
        <name>PrintHTML</name>
        <full_name>\BLW\Type\Element::PrintHTML()</full_name>
        <docblock line="356">
          <description>Echos element. (Needed for chaining)</description>
          <long-description></long-description>
          <tag name="api" line="356" description="BLW"/>
          <tag name="since" line="356" description="1.0.1"/>
          <tag name="param" line="356" description="&lt;p&gt;Whether object is a document element.&lt;/p&gt;" type="bool" variable="$isDocument">
            <type>bool</type>
          </tag>
          <tag name="return" line="356" description="$this" type="\BLW\Interfaces\Element">
            <type link="Element.html">\BLW\Interfaces\Element</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="371" package="BLW\Core">
        <name>tag</name>
        <full_name>\BLW\Type\Element::tag()</full_name>
        <docblock line="371">
          <description>Set / Get Current elements tag.</description>
          <long-description></long-description>
          <tag name="note" line="371" description="Raises &lt;code&gt;E_USER_ERROR&lt;/code&gt; if default node does not exist."/>
          <tag name="param" line="371" description="&lt;p&gt;New tag name. (&lt;code&gt;[A-Za-z][\w_-]*&lt;/code&gt;)&lt;/p&gt;&#10;" type="string" variable="$Tag">
            <type>string</type>
          </tag>
          <tag name="return" line="371" description="| \BLW\Interfaces\Element Returns current tagName string or $this" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Tag</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="441" package="BLW\Core">
        <name>filter</name>
        <full_name>\BLW\Type\Element::filter()</full_name>
        <docblock line="441">
          <description>Filters the list of nodes with a CSS selector.</description>
          <long-description></long-description>
          <tag name="api" line="441" description="BLW"/>
          <tag name="since" line="441" description="1.0.0"/>
          <tag name="link" line="441" description="Symfony &gt; CssSelector" link="http://symfony.com/doc/current/components/css_selector.html"/>
          <tag name="param" line="441" description="&lt;p&gt;A CSS selector&lt;/p&gt;" type="string" variable="$Selector">
            <type>string</type>
          </tag>
          <tag name="return" line="441" description="List of matched nodes." type="\DOMNodeList">
            <type link="DOMNodeList.html">\DOMNodeList</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Selector</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="456" package="BLW\Core">
        <name>__invoke</name>
        <full_name>\BLW\Type\Element::__invoke()</full_name>
        <docblock line="456">
          <description>Filters the list of nodes with a CSS selector.</description>
          <long-description></long-description>
          <tag name="api" line="456" description="BLW"/>
          <tag name="since" line="456" description="1.0.0"/>
          <tag name="see" line="456" description="" link="\BLW\Type\Element::filter()"/>
          <tag name="see" line="456" description="" link="\BLW\Type\Element::filterXPath()"/>
          <tag name="param" line="456" description="&lt;p&gt;A CSS / XPath selector&lt;/p&gt;&#10;" type="string" variable="$Selector">
            <type>string</type>
          </tag>
          <tag name="param" line="456" description="&lt;p&gt;Whether &lt;code&gt;$Selector&lt;/code&gt; is a CSS selector or XPAth.&lt;/p&gt;&#10;" type="bool" variable="$isCSSSelector">
            <type>bool</type>
          </tag>
          <tag name="return" line="456" description="List of matched nodes." type="\DOMNodeList">
            <type link="DOMNodeList.html">\DOMNodeList</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Selector</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$isCSSSelector</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="469" package="BLW\Core">
        <name>__toString</name>
        <full_name>\BLW\Type\Element::__toString()</full_name>
        <docblock line="469">
          <description>All objects must have a string representation.</description>
          <long-description></long-description>
          <tag name="return" line="469" description="String value of object." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\BLW.php" generated-path="src.BLW.BLW.html" hash="9a16ab3cb07d57e8887f851a36b2701c" package="Default">
    <docblock line="0">
      <description>BLW.php | Dec 31, 2013</description>
      <long-description>&lt;h3&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Defines global BLW class used for configuration, initialization
and object creation.&lt;/p&gt;

&lt;hr&gt;

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="author" line="0" description="Walter Otsyula" link="mailto:wotsyula@mast3rpee.tk"/>
      <tag name="copyright" line="0" description="2013-2018 mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <constant namespace="" line="27" package="Default">
      <name>BLW</name>
      <full_name>\\BLW</full_name>
      <value>'1.0.0'</value>
      <docblock line="27">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="202" package="Default">
      <name>BLW_ . $k</name>
      <full_name>\\BLW_ . $k</full_name>
      <value>$v</value>
      <docblock line="202">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="222" package="Default">
      <name>BLW_LIB_PHAR</name>
      <full_name>\\BLW_LIB_PHAR</full_name>
      <value>dirname(__DIR__)</value>
      <docblock line="222">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="223" package="Default">
      <name>BLW_APP_PHAR</name>
      <full_name>\\BLW_APP_PHAR</full_name>
      <value>BLW_LIB_PHAR</value>
      <docblock line="223">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="225" package="Default">
      <name>BLW_ASSETS_DIR</name>
      <full_name>\\BLW_ASSETS_DIR</full_name>
      <value>BLW_PLUGIN_DIR . DIRECTORY_SEPARATOR . 'assets'</value>
      <docblock line="225">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="226" package="Default">
      <name>BLW_ASSETS_URL</name>
      <full_name>\\BLW_ASSETS_URL</full_name>
      <value>BLW_PLUGIN_URL . '/assets'</value>
      <docblock line="226">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="227" package="Default">
      <name>BLW_FRONTEND_DIR</name>
      <full_name>\\BLW_FRONTEND_DIR</full_name>
      <value>BLW_APP_PHAR . sprintf('%1$ssrc%1$sBLW%1$sFrontend', DIRECTORY_SEPARATOR)</value>
      <docblock line="227">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="228" package="Default">
      <name>BLW_FRONTEND_URL</name>
      <full_name>\\BLW_FRONTEND_URL</full_name>
      <value>BLW_ASSETS_URL . '/BLW.Frontend.'</value>
      <docblock line="228">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="229" package="Default">
      <name>BLW_BACKEND_DIR</name>
      <full_name>\\BLW_BACKEND_DIR</full_name>
      <value>BLW_APP_PHAR . sprintf('%1$ssrc%1$sBLW%1$sBackend', DIRECTORY_SEPARATOR)</value>
      <docblock line="229">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="230" package="Default">
      <name>BLW_BACKEND_URL</name>
      <full_name>\\BLW_BACKEND_URL</full_name>
      <value>BLW_ASSETS_URL . '/BLW.Backend.'</value>
      <docblock line="230">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <constant namespace="" line="237" package="Default">
      <name>BLW_EXTENTION</name>
      <full_name>\\BLW_EXTENTION</full_name>
      <value>''</value>
      <docblock line="237">
        <description></description>
        <long-description></long-description>
      </docblock>
    </constant>
    <class final="true" abstract="false" namespace="" line="40" package="BLW\Core">
      <extends>\BLW\Type\Object</extends>
      <name>BLW</name>
      <full_name>\BLW</full_name>
      <docblock line="40">
        <description>Main class used to configure, initialize and run blw library.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;All Objects must extend this class or
implement the &lt;code&gt;\BLW\Interface\Object&lt;/code&gt; interface.&lt;/p&gt;

&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Whenever &lt;code&gt;$DefaultOptions&lt;/code&gt; is used you must
also define &lt;code&gt;$_Initialized&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object must implement dynamic properties&lt;/p&gt;
&lt;hr&gt;</long-description>
        <tag name="package" line="40" description="BLW\Core"/>
        <tag name="api" line="40" description="BLW"/>
        <tag name="since" line="40" description="1.0.0"/>
        <tag name="author" line="40" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="40" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="public" line="45" namespace="" package="BLW\Core">
        <name>$Base</name>
        <default>NULL</default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="45" description="&lt;p&gt;Base object that all others should attatch to.&lt;/p&gt;" type="\BLW\Module\Object" variable="$Base">
            <type link="Object.html">\BLW\Module\Object</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" line="50" namespace="" package="BLW\Core">
        <name>$Self</name>
        <default>NULL</default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;Current / Last object.&lt;/p&gt;&#10;" type="\BLW\Interfaces\Object" variable="$Self">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" line="55" namespace="" package="BLW\Core">
        <name>$_Actions</name>
        <default>NULL</default>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="55" description="&lt;p&gt;Iterator with all parsed actions.&lt;/p&gt;" type="\BLW\Model\ActionHandler" variable="$_Actions">
            <type link="ActionHandler.html">\BLW\Model\ActionHandler</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="61" package="BLW\Core">
        <name>LoadInterfaces</name>
        <full_name>\BLW::LoadInterfaces()</full_name>
        <docblock line="61">
          <description>Loads core BLW Library Interfaces for performance.</description>
          <long-description></long-description>
          <tag name="return" line="61" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="82" package="BLW\Core">
        <name>LoadTypes</name>
        <full_name>\BLW::LoadTypes()</full_name>
        <docblock line="82">
          <description>Loads core BLW Library Types for performance.</description>
          <long-description></long-description>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="106" package="BLW\Core">
        <name>LoadModels</name>
        <full_name>\BLW::LoadModels()</full_name>
        <docblock line="106">
          <description>Loads core BLW Library Models for performance.</description>
          <long-description></long-description>
          <tag name="return" line="106" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="122" package="BLW\Core">
        <name>LoadLibraries</name>
        <full_name>\BLW::LoadLibraries()</full_name>
        <docblock line="122">
          <description>Loads core BLW Library classes performance.</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="136" package="BLW\Core">
        <name>Config</name>
        <full_name>\BLW::Config()</full_name>
        <docblock line="136">
          <description>Wrapper for BLW configuration array.</description>
          <long-description></long-description>
          <tag name="api" line="136" description="BLW"/>
          <tag name="since" line="136" description="1.0.0"/>
          <tag name="param" line="136" description="&lt;p&gt;Reset value of Configuration.&lt;/p&gt;" type="bool" variable="$Reset">
            <type>bool</type>
          </tag>
          <tag name="return" line="136" description="Returns a static array that contains all configuration." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Reset</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="160" package="BLW\Core">
        <name>Error</name>
        <full_name>\BLW::Error()</full_name>
        <docblock line="160">
          <description>Overloards PHP's die() method.</description>
          <long-description></long-description>
          <tag name="link" line="160" description="die()" link="http://www.php.net/manual/en/function.die.php"/>
          <tag name="param" line="160" description="&lt;p&gt;Title of error messege.&lt;/p&gt;" type="string" variable="$Title">
            <type>string</type>
          </tag>
          <tag name="param" line="160" description="&lt;p&gt;Body of error messege.&lt;/p&gt;" type="string" variable="$Message">
            <type>string</type>
          </tag>
          <tag name="return" line="160" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="" line="181" package="BLW\Core">
        <name>LoadConfigINI</name>
        <full_name>\BLW::LoadConfigINI()</full_name>
        <docblock line="181">
          <description>Loads &lt;code&gt;.ini&lt;/code&gt; file.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="&lt;p&gt;Name of file to load (including &lt;code&gt;.ini&lt;/code&gt;).&lt;/p&gt;&#10;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="return" line="181" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default>'BLW.ini'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="247" package="BLW\Core">
        <name>Configure</name>
        <full_name>\BLW::Configure()</full_name>
        <docblock line="247">
          <description>Configures BLW Libriary.</description>
          <long-description></long-description>
          <tag name="api" line="247" description="BLW"/>
          <tag name="since" line="247" description="0.1.0"/>
          <tag name="return" line="247" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="268" package="BLW\Core">
        <name>Initialize</name>
        <full_name>\BLW::Initialize()</full_name>
        <docblock line="268">
          <description>Initializes BlW Library.</description>
          <long-description></long-description>
          <tag name="api" line="268" description="BLW"/>
          <tag name="since" line="268" description="0.1.0"/>
          <tag name="return" line="268" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="300" package="BLW\Core">
        <name>doAction</name>
        <full_name>\BLW::doAction()</full_name>
        <docblock line="300">
          <description>Handles converting Events into actions.</description>
          <long-description></long-description>
          <tag name="param" line="300" description="&lt;p&gt;Event to test and convert.&lt;/p&gt;" type="\BLW\Interfaces\Event" variable="$Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
          <tag name="return" line="300" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interfaces\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="343" package="BLW\Core">
        <name>AddAction</name>
        <full_name>\BLW::AddAction()</full_name>
        <docblock line="343">
          <description>Adds an action.</description>
          <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;Actions are events that are triggered based on object
events (ie Create).&lt;p&gt;

&lt;p&gt;They are specific to a certain object id. An eample is
&lt;code&gt;AjaxElement&lt;/code&gt; object that uses actions to handle
ajax requests.&lt;/p&gt;

&lt;hr&gt;</long-description>
          <tag name="param" line="343" description="&lt;p&gt;Event to turn into an action.&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="352" package="BLW\Core">
        <name>RemAction</name>
        <full_name>\BLW::RemAction()</full_name>
        <docblock line="352">
          <description>Removes an action.</description>
          <long-description></long-description>
          <tag name="param" line="352" description="" type="string" variable="$Action">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="366" package="BLW\Core">
        <name>O</name>
        <full_name>\BLW::O()</full_name>
        <docblock line="366">
          <description>Creates a BLW Library Object.</description>
          <long-description></long-description>
          <tag name="api" line="366" description="BLW"/>
          <tag name="since" line="366" description="0.1.0"/>
          <tag name="param" line="366" description="&lt;p&gt;Name of object to create.&lt;/p&gt;" type="string" variable="$Class">
            <type>string</type>
          </tag>
          <tag name="param" line="366" description="&lt;p&gt;Options passed to object.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="param" line="366" description="&lt;p&gt;Load extention.&lt;/p&gt;" type="bool" variable="$isExtention">
            <type>bool</type>
          </tag>
          <tag name="return" line="366" description="Returns &lt;code&gt;NULL&lt;/code&gt; if the class does not exist." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0">
          <name>$isExtention</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Model\FileException.php" generated-path="src.BLW.Model.FileException.html" hash="6a9f5c783a4aa7f20272e6e8ae18fbe4" package="Default">
    <docblock line="0">
      <description>FileException.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="true" abstract="false" namespace="BLW\Model" line="31" package="BLW\Core">
      <extends>\BLW\Type\RuntimeException</extends>
      <name>FileException</name>
      <full_name>\BLW\Model\FileException</full_name>
      <docblock line="31">
        <description>Makes reporting errors just easy.</description>
        <long-description></long-description>
        <tag name="package" line="31" description="BLW\Core"/>
        <tag name="api" line="31" description="BLW"/>
        <tag name="version" line="31" description="1.0.0"/>
        <tag name="since" line="31" description="1.0.0"/>
        <tag name="author" line="31" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="31" description="Language Reference" link="http://php.net/InvalidArgumentException"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="49" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Model\FileException::__construct()</full_name>
        <docblock line="49">
          <description>Overloads parent constructor</description>
          <long-description></long-description>
          <tag name="param" line="49" description="&lt;p&gt;File exception is associated with.&lt;/p&gt;" type="int" variable="$File">
            <type>int</type>
          </tag>
          <tag name="param" line="49" description="&lt;ul&gt;&#10;&lt;li&gt;&lt;b&gt;%header%&lt;/b&gt;: &lt;code&gt;class::function(arguments):&lt;/code&gt;.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%argno%&lt;/b&gt;: Invalid argument position.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%args%&lt;/b&gt;: All arguments as a string.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%class%&lt;/b&gt;: Class of of function.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%func%&lt;/b&gt;: Function with invalid argument.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="&lt;p&gt;Exception code.&lt;/p&gt;" type="int" variable="$code">
            <type>int</type>
          </tag>
          <tag name="param" line="49" description="&lt;p&gt;Previous Exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type link="Exception.html">\Exception</type>
          </tag>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$message</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$code</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$previous</name>
          <default>NULL</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <source>eJx9VV1v2zgQfD7/ii1gQ1LgSmnzUviryeWcIoCTHtwEAe5yMGhpbbORSYGk0hpt//stKUp2bDdCkIjkzuzucLQZfCxWRSs5OWnBCVzxHMffUywMlyKmA/gJf2EK7z904f3puzOKsWGXstgovlwZCNPIHbylXx9gfaHvzqbFeBxo+EcK9OF3K65By1KlCAvKAHZZzr9iasBIMCuEm+s7yHmKQiOtmbEh81JkOWaW4Rs3K9rf0qQyIxrhsI5ycn05vv0yjn3Kc7tZxbpl2lR8pEY4r1NTGbROWrUe5wVLn9gS4c/Jg1s/o9IkDbyLT+NTt8NKs5IKHlhuUMFnozdlzmDwTVZv52umzZkqEGPzNHLkgq1RE7FjfbyhTvI+8EX4JsMFF5iFAe0HUfTDUMVLVDNUSqowuBeaLRBYmqLWIBeQltrINek2V0xtgu54dv9lPJ09XExvr28/RX2FplSi/6tp54Y9oQaFhVSGiyU4Yg1fiQeQ6U283/PjpVSVQqzgr4iguaB2DkRptH5FDyu+eIKVMUUvSchysUCTXItnlvPsQi3LNQrTeBImTCxLW90UF6hQuPtNWiQcyyHNGSnzwsSA3w2KTMOjbeduU+DjtBSGr7chrR8toMdpZJ8T+Ewd5pIRqmCUw5DdhDaqTI1UPqYOJbUUW5MVDbRtYpedktbpybJUk0w5M5g5H8d7UCK2d9EmU2hqrD4dlPmoec/5aDAfdVbIMlSdQTIf9WBgv4GRa7nXW5QitflC5hXTUW+QuIh4kBB8n4rihPRMXmyosVBIzd0E+B1Ue+RFnjco2ygw385xpCvWQy/dXZGL6aeu/jjKnnrQlQ+sBgLfq3sPnuwouHtNbnZsDWKX+3fyuD1uFwqfuSw1/F2/bCdkA6s+NXiWPPN7iftblHOaLU2DMJs1VgqdX7rNxcMQbu8nk64vcAin3eN1VHGR46+sax++gJDrmSjzPKwpo2gn4I+dREFtJW9XOwd6EHbs1OxElbp+zoSd6qUTxUG/IaOZUr+2p1jkNM0qD+w+Q2jbmf129AnNFcc802HUP477N6hyB/853DlJRHdbSfQKxpdGqCF9aTNL4TGt3UI+gi7IlWYRBh0ZdKv/DgWqtfbRL8N7EHhrBc1+f6fhWkdKSnXOVFUTfXqKbWZPuCHW3TqjLlRHRFni4WFzW/3DFPHwoOeUlRoz6nmnpIOZ1uu9cJqn897qbs3kc/5q0YV6DxME+/8DJBN3Bw==</source>
  </file>
  <file path="src\BLW\Type\Mediator.php" generated-path="src.BLW.Type.Mediator.html" hash="5f3b87155b919eb2243253f63f33040c" package="Default">
    <docblock line="0">
      <description>Mediator.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="37" package="BLW\Core">
      <extends>\BLW\Type\Adaptor</extends>
      <implements>\BLW\Interfaces\Mediator</implements>
      <name>Mediator</name>
      <full_name>\BLW\Type\Mediator</full_name>
      <docblock line="37">
        <description>Core Mediator pattern Interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Mediator must either extend this class or
implement the &lt;code&gt;\BLW\Interfaces\Mediator&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
    </class>
    <source>eJx9Uu9v2jAQ/Y7E/3D7xA91hJZ9qErEYCyakCiTKBXShISMcyEeiW3Zl3Wo2/8+O4FQaahfEt89393zexd+1qluNoJut9mALjxiLBgp03NZ+ANfkcPd/Q3c9W8HHi/vTJU+GrFPCdq8U0If3ece8oldDZY6iloWfiiJdcEqFRasKgxHSESG4MNi9xM5ASmgFOFxtoJMcJQWXczIX9kVMs4wLlu8CEodcOnDVez6yLK47DmfTaPFU9Srp459urpdxbzmfY0pjM/zHRefCJqNiy5jzfiB7RG+zNebqTKnkl9orFASbnv9Xr9KsYJSZWDNMkID38kei4xB+KKq0zhnlgZGI/boMDrNkSxH6yZU7VdHjUMQSftDjImQGLdbLt3qdF7J0d+j2aIxyrRbz9KyBIFxjtaCSoAXllTuhNwZZo6tm2j7/BQtt+vJcjFbfOsMDVJh5PDv25f5x9S2g2bkaEuYSfdLHKOLnmH6abRQ5ER6CAN3vgB6NMmyS4/csQB0hrn3429CGVfO8Yx5mqYsErnOMEdJpYOht3O08a+vJ9vNuWMYlLCz+wopM3rPIKaFz1SBFdJJ/L9X9Tq8Z5PfD3mAlEg/BMFbONBG+V22gZsU+HEwrxw42ct2lgxzy14pUAtViWNhc3Z9M4mZ9kitzgm8Ikqz8dpslE5WrgKZAof/ADFqLPo=</source>
  </file>
  <file path="vendor\guzzle\http\Guzzle\Http\Client.php" generated-path="vendor.guzzle.http.Guzzle.Http.Client.html" hash="d953cec8d27e39b81cdc1644c49411e1" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="Guzzle\Http" line="24" package="Default">
      <extends>\Guzzle\Common\AbstractHasDispatcher</extends>
      <implements>\Guzzle\Http\ClientInterface</implements>
      <name>Client</name>
      <full_name>\Guzzle\Http\Client</full_name>
      <docblock line="24">
        <description>HTTP client</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="Guzzle\Http" line="27" package="Default">
        <name>REQUEST_PARAMS</name>
        <full_name>\Guzzle\Http\Client::REQUEST_PARAMS</full_name>
        <value>'request.params'</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="deprecated" line="27" description="Use [request.options][params]"/>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="29" package="Default">
        <name>REQUEST_OPTIONS</name>
        <full_name>\Guzzle\Http\Client::REQUEST_OPTIONS</full_name>
        <value>'request.options'</value>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="30" package="Default">
        <name>CURL_OPTIONS</name>
        <full_name>\Guzzle\Http\Client::CURL_OPTIONS</full_name>
        <value>'curl.options'</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="31" package="Default">
        <name>SSL_CERT_AUTHORITY</name>
        <full_name>\Guzzle\Http\Client::SSL_CERT_AUTHORITY</full_name>
        <value>'ssl.certificate_authority'</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Guzzle\Http" line="32" package="Default">
        <name>DISABLE_REDIRECTS</name>
        <full_name>\Guzzle\Http\Client::DISABLE_REDIRECTS</full_name>
        <value>\Guzzle\Http\RedirectPlugin::DISABLE</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" line="35" namespace="Guzzle\Http" package="Default">
        <name>$defaultHeaders</name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;Default HTTP headers to set on each request&lt;/p&gt;" type="\Guzzle\Common\Collection" variable="">
            <type link="Collection.html">\Guzzle\Common\Collection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="38" namespace="Guzzle\Http" package="Default">
        <name>$userAgent</name>
        <default></default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;The user agent string to set on each request&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="41" namespace="Guzzle\Http" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="&lt;p&gt;Parameter object holding configuration data&lt;/p&gt;" type="\Guzzle\Common\Collection" variable="">
            <type link="Collection.html">\Guzzle\Common\Collection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="44" namespace="Guzzle\Http" package="Default">
        <name>$baseUrl</name>
        <default></default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="44" description="&lt;p&gt;Base URL of the client&lt;/p&gt;" type="\Guzzle\Http\Url" variable="">
            <type link="Url.html">\Guzzle\Http\Url</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="47" namespace="Guzzle\Http" package="Default">
        <name>$curlMulti</name>
        <default></default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;CurlMulti object used internally&lt;/p&gt;" type="\Guzzle\Http\Curl\CurlMultiInterface" variable="">
            <type link="CurlMultiInterface.html">\Guzzle\Http\Curl\CurlMultiInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="50" namespace="Guzzle\Http" package="Default">
        <name>$uriTemplate</name>
        <default></default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;URI template owned by the client&lt;/p&gt;" type="\Guzzle\Parser\UriTemplate\UriTemplateInterface" variable="">
            <type link="UriTemplateInterface.html">\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" line="53" namespace="Guzzle\Http" package="Default">
        <name>$requestFactory</name>
        <default></default>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="53" description="&lt;p&gt;Request factory used by the client&lt;/p&gt;" type="\Guzzle\Http\Message\RequestFactoryInterface" variable="">
            <type link="RequestFactoryInterface.html">\Guzzle\Http\Message\RequestFactoryInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Guzzle\Http" line="55" package="Default">
        <name>getAllEvents</name>
        <full_name>\Guzzle\Http\Client::getAllEvents()</full_name>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="66" package="Default">
        <name>__construct</name>
        <full_name>\Guzzle\Http\Client::__construct()</full_name>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="66" description="&lt;p&gt;Base URL of the web service&lt;/p&gt;" type="string" variable="$baseUrl">
            <type>string</type>
          </tag>
          <tag name="param" line="66" description="&lt;p&gt;Configuration settings&lt;/p&gt;" type="array|\Guzzle\Common\Collection" variable="$config">
            <type>array</type>
            <type link="Collection.html">\Guzzle\Common\Collection</type>
          </tag>
          <tag name="throws" line="66" description="if cURL is not installed" type="\Guzzle\Common\Exception\RuntimeException">
            <type link="RuntimeException.html">\Guzzle\Common\Exception\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$baseUrl</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$config</name>
          <default>null</default>
          <type>array|\Guzzle\Common\Collection</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="84" package="Default">
        <name>setConfig</name>
        <full_name>\Guzzle\Http\Client::setConfig()</full_name>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="97" package="Default">
        <name>getConfig</name>
        <full_name>\Guzzle\Http\Client::getConfig()</full_name>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$key</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="110" package="Default">
        <name>setDefaultOption</name>
        <full_name>\Guzzle\Http\Client::setDefaultOption()</full_name>
        <docblock line="110">
          <description>Set a default request option on the client that will be used as a default for each request</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;request.options key (e.g. allow_redirects) or path to a nested key (e.g. headers/foo)&lt;/p&gt;&#10;" type="string" variable="$keyOrPath">
            <type>string</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Value to set&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="110" description="" type="\Guzzle\Http\Client">
            <type>\Guzzle\Http\Client</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0">
          <name>$keyOrPath</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="125" package="Default">
        <name>getDefaultOption</name>
        <full_name>\Guzzle\Http\Client::getDefaultOption()</full_name>
        <docblock line="125">
          <description>Retrieve a default request option from the client</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;request.options key (e.g. allow_redirects) or path to a nested key (e.g. headers/foo)&lt;/p&gt;&#10;" type="string" variable="$keyOrPath">
            <type>string</type>
          </tag>
          <tag name="return" line="125" description="" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$keyOrPath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="132" package="Default">
        <name>setSslVerification</name>
        <full_name>\Guzzle\Http\Client::setSslVerification()</full_name>
        <docblock line="132">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$certificateAuthority</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$verifyPeer</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$verifyHost</name>
          <default>2</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="170" package="Default">
        <name>createRequest</name>
        <full_name>\Guzzle\Http\Client::createRequest()</full_name>
        <docblock line="170">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$method</name>
          <default>'GET'</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="202" package="Default">
        <name>getBaseUrl</name>
        <full_name>\Guzzle\Http\Client::getBaseUrl()</full_name>
        <docblock line="202">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$expand</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="207" package="Default">
        <name>setBaseUrl</name>
        <full_name>\Guzzle\Http\Client::setBaseUrl()</full_name>
        <docblock line="207">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="214" package="Default">
        <name>setUserAgent</name>
        <full_name>\Guzzle\Http\Client::setUserAgent()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$userAgent</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0">
          <name>$includeDefault</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="229" package="Default">
        <name>getDefaultUserAgent</name>
        <full_name>\Guzzle\Http\Client::getDefaultUserAgent()</full_name>
        <docblock line="229">
          <description>Get the default User-Agent string to use with Guzzle</description>
          <long-description></long-description>
          <tag name="return" line="229" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="236" package="Default">
        <name>get</name>
        <full_name>\Guzzle\Http\Client::get()</full_name>
        <docblock line="236">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="244" package="Default">
        <name>head</name>
        <full_name>\Guzzle\Http\Client::head()</full_name>
        <docblock line="244">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="249" package="Default">
        <name>delete</name>
        <full_name>\Guzzle\Http\Client::delete()</full_name>
        <docblock line="249">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="254" package="Default">
        <name>put</name>
        <full_name>\Guzzle\Http\Client::put()</full_name>
        <docblock line="254">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="259" package="Default">
        <name>patch</name>
        <full_name>\Guzzle\Http\Client::patch()</full_name>
        <docblock line="259">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="264" package="Default">
        <name>post</name>
        <full_name>\Guzzle\Http\Client::post()</full_name>
        <docblock line="264">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$headers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$postBody</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="269" package="Default">
        <name>options</name>
        <full_name>\Guzzle\Http\Client::options()</full_name>
        <docblock line="269">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="274" package="Default">
        <name>send</name>
        <full_name>\Guzzle\Http\Client::send()</full_name>
        <docblock line="274">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$requests</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="296" package="Default">
        <name>setCurlMulti</name>
        <full_name>\Guzzle\Http\Client::setCurlMulti()</full_name>
        <docblock line="296">
          <description>Set a curl multi object to be used internally by the client for transferring requests.</description>
          <long-description></long-description>
          <tag name="param" line="296" description="&lt;p&gt;Multi object&lt;/p&gt;" type="\Guzzle\Http\Curl\CurlMultiInterface" variable="$curlMulti">
            <type link="CurlMultiInterface.html">\Guzzle\Http\Curl\CurlMultiInterface</type>
          </tag>
          <tag name="return" line="296" description="" type="\Guzzle\Http\Client">
            <type>\Guzzle\Http\Client</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0">
          <name>$curlMulti</name>
          <default></default>
          <type>\Guzzle\Http\Curl\CurlMultiInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="306" package="Default">
        <name>getCurlMulti</name>
        <full_name>\Guzzle\Http\Client::getCurlMulti()</full_name>
        <docblock line="306">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="306" description="" type="\Guzzle\Http\Curl\CurlMultiInterface|\Guzzle\Http\Curl\CurlMultiProxy">
            <type link="CurlMultiInterface.html">\Guzzle\Http\Curl\CurlMultiInterface</type>
            <type link="CurlMultiProxy.html">\Guzzle\Http\Curl\CurlMultiProxy</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="315" package="Default">
        <name>setRequestFactory</name>
        <full_name>\Guzzle\Http\Client::setRequestFactory()</full_name>
        <docblock line="315">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$factory</name>
          <default></default>
          <type>\Guzzle\Http\Message\RequestFactoryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="329" package="Default">
        <name>setUriTemplate</name>
        <full_name>\Guzzle\Http\Client::setUriTemplate()</full_name>
        <docblock line="329">
          <description>Set the URI template expander to use with the client</description>
          <long-description></long-description>
          <tag name="param" line="329" description="&lt;p&gt;URI template expander&lt;/p&gt;" type="\Guzzle\Parser\UriTemplate\UriTemplateInterface" variable="$uriTemplate">
            <type link="UriTemplateInterface.html">\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
          </tag>
          <tag name="return" line="329" description="" type="\Guzzle\Http\Client">
            <type>\Guzzle\Http\Client</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0">
          <name>$uriTemplate</name>
          <default></default>
          <type>\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="344" package="Default">
        <name>preparePharCacert</name>
        <full_name>\Guzzle\Http\Client::preparePharCacert()</full_name>
        <docblock line="344">
          <description>Copy the cacert.pem file from the phar if it is not in the temp folder and validate the MD5 checksum</description>
          <long-description></long-description>
          <tag name="param" line="344" description="&lt;p&gt;Set to false to not perform the MD5 validation&lt;/p&gt;" type="bool" variable="$md5Check">
            <type>bool</type>
          </tag>
          <tag name="return" line="344" description="Returns the path to the extracted cacert" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="344" description="if the file cannot be copied or there is a MD5 mismatch" type="\Guzzle\Common\Exception\RuntimeException">
            <type link="RuntimeException.html">\Guzzle\Common\Exception\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$md5Check</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="369" package="Default">
        <name>expandTemplate</name>
        <full_name>\Guzzle\Http\Client::expandTemplate()</full_name>
        <docblock line="369">
          <description>Expand a URI template while merging client config settings into the template variables</description>
          <long-description></long-description>
          <tag name="param" line="369" description="&lt;p&gt;Template to expand&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="369" description="&lt;p&gt;Variables to inject&lt;/p&gt;" type="array" variable="$variables">
            <type>array</type>
          </tag>
          <tag name="return" line="369" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$variables</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="384" package="Default">
        <name>getUriTemplate</name>
        <full_name>\Guzzle\Http\Client::getUriTemplate()</full_name>
        <docblock line="384">
          <description>Get the URI template expander used by the client</description>
          <long-description></long-description>
          <tag name="return" line="384" description="" type="\Guzzle\Parser\UriTemplate\UriTemplateInterface">
            <type link="UriTemplateInterface.html">\Guzzle\Parser\UriTemplate\UriTemplateInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="400" package="Default">
        <name>sendMultiple</name>
        <full_name>\Guzzle\Http\Client::sendMultiple()</full_name>
        <docblock line="400">
          <description>Send multiple requests in parallel</description>
          <long-description></long-description>
          <tag name="param" line="400" description="&lt;p&gt;Array of RequestInterface objects&lt;/p&gt;" type="array" variable="$requests">
            <type>array</type>
          </tag>
          <tag name="return" line="400" description="Returns an array of Response objects" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$requests</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="425" package="Default">
        <name>prepareRequest</name>
        <full_name>\Guzzle\Http\Client::prepareRequest()</full_name>
        <docblock line="425">
          <description>Prepare a request to be sent from the Client by adding client specific behaviors and properties to the request.</description>
          <long-description></long-description>
          <tag name="param" line="425" description="&lt;p&gt;Request to prepare for the client&lt;/p&gt;" type="\Guzzle\Http\Message\RequestInterface" variable="$request">
            <type link="RequestInterface.html">\Guzzle\Http\Message\RequestInterface</type>
          </tag>
          <tag name="param" line="425" description="&lt;p&gt;Options to apply to the request&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="425" description="" type="\Guzzle\Http\Message\RequestInterface">
            <type link="RequestInterface.html">\Guzzle\Http\Message\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$request</name>
          <default></default>
          <type>\Guzzle\Http\Message\RequestInterface</type>
        </argument>
        <argument line="0">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Guzzle\Http" line="458" package="Default">
        <name>initSsl</name>
        <full_name>\Guzzle\Http\Client::initSsl()</full_name>
        <docblock line="458">
          <description>Initializes SSL settings</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="484" package="Default">
        <name>getDefaultHeaders</name>
        <full_name>\Guzzle\Http\Client::getDefaultHeaders()</full_name>
        <docblock line="484">
          <description></description>
          <long-description></long-description>
          <tag name="deprecated" line="484" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Guzzle\Http" line="493" package="Default">
        <name>setDefaultHeaders</name>
        <full_name>\Guzzle\Http\Client::setDefaultHeaders()</full_name>
        <docblock line="493">
          <description></description>
          <long-description></long-description>
          <tag name="deprecated" line="493" description=""/>
        </docblock>
        <argument line="0">
          <name>$headers</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="55" code="PPC:ERR-50008">No summary for method getAllEvents()</error>
      <error line="66" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="84" code="PPC:ERR-50015">Argument $config is missing from the Docblock of setConfig()</error>
      <error line="84" code="PPC:ERR-50008">No summary for method setConfig()</error>
      <error line="97" code="PPC:ERR-50015">Argument $key is missing from the Docblock of getConfig()</error>
      <error line="97" code="PPC:ERR-50008">No summary for method getConfig()</error>
      <error line="132" code="PPC:ERR-50015">Argument $certificateAuthority is missing from the Docblock of setSslVerification()</error>
      <error line="132" code="PPC:ERR-50015">Argument $verifyPeer is missing from the Docblock of setSslVerification()</error>
      <error line="132" code="PPC:ERR-50015">Argument $verifyHost is missing from the Docblock of setSslVerification()</error>
      <error line="132" code="PPC:ERR-50008">No summary for method setSslVerification()</error>
      <error line="170" code="PPC:ERR-50015">Argument $method is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50015">Argument $body is missing from the Docblock of createRequest()</error>
      <error line="170" code="PPC:ERR-50008">No summary for method createRequest()</error>
      <error line="202" code="PPC:ERR-50015">Argument $expand is missing from the Docblock of getBaseUrl()</error>
      <error line="202" code="PPC:ERR-50008">No summary for method getBaseUrl()</error>
      <error line="207" code="PPC:ERR-50015">Argument $url is missing from the Docblock of setBaseUrl()</error>
      <error line="207" code="PPC:ERR-50008">No summary for method setBaseUrl()</error>
      <error line="214" code="PPC:ERR-50015">Argument $userAgent is missing from the Docblock of setUserAgent()</error>
      <error line="214" code="PPC:ERR-50015">Argument $includeDefault is missing from the Docblock of setUserAgent()</error>
      <error line="214" code="PPC:ERR-50008">No summary for method setUserAgent()</error>
      <error line="236" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of get()</error>
      <error line="236" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of get()</error>
      <error line="236" code="PPC:ERR-50015">Argument $options is missing from the Docblock of get()</error>
      <error line="236" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="244" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of head()</error>
      <error line="244" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of head()</error>
      <error line="244" code="PPC:ERR-50008">No summary for method head()</error>
      <error line="249" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of delete()</error>
      <error line="249" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of delete()</error>
      <error line="249" code="PPC:ERR-50015">Argument $body is missing from the Docblock of delete()</error>
      <error line="249" code="PPC:ERR-50008">No summary for method delete()</error>
      <error line="254" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of put()</error>
      <error line="254" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of put()</error>
      <error line="254" code="PPC:ERR-50015">Argument $body is missing from the Docblock of put()</error>
      <error line="254" code="PPC:ERR-50008">No summary for method put()</error>
      <error line="259" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of patch()</error>
      <error line="259" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of patch()</error>
      <error line="259" code="PPC:ERR-50015">Argument $body is missing from the Docblock of patch()</error>
      <error line="259" code="PPC:ERR-50008">No summary for method patch()</error>
      <error line="264" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of post()</error>
      <error line="264" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of post()</error>
      <error line="264" code="PPC:ERR-50015">Argument $postBody is missing from the Docblock of post()</error>
      <error line="264" code="PPC:ERR-50008">No summary for method post()</error>
      <error line="269" code="PPC:ERR-50015">Argument $uri is missing from the Docblock of options()</error>
      <error line="269" code="PPC:ERR-50008">No summary for method options()</error>
      <error line="274" code="PPC:ERR-50015">Argument $requests is missing from the Docblock of send()</error>
      <error line="274" code="PPC:ERR-50008">No summary for method send()</error>
      <error line="306" code="PPC:ERR-50008">No summary for method getCurlMulti()</error>
      <error line="315" code="PPC:ERR-50008">No summary for method setRequestFactory()</error>
      <error line="484" code="PPC:ERR-50008">No summary for method getDefaultHeaders()</error>
      <error line="493" code="PPC:ERR-50015">Argument $headers is missing from the Docblock of setDefaultHeaders()</error>
      <error line="493" code="PPC:ERR-50008">No summary for method setDefaultHeaders()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="src\BLW\Model\YUICompressor.php" generated-path="src.BLW.Model.YUICompressor.html" hash="600402756ee74d750f73a5ce8611e8ff" package="Default">
    <docblock line="0">
      <description>YUICompressor.php | Dec 12, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="31" package="BLW\Core">
      <extends>\BLW\Type\Object</extends>
      <name>YUICompressor</name>
      <full_name>\BLW\Model\YUICompressor</full_name>
      <docblock line="31">
        <description>Description.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;All Objects must extend this class or
implement the &lt;code&gt;\BLW\Interface\Object&lt;/code&gt; interface.&lt;/p&gt;

&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Whenever &lt;code&gt;$DefaultOptions&lt;/code&gt; is used you must
also define &lt;code&gt;$_Initialized&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object must implement dynamic properties&lt;/p&gt;
&lt;hr&gt;</long-description>
        <tag name="package" line="31" description="BLW\Core"/>
        <tag name="api" line="31" description="BLW"/>
        <tag name="version" line="31" description="1.0.0"/>
        <tag name="since" line="31" description="0.1.0"/>
        <tag name="author" line="31" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="31" description="Based On" link="https://github.com/gpbmike/PHP-YUI-Compressor"/>
      </docblock>
      <property static="true" visibility="public" line="39" namespace="BLW\Model" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('JAR' =&gt; NULL, 'TMP' =&gt; NULL, 'Type' =&gt; 'js', 'LineBreak' =&gt; false, 'Verbose' =&gt; false, 'Semicolons' =&gt; false, 'NoMunge' =&gt; false, 'NoOptimize' =&gt; false)</default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="39" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="39" description="BLW"/>
          <tag name="since" line="39" description="0.1.0"/>
          <tag name="see" line="39" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
      <property static="false" visibility="private" line="53" namespace="BLW\Model" package="BLW\Core">
        <name>$Files</name>
        <default>array()</default>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="53" description="&lt;p&gt;Stores all files to add to compressor.&lt;/p&gt;" type="array" variable="$Files">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="58" namespace="BLW\Model" package="BLW\Core">
        <name>$String</name>
        <default>''</default>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="58" description="&lt;p&gt;String content to add to compressor.&lt;/p&gt;" type="string" variable="$String">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" line="63" namespace="BLW\Model" package="BLW\Core">
        <name>$JavaEnabled</name>
        <default>false</default>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="63" description="&lt;p&gt;Whether java existed at class creation.&lt;/p&gt;" type="bool" variable="$JavaEnabled">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Model" line="70" package="BLW\Core">
        <name>Initialize</name>
        <full_name>\BLW\Model\YUICompressor::Initialize()</full_name>
        <docblock line="70">
          <description>Initializes a class for subsequent use.</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;Initialization options.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="70" description="Returns Options used / generated during init." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Model" line="92" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\Model\YUICompressor::onCreate()</full_name>
        <docblock line="92">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="92" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Object $o)&lt;/code&gt;."/>
          <tag name="param" line="92" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="92" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Funtion</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="118" package="BLW\Core">
        <name>AddFile</name>
        <full_name>\BLW\Model\YUICompressor::AddFile()</full_name>
        <docblock line="118">
          <description>Adds a file to YUI compressor.</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;File to add to compressor.&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="throws" line="118" description="If file is not recognized as a file." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="118" description="$this" type="\BLW\YUICompressor">
            <type link="YUICompressor.html">\BLW\YUICompressor</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="134" package="BLW\Core">
        <name>AddString</name>
        <full_name>\BLW\Model\YUICompressor::AddString()</full_name>
        <docblock line="134">
          <description>Adds string content to YUI compressor.</description>
          <long-description></long-description>
          <tag name="param" line="134" description="&lt;p&gt;String to add to compressor.&lt;/p&gt;" type="string" variable="$String">
            <type>string</type>
          </tag>
          <tag name="return" line="134" description="$this." type="\BLW\YUICompressor">
            <type link="YUICompressor.html">\BLW\YUICompressor</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$String</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="149" package="BLW\Core">
        <name>Compress</name>
        <full_name>\BLW\Model\YUICompressor::Compress()</full_name>
        <docblock line="149">
          <description>Executes compression command and returns results</description>
          <long-description></long-description>
          <tag name="return" line="149" description="Returns either compressed string or error output." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Model\SymfonyMediator.php" generated-path="src.BLW.Model.SymfonyMediator.html" hash="d0322e5fd8b0a102b2414b33d69e0111" package="Default">
    <docblock line="0">
      <description>SymfonyMediator.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="true" abstract="false" namespace="BLW\Model" line="29" package="BLW\Core">
      <extends>\BLW\Type\Mediator</extends>
      <name>SymfonyMediator</name>
      <full_name>\BLW\Model\SymfonyMediator</full_name>
      <docblock line="29">
        <description>Mediator class that handles _on and _do commands.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Mediator must either extend this class or
implement the &lt;code&gt;\BLW\Interfaces\Mediator&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="29" description="BLW\Core"/>
        <tag name="api" line="29" description="BLW"/>
        <tag name="since" line="29" description="1.0.0"/>
        <tag name="author" line="29" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <property static="true" visibility="protected" line="34" namespace="BLW\Model" package="BLW\Core">
        <name>$_Class</name>
        <default>'\\Symfony\\Component\\EventDispatcher\\EventDispatcher'</default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="34" description="&lt;p&gt;Used by GetInstance to generate instance of class&lt;/p&gt;" type="string" variable="$_Class">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="42" package="BLW\Core">
        <name>Trigger</name>
        <full_name>\BLW\Model\SymfonyMediator::Trigger()</full_name>
        <docblock line="42">
          <description>Triggers an event.</description>
          <long-description></long-description>
          <tag name="param" line="42" description="&lt;p&gt;Action to trigger.&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
          <tag name="param" line="42" description="&lt;p&gt;Event object associated with the event.&lt;/p&gt;" type="\BLW\Interfaces\Event" variable="$Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
          <tag name="return" line="42" description="Event used by trigger." type="\BLW\Interfaces\Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interfaces\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="55" package="BLW\Core">
        <name>Register</name>
        <full_name>\BLW\Model\SymfonyMediator::Register()</full_name>
        <docblock line="55">
          <description>Registers a function to handle an event.</description>
          <long-description></long-description>
          <tag name="note" line="55" description="Format is &lt;code&gt;function (\BLW\Interface\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="55" description="&lt;p&gt;Action to register.&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Function to call when event is triggered.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Priority of the function. (Higher value = Higher priority)&lt;/p&gt;&#10;" type="int" variable="$Priority">
            <type>int</type>
          </tag>
          <tag name="return" line="55" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
        <argument line="0">
          <name>$Priority</name>
          <default>0</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="74" package="BLW\Core">
        <name>Deregister</name>
        <full_name>\BLW\Model\SymfonyMediator::Deregister()</full_name>
        <docblock line="74">
          <description>Deregister a function from handling an event.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="&lt;p&gt;Action to register.&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
          <tag name="param" line="74" description="&lt;p&gt;Function to call when event is triggered.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="74" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
    </class>
    <source>eJzNVW1P4zgQ/o7Ef5iVkJogKCx8WaksVw7KbiVgV1CEdKpUuc6k8W1iR7ZDt9rb/37j2EkLLXCnu5POHxK/zcwzzzy2T34ps3J762B3d3sLduFuUaRKLq4xEcwq3aVF+AMukMPRhz04Onx/7LbVW89VudBillmIeFwv7dPnAxRnZnR8Ww4GHQO/KYmtwSgTBoyqNEdIRY7ghtX0d+QWrAKbIVwPR5ALjtIgjZl1W6aVTHJMahdzYTNaWPrhKiE/sjaufV4Nzwc3d4NuG7Xvpv1uP+Yt7k1Iod/EJyxu4mB7a0lPv2T8G5sh/Hr1MD5XOpg8ojZCSXjfPewe+ilW2UxpeGC5RQ1frFlUOYOTufK9fsGMPdYlYtd+Ow1xJCvQUATv/ppSy3sg0uhdgqmQmEQdmu/E8Q9L+GeoJ6i10lHnXhqWIjDO0RhQKfDKWFUQk1PN9KKzN5jc3w1uJw9ntzfDm09xT6OttOz9XE2tKTnwnJGXmv2MOeoNTCg36sIkUcR4UVDfdF8jhJXCzfiBEZJSWuempf8NWih3lgdYz/QJ+N0igYGxiz9alDhulra3fpA9NZ+ga65STIMh+uQMdibntct7gwlMF/AJ7VAayxxYkuMMJWpmnbrCpCPWWTTeDnyn1MqShMkJ7bOCt44/Qmc8DoDHRE5RksakHY8Hj/S7EFRqyzPUaxOdnivMc+wjX3RDlQB0Bt1lWiXTrGgTO+PWqTH83NHypmsGNWtDSQpNSXXG44Ad//Nf5c8n5aM48UpZhjOIayC8ql5w6r9V4Po5oIbKakqnD9JKeugh5ShktPcq4Nj7CFV3LQDacRfG/inV987fNlG8f5oEtpe+g5eet/+5qQS3OBPG1jVYgiR+/TnZVBhJ2oBLpQt/l524++q0NY2e5vM0nZODevNfr7IO6NYsOMtzNiWAO5dN5MsV9G4Z5hkG9A5nqA8ma76EA/hVC6WFXUDbobNRX8HBbReiz3TF0s33yPIK6SiEYRkM4jdl88ULry7eGzJpyrJSyya/vRWwH+FwXSMihUiYSUNR1FrG8eo21zbqiCXJlQsuXwjfJ8KIg6iFETcKe6Iy1zCnV+dZTJtpNQeJc89P/SYQS+RRJGd6VhVUsMF3jqWLFh296Hv1KLym8AtsVLQq8VTTa1KL3Cnv798//7Ey/7mClmlvKOK/LxqNhXrEV3TzP9JIvSUsWV1h70/MDBYt</source>
  </file>
  <file path="src\BLW\Interfaces\Decorator.php" generated-path="src.BLW.Interfaces.Decorator.html" hash="2993abceef1dad3c5caef6dec335e1a7" package="Default">
    <docblock line="0">
      <description>Decorator.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\BLW\Interfaces\Adaptor</extends>
      <name>Decorator</name>
      <full_name>\BLW\Interfaces\Decorator</full_name>
      <docblock line="37">
        <description>Core Decorator pattern interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All mediators must either implement this interface or
extend the &lt;code&gt;\BLW\Type\Mediator&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW / Symfony"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="45" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Interfaces\Decorator::__construct()</full_name>
        <docblock line="45">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="note" line="45" description="On creation must call Subject::AddDecorator."/>
          <tag name="param" line="45" description="&lt;p&gt;The subject of the decorator.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Subject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="54" package="BLW\Core">
        <name>DecorateDo</name>
        <full_name>\BLW\Interfaces\Decorator::DecorateDo()</full_name>
        <docblock line="54">
          <description>Decorators get access to all messeges before they are sent.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;Name of the action.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="54" description="&lt;p&gt;Event object associated with the event.&lt;/p&gt;" type="\BLW\Interfaces\Event" variable="$Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
          <tag name="param" line="54" description="&lt;p&gt;Object being decorated.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Subject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="54" description="$this" type="\BLW\Interfaces\Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interfaces\Event</type>
        </argument>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="63" package="BLW\Core">
        <name>DecorateOn</name>
        <full_name>\BLW\Interfaces\Decorator::DecorateOn()</full_name>
        <docblock line="63">
          <description>Decorators get access to all hooks before they are attatched.</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;Name of the action.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="63" description="&lt;p&gt;Function about to be registered.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="param" line="63" description="&lt;p&gt;Object being decorated.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Subject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="63" description="$this" type="\BLW\Interfaces\Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="71" package="BLW\Core">
        <name>DecorateToString</name>
        <full_name>\BLW\Interfaces\Decorator::DecorateToString()</full_name>
        <docblock line="71">
          <description>Decorators get access to string versions of objects before they are returned.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;Original string generated by subject&lt;/p&gt;" type="string" variable="$String">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;Object being decorated.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Subject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="71" description="Returns modified string." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$String</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="78" package="BLW\Core">
        <name>__destruct</name>
        <full_name>\BLW\Interfaces\Decorator::__destruct()</full_name>
        <docblock line="78">
          <description>Destructor</description>
          <long-description></long-description>
          <tag name="note" line="78" description="On destruction must call Subject::RemDecorator()."/>
          <tag name="return" line="78" description="" type="\BLW\Interfaces\void.">
            <type link="void..html">\BLW\Interfaces\void.</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <source>eJzNVW1v2zYQ/rwA+Q9XwIDlILPSZh+KxHDtpe4QILUB20WAwYBBUydLi0QKJJXO6PrfdyT1ktZePHQrUH+QySN5d8/z3JGDN0VSnJ6EZ2enJ3AGb5FLxYxUfTLDX3YOr16fw6uLl5d2g9t0I4udSreJgYD33NLP9HkN+VgvL+fFZNLV8LsU2BxYJqkGLUvFEeI0Q7DTcvMHcgNGgkkQ3t8uIUs5Co00Z8Zu2ZQiyjByLj6mJqGF1g+XEfkR7rDzeXd7M5kuJv0m6sia/W4/503ehzKFUR2fcrGG8PSkIeanUcH4A9si/Hp3v7qRCr31EZVOpYCX/Yv+hTex0iRSwT3LDCqYGb0rMwaDj9KPRjnT5lIViH3zMKziCJajpgje/a2gkzHN9DWkcfAiwjgVGAVdWuz2ep8MgdiiWqNSUgXdD0KzGIFxOqBBxsBLbWROdG4UU7vu+WT9YTGZr+/H8+nt9LfetUJTKnH9+Qk+sJBa9aFghnIQRHCVSkvrIPllOJWGuLoahDRuF4rhOMsgxyi1PjTklAcgCUc8pHmRYY7CeBEbvyCVO4x/GhSRU3NgpR2uLBPLXYGr95XDQegWgGdM66f5qKHX75BEMGJFai0QwmKXx1LsvFmngqI3ukGtW1Maz0lma0U8QGJMcRWGT5fDQklb1zqkmKELfOd1qKRukbdse/AaVl+qvxpHrDCWoE90mH5eLPuzggltVMltrzbGkZAGYSaAK2TGFqbTgDPSZeEb7upqHEVtm7dHC6ZYvpfCzHdppzpNrYxN61KpWb2iA858icGjTKPaGPpBUW6ozyAuBXcJrte8RhIcCd67thX7NRENFg1bNHUb0LXCXDFqjVukuwRjW+GU7w4YDTSV4h54SiMVW+hMqR3BfSqIzOV6lKzJoy3wjv/zX+khUMVKTlWMUX2TIeDjoRyOCVDNN2gzrajHaJ/6r/201daxHXhElWo3vpWBY+P8Waz7q/9duUTKh33Z6FpihidfAP427WxPsA29G513NehmwDaydC/TBkHhNtWE60DIH0uqmailahD937pUHFePnntrfH3vC+WhPaPTwv/P6C1LBctq+xYFOppgs6svmu/FexVy7mb0XMkojVOK7O39f8n7UnooQQXpm0mvr/P92zyq1v7hQp9j3kgW9A7fwsfQrNd1kMDm9/lv3HEpbQ==</source>
  </file>
  <file path="src\BLW\Type\Iterator.php" generated-path="src.BLW.Type.Iterator.html" hash="807e02ac76603f601b26025d8459379c" package="Default">
    <docblock line="0">
      <description>Iterator.php | Dec 26, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="37" package="BLW\Core">
      <extends>\BLW\Type\Object</extends>
      <implements>\BLW\Interfaces\Iterator</implements>
      <name>Iterator</name>
      <full_name>\BLW\Type\Iterator</full_name>
      <docblock line="37">
        <description>Core Iterator pattern class.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Iterators must either implement this class or
implement the &lt;code&gt;\BLW\Interfaces\Iterator&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="69" package="BLW\Core">
        <name>child</name>
        <full_name>\BLW\Type\Iterator::child()</full_name>
        <docblock line="69">
          <description>Returns the child with current ID.</description>
          <long-description></long-description>
          <tag name="note" line="69" description="Changes the current context to the child."/>
          <tag name="param" line="69" description="&lt;p&gt;Object ID of child to return.&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="69" description="Returns &lt;code&gt;NULL&lt;/code&gt; if child does not exits." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$ID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="87" package="BLW\Core">
        <name>each</name>
        <full_name>\BLW\Type\Iterator::each()</full_name>
        <docblock line="87">
          <description>Calls an anonymous function on each child of the function.</description>
          <long-description></long-description>
          <tag name="note" line="87" description="Function format: &lt;code&gt;mixed function (\BLW\Model\Event\ObjectItem $Object)&lt;/code&gt;"/>
          <tag name="param" line="87" description="&lt;p&gt;Function to call.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="87" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="111" package="BLW\Core">
        <name>walk</name>
        <full_name>\BLW\Type\Iterator::walk()</full_name>
        <docblock line="111">
          <description>Call an anonymous function on object and all its descendants.</description>
          <long-description></long-description>
          <tag name="note" line="111" description="Function format: &lt;code&gt;mixed function (\BLW\Model\Event\ObjectItem $Object)&lt;/code&gt;"/>
          <tag name="param" line="111" description="&lt;p&gt;Funtion to call.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="111" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="142" package="BLW\Core">
        <name>doAdd</name>
        <full_name>\BLW\Type\Iterator::doAdd()</full_name>
        <docblock line="142">
          <description>Hook that is called when a child is added.</description>
          <long-description></long-description>
          <tag name="return" line="142" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="162" package="BLW\Core">
        <name>onAdd</name>
        <full_name>\BLW\Type\Iterator::onAdd()</full_name>
        <docblock line="162">
          <description>Hook that is called when a child is added.</description>
          <long-description></long-description>
          <tag name="note" line="162" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="162" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="162" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="180" package="BLW\Core">
        <name>doUpdate</name>
        <full_name>\BLW\Type\Iterator::doUpdate()</full_name>
        <docblock line="180">
          <description>Hook that is called when a child is changed.</description>
          <long-description></long-description>
          <tag name="return" line="180" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="199" package="BLW\Core">
        <name>onUpdate</name>
        <full_name>\BLW\Type\Iterator::onUpdate()</full_name>
        <docblock line="199">
          <description>Hook that is called when a child is changed.</description>
          <long-description></long-description>
          <tag name="note" line="199" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="199" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="199" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="217" package="BLW\Core">
        <name>doDelete</name>
        <full_name>\BLW\Type\Iterator::doDelete()</full_name>
        <docblock line="217">
          <description>Hook that is called when a child is deleted.</description>
          <long-description></long-description>
          <tag name="return" line="217" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="231" package="BLW\Core">
        <name>onDelete</name>
        <full_name>\BLW\Type\Iterator::onDelete()</full_name>
        <docblock line="231">
          <description>Hook that is called when a child is deleted.</description>
          <long-description></long-description>
          <tag name="note" line="231" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="231" description="&lt;p&gt;Function to call after ID has changed.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="231" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="251" package="BLW\Core">
        <name>push</name>
        <full_name>\BLW\Type\Iterator::push()</full_name>
        <docblock line="251">
          <description>Push a node at the end of the list.</description>
          <long-description></long-description>
          <tag name="see" line="251" description="" link="\SplDoublyLinkedList::push()"/>
          <tag name="param" line="251" description="&lt;p&gt;Value to push.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="251" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="271" package="BLW\Core">
        <name>pop</name>
        <full_name>\BLW\Type\Iterator::pop()</full_name>
        <docblock line="271">
          <description>Pops a node from the end of the list</description>
          <long-description></long-description>
          <tag name="see" line="271" description="" link="\SplDoublyLinkedList::pop()"/>
          <tag name="return" line="271" description="Popped Object." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="283" package="BLW\Core">
        <name>shift</name>
        <full_name>\BLW\Type\Iterator::shift()</full_name>
        <docblock line="283">
          <description>Shifts a node from the end of the list</description>
          <long-description></long-description>
          <tag name="see" line="283" description="" link="\SplDoublyLinkedList::shift()"/>
          <tag name="return" line="283" description="Shifted Object." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="296" package="BLW\Core">
        <name>unshift</name>
        <full_name>\BLW\Type\Iterator::unshift()</full_name>
        <docblock line="296">
          <description>Prepend a node at the beginning of the list</description>
          <long-description></long-description>
          <tag name="see" line="296" description="" link="\SplDoublyLinkedList::unshift()"/>
          <tag name="param" line="296" description="&lt;p&gt;Value to push.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="296" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="318" package="BLW\Core">
        <name>offsetSet</name>
        <full_name>\BLW\Type\Iterator::offsetSet()</full_name>
        <docblock line="318">
          <description>ArrayAccess Interface</description>
          <long-description></long-description>
          <tag name="see" line="318" description="" link="\SplDoublyLinkedList::offsetSet()"/>
          <tag name="param" line="318" description="&lt;p&gt;Index being set&lt;/p&gt;" type="int" variable="$index">
            <type>int</type>
          </tag>
          <tag name="param" line="318" description="&lt;p&gt;Object to replace current value.&lt;/p&gt;" type="\BLW\Interface\Object" variable="$newval">
            <type link="Object.html">\BLW\Interface\Object</type>
          </tag>
          <tag name="return" line="318" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$index</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$newval</name>
          <default></default>
          <type>\BLW\Interface\Object</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="339" package="BLW\Core">
        <name>offsetUnset</name>
        <full_name>\BLW\Type\Iterator::offsetUnset()</full_name>
        <docblock line="339">
          <description>ArrayAccess Interface</description>
          <long-description></long-description>
          <tag name="see" line="339" description="" link="\SplDoublyLinkedList::offsetUnset()"/>
          <tag name="param" line="339" description="&lt;p&gt;Index being set&lt;/p&gt;" type="int" variable="$index">
            <type>int</type>
          </tag>
          <tag name="param" line="339" description="&lt;p&gt;Object to replace current value.&lt;/p&gt;" type="\BLW\Interface\Object" variable="$newval">
            <type link="Object.html">\BLW\Interface\Object</type>
          </tag>
          <tag name="return" line="339" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$index</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="355" package="BLW\Core">
        <name>seek</name>
        <full_name>\BLW\Type\Iterator::seek()</full_name>
        <docblock line="355">
          <description>Seekable Interface</description>
          <long-description></long-description>
          <tag name="see" line="355" description="Language Reference" link="\BLW\Type\http://php.net/manual/class.seekableiterator.php"/>
          <tag name="param" line="355" description="&lt;p&gt;The position to seek to.&lt;/p&gt;" type="int" variable="$position">
            <type>int</type>
          </tag>
          <tag name="return" line="355" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$position</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\readme.php" generated-path="app.readme.html" hash="cf08d694e3fce0c1c7f7d213bf874267" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxtTj0LwjAU3Av9D7epRdTqKn6gGQR10E5ubfI0kZqUJkUEf7xpQLu4HNzHu3vzZSWrOBonSRwhQU25eNDIa3hjSxxpOsR0ks6Ci4AbU71qdZMOfT7AY22z2alirGdxMZpCJEAmlYU1Tc0JV1USWtoUd+IOzsBJwmGXoVSctCXPc9dGikaLkkSoeConvdH1cCN8jw7HoXO/27DjmY262RX//ff3t9V30I+3wjiOlosPcchLzA==</source>
  </file>
  <file path="src\BLW\Interfaces\Singleton.php" generated-path="src.BLW.Interfaces.Singleton.html" hash="6772eb7c9cb89de320302508e8e7362d" package="Default">
    <docblock line="0">
      <description>Singleton.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="30" package="BLW\Core">
      <extends>\BLW\Interfaces\Object</extends>
      <name>Singleton</name>
      <full_name>\BLW\Interfaces\Singleton</full_name>
      <docblock line="30">
        <description>Singleton pattern interface.</description>
        <long-description></long-description>
        <tag name="package" line="30" description="BLW\Core"/>
        <tag name="api" line="30" description="BLW"/>
        <tag name="since" line="30" description="0.1.0"/>
        <tag name="author" line="30" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="30" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="37" package="BLW\Core">
        <name>SetInstance</name>
        <full_name>\BLW\Interfaces\Singleton::SetInstance()</full_name>
        <docblock line="37">
          <description>Changes the current singleton instance.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;Object to set singleton value to.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$NewObject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="37" description="Returns &lt;code&gt;TRUE&lt;/code&gt; on success and &lt;code&gt;FALSE&lt;/code&gt; on failure." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$NewObject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Interfaces" line="43" package="BLW\Core">
        <name>ClearInstance</name>
        <full_name>\BLW\Interfaces\Singleton::ClearInstance()</full_name>
        <docblock line="43">
          <description>Clears the current signleton instance.</description>
          <long-description></long-description>
          <tag name="return" line="43" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="50" package="BLW\Core">
        <name>doUpdate</name>
        <full_name>\BLW\Interfaces\Singleton::doUpdate()</full_name>
        <docblock line="50">
          <description>Hook that is called when instance is changed.</description>
          <long-description></long-description>
          <tag name="see" line="50" description="" link="\BLW\Type\Singleton::onUpdate()"/>
          <tag name="return" line="50" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="59" package="BLW\Core">
        <name>onUpdate</name>
        <full_name>\BLW\Interfaces\Singleton::onUpdate()</full_name>
        <docblock line="59">
          <description>Hook that is called when instance is changed.</description>
          <long-description></long-description>
          <tag name="note" line="59" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="see" line="59" description="" link="\BLW\Type\Singleton::doUpdate()"/>
          <tag name="param" line="59" description="&lt;p&gt;Function to call on change.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="59" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="66" package="BLW\Core">
        <name>doDelete</name>
        <full_name>\BLW\Interfaces\Singleton::doDelete()</full_name>
        <docblock line="66">
          <description>Hook that is called when instance is deleted.</description>
          <long-description></long-description>
          <tag name="see" line="66" description="" link="\BLW\Type\Singleton::onDelete()"/>
          <tag name="return" line="66" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="74" package="BLW\Core">
        <name>onDelete</name>
        <full_name>\BLW\Interfaces\Singleton::onDelete()</full_name>
        <docblock line="74">
          <description>Hook that is called when instance is deleted.</description>
          <long-description></long-description>
          <tag name="note" line="74" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="see" line="74" description="" link="\BLW\Type\Singleton::doDelete()"/>
          <tag name="param" line="74" description="&lt;p&gt;Function to call on change.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="74" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
    </interface>
    <source>eJzFVGtr2zAU/bxA/sMdFJKULu7jS2lCl651t0CWQh4URqEo9nXsxZGMJDcNXf/7rixHSV+jsLD5QyJd3cc5R8duf87irFrxdnerFdiFYcKnKWrBmxSGX3CBARwe78Hh/sGRSSiSzkW2lMk01lAPGsXRJ/o5hvmZGh0NMt+vKfghOLqCUZwoUCKXAUKUpAhmm09+YqBBC9AxwvfuCNIkQK6Q9kyblEnOwxTDosUi0TEdrPsEIqQ+vCgueva6535/6Dfd1I4J22y7Dxzu15BCZzWfsJiAV604YT50MhbM2BThS+/65lxItNE7lCoRHA6a+819G2K5joWEa5ZqlHCl1TJPGbQXwq46c6b0kcwQm3p2Ws7hbI6KJtj2XU6VEe1UC5Ko/jHEKOEY1mt0WGs0HjSRmKK8RSmFrNfGXLEIgQVUoEBEEORKiznJOZFMLmt7/u146A9ur88G/W7/a6MlUeeStx43+K0vHjKmaTwnbUsUTavOawJAh2WJidiNSjhR2G8eWC1gpYWT+08yGP35DGKtsxPP2zz2MimMV5RHkzwzDnqWWymfg7pBA+818lDBzVNFb64K21UrD1RLj+VvHvJ1zPgUVWGpIJcSuQblGiZcacatHDafJJFs/sYE2OnjolxeOasr3Gx5x9Kc7C42Wtq7gYkQKQyKtYK28frpaDD2216xBKpVub1vxsMy4fKsN9zMiFiS5nKN17OLLJ+Q0YHIaPqLch5o4+Ah6m7JsP6c0VrVNalGy9jnhYQpMvlcwSl/U8GS7lsSmhf+ffCLwY7A6+C+CTFzH5eApfRtgUWMa2BFvDBBuIFRIVqAo2WGay1OTgQfZyHTNG4LhByTUKy6bpMEFxrhUsi5LbSOmSf3VO0mv7h3/85c4E7x1yid9R5h1hSevysGMJvQ13rncjXVLej1MMfGuhb/NnziyLnLcpP/Qt8Qiel7TXJRJG/bJKuura1R+McWeSnL/7dIiemJRR5/A4eKz9s=</source>
  </file>
  <file path="src\BLW\Type\Adaptor.php" generated-path="src.BLW.Type.Adaptor.html" hash="2c13d31b01c010d9be6c73f7b4806260" package="Default">
    <docblock line="0">
      <description>Adaptor.php | Dec 27, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="37" package="BLW\Core">
      <extends/>
      <implements>\BLW\Interfaces\Adaptor</implements>
      <name>Adaptor</name>
      <full_name>\BLW\Type\Adaptor</full_name>
      <docblock line="37">
        <description>Core Adapter pattern class.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Adaptor objects must either extend this class or
implement the &lt;code&gt;\BLW\Interfaces\Adaptor&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="protected" line="42" namespace="BLW\Type" package="BLW\Core">
        <name>$_Class</name>
        <default>'\\BLW\\Model\\Object'</default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;TARGET_CLASS Used by GetInstance to generate instance of class&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="47" namespace="BLW\Type" package="BLW\Core">
        <name>$_Subject</name>
        <default>NULL</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Subject of the current event.&lt;/p&gt;" type="mixed" variable="$Subject">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="55" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Type\Adaptor::__construct()</full_name>
        <docblock line="55">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="throws" line="55" description="If subject is not an instance of &lt;code&gt;$_Class&lt;/code&gt;." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;The subject of the adaptor.&lt;/p&gt;" type="mixed" variable="$Subject">
            <type>mixed</type>
          </tag>
          <tag name="return" line="55" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="72" package="BLW\Core">
        <name>GetInstance</name>
        <full_name>\BLW\Type\Adaptor::GetInstance()</full_name>
        <docblock line="72">
          <description>Creates an instance of the adaptor object.</description>
          <long-description></long-description>
          <tag name="note" line="72" description="Default creates"/>
          <tag name="param" line="72" description="" type="\BLW\Type\..." variable="">
            <type link="....html">\BLW\Type\...</type>
          </tag>
          <tag name="return" line="72" description="" type="\BLW\Interface\Adaptor">
            <type link="Adaptor.html">\BLW\Interface\Adaptor</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="83" package="BLW\Core">
        <name>GetSubject</name>
        <full_name>\BLW\Type\Adaptor::GetSubject()</full_name>
        <docblock line="83">
          <description>Getter for subject property.</description>
          <long-description></long-description>
          <tag name="return" line="83" description="$subject The adaptor subject." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="94" package="BLW\Core">
        <name>__call</name>
        <full_name>\BLW\Type\Adaptor::__call()</full_name>
        <docblock line="94">
          <description>Import child methods.</description>
          <long-description></long-description>
          <tag name="throws" line="94" description="If call cannot be handled by subject." type="\BadMethodCallException">
            <type link="BadMethodCallException.html">\BadMethodCallException</type>
          </tag>
          <tag name="param" line="94" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="94" description="Overloaded method return value or &lt;code&gt;NULL&lt;/code&gt; on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="111" package="BLW\Core">
        <name>__get</name>
        <full_name>\BLW\Type\Adaptor::__get()</full_name>
        <docblock line="111">
          <description>Import child properties.</description>
          <long-description></long-description>
          <tag name="param" line="111" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="111" description="Overloaded propery or NULL in case of error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="129" package="BLW\Core">
        <name>__set</name>
        <full_name>\BLW\Type\Adaptor::__set()</full_name>
        <docblock line="129">
          <description>Import child properties.</description>
          <long-description></long-description>
          <tag name="param" line="129" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="129" description="&lt;p&gt;Value to set property to.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="129" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="145" package="BLW\Core">
        <name>__isset</name>
        <full_name>\BLW\Type\Adaptor::__isset()</full_name>
        <docblock line="145">
          <description>Import child properties.</description>
          <long-description></long-description>
          <tag name="param" line="145" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="145" description="Returns true if the dyanamic property exists." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="155" package="BLW\Core">
        <name>__unset</name>
        <full_name>\BLW\Type\Adaptor::__unset()</full_name>
        <docblock line="155">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="155" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="155" description="Overloaded propery" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="165" package="BLW\Core">
        <name>offsetExists</name>
        <full_name>\BLW\Type\Adaptor::offsetExists()</full_name>
        <docblock line="165">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="165" description="&lt;p&gt;Offset to test.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="165" description="Returns &lt;code&gt;true&lt;/code&gt; if offset exists and &lt;code&gt;false&lt;/code&gt; if not." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="182" package="BLW\Core">
        <name>offsetGet</name>
        <full_name>\BLW\Type\Adaptor::offsetGet()</full_name>
        <docblock line="182">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="182" description="&lt;p&gt;Offset to get.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="182" description="Returns &lt;code&gt;NULL&lt;/code&gt; if not found" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="200" package="BLW\Core">
        <name>offsetSet</name>
        <full_name>\BLW\Type\Adaptor::offsetSet()</full_name>
        <docblock line="200">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="200" description="&lt;p&gt;Offset to test.&lt;/p&gt;" type="int|string" variable="$offset">
            <type>int</type>
            <type>string</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Value to set to current offset.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="200" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>int|string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="217" package="BLW\Core">
        <name>offsetUnset</name>
        <full_name>\BLW\Type\Adaptor::offsetUnset()</full_name>
        <docblock line="217">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="217" description="&lt;p&gt;Offset to unset.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="217" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="234" package="BLW\Core">
        <name>__toString</name>
        <full_name>\BLW\Type\Adaptor::__toString()</full_name>
        <docblock line="234">
          <description>All objects must have a string representation.</description>
          <long-description></long-description>
          <tag name="note" line="234" description="Default is the serialized form of the object."/>
          <tag name="return" line="234" description="String value of object." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="243" package="BLW\Core">
        <name>serialize</name>
        <full_name>\BLW\Type\Adaptor::serialize()</full_name>
        <docblock line="243">
          <description>Serializable Interface.</description>
          <long-description></long-description>
          <tag name="return" line="243" description="Serialized data" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="253" package="BLW\Core">
        <name>unserialize</name>
        <full_name>\BLW\Type\Adaptor::unserialize()</full_name>
        <docblock line="253">
          <description>Serializable Interface.</description>
          <long-description></long-description>
          <tag name="param" line="253" description="&lt;p&gt;Serialized object.&lt;/p&gt;" type="string" variable="$serialized">
            <type>string</type>
          </tag>
          <tag name="return" line="253" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$serialized</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Type\RuntimeException.php" generated-path="src.BLW.Type.RuntimeException.html" hash="e2f8b48eb79edd98efc53aa614383ca4" package="Default">
    <docblock line="0">
      <description>RuntimeException.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="30" package="BLW\Core">
      <extends>\RuntimeException</extends>
      <implements>\BLW\Interfaces\Exception</implements>
      <name>RuntimeException</name>
      <full_name>\BLW\Type\RuntimeException</full_name>
      <docblock line="30">
        <description>Core exception class for Runtime Exceptions.</description>
        <long-description></long-description>
        <tag name="package" line="30" description="BLW\Core"/>
        <tag name="api" line="30" description="BLW"/>
        <tag name="since" line="30" description="0.1.0"/>
        <tag name="author" line="30" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="30" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="36" package="BLW\Core">
        <name>GetFields</name>
        <full_name>\BLW\Type\RuntimeException::GetFields()</full_name>
        <docblock line="36">
          <description>Generates fields to replace in messege string.</description>
          <long-description></long-description>
          <tag name="return" line="36" description="Array of fields to replace in messege text." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9VNtO20AQfW4k/mEq1bIdBTuBPiACNJQGFIlSCYKQimm0scexi722dtfQiPLvnfUmxpSIfbC8czsz54x98KVMyq2O3+1udaALlxVXaY7jPyGWKi24R174C98whJ29Huz0B7s6ro49KcqlSBeJAid0a9c2PfYgP5bT3ctyPLYl/Cw4NgnTJJUgi0qECHGaIehrNf+NoQJVgEoQvk+mkKUhcol0Z0qHzCseZRjVJR5TlZDjpU5YRFSH18l1zfPJyfjiauw1qCNtNtHmHjZ9b+oURmt86kUb/K1Ow8+HUcnCe7ZA+Hp+E5wUAo31AYUktmDg9b2+MbFKJYWAG5YpFPBDyWWVMTh4LMzbKGdS7YoS0VP3RyscznKUhGDKT5clDiGNnY8RxinHyLHJbLvuk6L2FyhmKEQhHPuaSxYjsDBEKaGIIaykKnIici6YWNq98ez6anw5uzm+vJhcnLlDgaoSfPjcmgz0MIBr3SHMGNWKaYLVSkCzE9IzPG2iAkasTLXFXGTKaZi+NzCswJqVhvj3CNFK8HtIlCr3fb/t9ktR6K2RPiH5Gg7OzawrItlcKsForcwY/281zamQRxKCN540LzPMkSty6sEmnOSLSRIZNEFbnSfCoWO406cLZ8hRMIVEWooZ1aaNFlhmWk3aTxJWIpFFfaV84TVpI6MFMCHYEo7rJyn4bg1F7TcVfPNSVnPaW4grHtZznKE6rWs4rglYtazPp6nQFfU5hE/6a9o+WqCqrY47bAUei0VlyDiEkhpXM+GY7Nv+3a3NxELadz1QokKd95JZClzMcqbCZMayzLH9X4F8GvQ+PwfBbRAFwV0gu4dH9HC8ruvndq+F1X5/XbXNlfNi1se2EmQRCsuGwyO61cJb+/uWZsRyLN2q5e7br7N6tnHYoLO09vQ7caibVw3dDu7cN3kGoEYjTR9Y5oxazNRee0Na3Y6B25C2lm9TZsgqidEKsRYjdmw4qa0wX4JFnz6nb54jWJGnB2iUPaU/oOO2LecU5rgtkLXs9E94/ge/1soR</source>
  </file>
  <file path="src\BLW\Type\Factory.php" generated-path="src.BLW.Type.Factory.html" hash="7ff8a106243eaf5fa512b457d898ebf2" package="Default">
    <docblock line="0">
      <description>Factory.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="38" package="BLW\Core">
      <extends>\BLW\Type\Singleton</extends>
      <implements>\BLW\Interfaces\Factory</implements>
      <name>Factory</name>
      <full_name>\BLW\Type\Factory</full_name>
      <docblock line="38">
        <description>Core Factory pattern class.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Factory objects must either extend this class or
implement the &lt;code&gt;\BLW\Interfaces\Factory&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="38" description="BLW\Core"/>
        <tag name="api" line="38" description="BLW"/>
        <tag name="since" line="38" description="0.1.0"/>
        <tag name="author" line="38" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="38" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="49" package="BLW\Core">
        <name>O</name>
        <full_name>\BLW\Type\Factory::O()</full_name>
        <docblock line="49">
          <description>Creates a BLW Library Object.</description>
          <long-description></long-description>
          <tag name="api" line="49" description="BLW"/>
          <tag name="since" line="49" description="0.1.0"/>
          <tag name="param" line="49" description="&lt;p&gt;Name of object to create.&lt;/p&gt;" type="string" variable="$Class">
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="&lt;p&gt;Options passed to object.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="param" line="49" description="&lt;p&gt;Load extention.&lt;/p&gt;" type="bool" variable="$isExtention">
            <type>bool</type>
          </tag>
          <tag name="return" line="49" description="Returns &lt;code&gt;NULL&lt;/code&gt; if the class does not exist." type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0">
          <name>$isExtention</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
    </class>
    <source>eJx9VGFv2zYQ/bwA+Q83IIWkwLOcph+KxHGdZdpgwLWBxEGGwYBBSydLi0wSJNXE6PLfeyQlRU2L6YMt3vHevXvv7PEnWcjjo/j09PgITuFPlhqhDkMKwn/wB6bw/uMA3o/Ozm3aXbkR8qDKXWEgTCOX+o0+PsL+Wq/Ob2WSBBr+ERy7glVRatCiVilCXlYI9lhv/8XUgBFgCoTPsxVUZYpcI52ZsVe2Nc8qzBzEU2kKSrzipCIjHO6KHeZ8dpMs7pJh13Vqw/62P6cd758xhWnbn7jYQHx81Mnyy1Sy9JHtEH6fP6xvhEIf/YJKl4LD2XA0HPkQq00hFDywyqCCpdGHumIwfhL+bbpn2pwriTg0j5OmD2d71NTBw68OEi+hzMNfM8xLjlkYUDiIoq+G6O9QbVApocLgnmuWI7A0Ra1B5JDW2og9CblVTB2CQbK5v0tuNw/Xt4vZ4q/oUqGpFb986U0GdpjWdZDMEGsOacW0fpVyXHyYLIQhfS7GMb2/JuTkuqq6cuE81bAnHoBkGSmAzwZ55r1zsCCUqy33ssI9cuM8HFtDJ2s7/4wTh5zU0OsGeBy7LPndZPrU1MTb9zOHYMpkaSP+oEtOGo+GZ94saM3q9uH/fLILwh+hMEZexHE/HUsl3OAxdYptO5h7C7o9YlttFA3TSNAK5sXRsG59X9+VfFehoZ3q9GnSP8pyfPSVGtDjvbQP+amQGdTA+jxg6ZwZdrd6ujSB77VpgpIptgeiTqzg5MZxX9Cy2mUT3Q84dS2Hb8uYUuwAJ0tp6Ceiof2WBIKZrRNvSfm6rRAVnJQ6seLYGpgLlnmt7LFX4Bf6B338tHDrsrrZrcX9fN4tUu6WzpuRCZKLC9rY51K/0on9i6y39MdAGjDaf8hrnjpKy9DLMXg75pUPhNHg+xmuIGeVxsijNsbZ5+TOQ1+BlqSzycNg7QZav9PvdDCAtlEf7pM1b5P8vUoWq9lyARcQBNGl3bQWlv4/3HgbN5UOmzZR1O9tn0ZDjk8tlbAdxiK211764KZQ4smVOKafSdSKDPjCqjK7Vrvarm3ynKKDCUd9nKaddaOJEvLLNwRX9xU=</source>
  </file>
  <file path="src\BLW\Type\AjaxElement.php" generated-path="src.BLW.Type.AjaxElement.html" hash="2ec1effa0858307b423c48b365a6fecc" package="Default">
    <docblock line="0">
      <description>AjaxElement.php | Dec 10, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="45" package="BLW\Core">
      <extends>\BLW\Type\Element</extends>
      <name>AjaxElement</name>
      <full_name>\BLW\Type\AjaxElement</full_name>
      <docblock line="45">
        <description>Core Ajax enabled Element class.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;I really thought about how to add ajax to objects. I finally resolved
it this way:&lt;/p&gt;

&lt;p&gt;Most CMS have ajax but my system needs to be compatible with all of
them while still allowing for ajax in a stand alone fashion.&lt;/p&gt;

&lt;p&gt;Therefore you must create an ajax element before any headers are sent
just like the header() function in php allowing ajax elements to output
cookies as well as output ajax replies on same url. Simple.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="45" description="BLW\Core"/>
        <tag name="api" line="45" description="BLW"/>
        <tag name="version" line="45" description="1.0.0"/>
        <tag name="since" line="45" description="0.1.0"/>
        <tag name="author" line="45" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="45" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <constant namespace="BLW\Type" line="48" package="BLW\Core">
        <name>TYPE_GET</name>
        <full_name>\BLW\Type\AjaxElement::TYPE_GET</full_name>
        <value>1</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Type" line="49" package="BLW\Core">
        <name>TYPE_POST</name>
        <full_name>\BLW\Type\AjaxElement::TYPE_POST</full_name>
        <value>2</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Type" line="50" package="BLW\Core">
        <name>TYPE_COOKIE</name>
        <full_name>\BLW\Type\AjaxElement::TYPE_COOKIE</full_name>
        <value>4</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Type" line="51" package="BLW\Core">
        <name>TYPE_SESSION</name>
        <full_name>\BLW\Type\AjaxElement::TYPE_SESSION</full_name>
        <value>8</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Type" line="54" package="BLW\Core">
        <name>FINISHED</name>
        <full_name>\BLW\Type\AjaxElement::FINISHED</full_name>
        <value>0</value>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="BLW\Type" line="55" package="BLW\Core">
        <name>PROCESSING</name>
        <full_name>\BLW\Type\AjaxElement::PROCESSING</full_name>
        <value>1</value>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="public" line="61" namespace="BLW\Type" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('HTML' =&gt; '&lt;span class="ajax"&gt;&lt;/span&gt;', 'DocumentVersion' =&gt; '1.0', 'AJAX' =&gt; array(), 'Type' =&gt; self::TYPE_COOKIE)</default>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="61" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="see" line="61" description="Object::__construct()" link="\BLW\Type\Object::__construct()"/>
        </docblock>
      </property>
      <property static="true" visibility="protected" line="71" namespace="BLW\Type" package="BLW\Core">
        <name>$_Initialized</name>
        <default>false</default>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="71" description="&lt;p&gt;Used to store class information status.&lt;/p&gt;" type="bool" variable="$Initialized">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" line="76" namespace="BLW\Type" package="BLW\Core">
        <name>$Scripts</name>
        <default>array()</default>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="76" description="&lt;p&gt;Array of javascripts relative to asset directory to load.&lt;/p&gt;" type="string[]" variable="$Scripts">
            <type>string[]</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" line="81" namespace="BLW\Type" package="BLW\Core">
        <name>$Notices</name>
        <default>array()</default>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="81" description="&lt;p&gt;Stores all ajax notices.&lt;/p&gt;" type="string[]" variable="$Notices">
            <type>string[]</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" line="86" namespace="BLW\Type" package="BLW\Core">
        <name>$Errors</name>
        <default>array()</default>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="86" description="&lt;p&gt;Stores all ajax errors.&lt;/p&gt;" type="string[]" variable="$Errors">
            <type>string[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="93" package="BLW\Core">
        <name>Initialize</name>
        <full_name>\BLW\Type\AjaxElement::Initialize()</full_name>
        <docblock line="93">
          <description>Initializes a child class for subsequent use.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="&lt;p&gt;Initialization options. (Automatically adds blw_cfg())&lt;/p&gt;&#10;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="93" description="Returns Options used / generated during init." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="118" package="BLW\Core">
        <name>SecurityID</name>
        <full_name>\BLW\Type\AjaxElement::SecurityID()</full_name>
        <docblock line="118">
          <description>Creates a security ID to track ajax requests per user.</description>
          <long-description></long-description>
          <tag name="api" line="118" description="BLW"/>
          <tag name="since" line="118" description="1.0.0"/>
          <tag name="see" line="118" description="" link="\BLW\AjaxElement::ValidateSecurityID()"/>
          <tag name="return" line="118" description="Generated security ID" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="138" package="BLW\Core">
        <name>ValidateSecurityID</name>
        <full_name>\BLW\Type\AjaxElement::ValidateSecurityID()</full_name>
        <docblock line="138">
          <description>Validates security ID.</description>
          <long-description></long-description>
          <tag name="api" line="138" description="BLW"/>
          <tag name="since" line="138" description="1.0.0"/>
          <tag name="see" line="138" description="" link="\BLW\AjaxElement::SecurityID()"/>
          <tag name="return" line="138" description="Returns true if security ID matches" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="204" package="BLW\Core">
        <name>doCreate</name>
        <full_name>\BLW\Type\AjaxElement::doCreate()</full_name>
        <docblock line="204">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="204" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Object $o)&lt;/code&gt;."/>
          <tag name="param" line="204" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="204" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="250" package="BLW\Core">
        <name>doSetID</name>
        <full_name>\BLW\Type\AjaxElement::doSetID()</full_name>
        <docblock line="250">
          <description>Changes the ID of the current object.</description>
          <long-description></long-description>
          <tag name="param" line="250" description="&lt;p&gt;New ID to give Object&lt;/p&gt;" type="string" variable="$ID">
            <type>string</type>
          </tag>
          <tag name="return" line="250" description="$this" type="\BLW\Object">
            <type link="Object.html">\BLW\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="268" package="BLW\Core">
        <name>doSerialize</name>
        <full_name>\BLW\Type\AjaxElement::doSerialize()</full_name>
        <docblock line="268">
          <description>Hook that is called just before an object is serialized.</description>
          <long-description></long-description>
          <tag name="return" line="268" description="$this" type="\BLW\Interface\Object">
            <type link="Object.html">\BLW\Interface\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="287" package="BLW\Core">
        <name>doAJAX</name>
        <full_name>\BLW\Type\AjaxElement::doAJAX()</full_name>
        <docblock line="287">
          <description>Perform an ajax request then exit.</description>
          <long-description></long-description>
          <tag name="api" line="287" description="BLW"/>
          <tag name="since" line="287" description="1.0.0"/>
          <tag name="param" line="287" description="&lt;p&gt;Event associated with ajax request.&lt;/p&gt;" type="\BLW\Interface\Event" variable="$Event">
            <type link="Event.html">\BLW\Interface\Event</type>
          </tag>
          <tag name="return" line="287" description="" type="\BLW\Type\string;">
            <type link="string;.html">\BLW\Type\string;</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interface\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="347" package="BLW\Core">
        <name>GetHTML</name>
        <full_name>\BLW\Type\AjaxElement::GetHTML()</full_name>
        <docblock line="347">
          <description>Overloads GetHTML.</description>
          <long-description></long-description>
          <tag name="see" line="347" description="" link="\BLW\Element::GetHTML()"/>
          <tag name="return" line="347" description="HTML output of Form" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="BLW\Type" line="373" package="BLW\Core">
        <name>InlineJS</name>
        <full_name>\BLW\Type\AjaxElement::InlineJS()</full_name>
        <docblock line="373">
          <description>Get inline JavaScript used by object.</description>
          <long-description>&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Should return &lt;code&gt;NULL&lt;/code&gt; if no inline JavaScript is set.&lt;/p&gt;

&lt;hr&gt;</long-description>
          <tag name="api" line="373" description="BLW"/>
          <tag name="since" line="373" description="1.0.0"/>
          <tag name="return" line="373" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="388" package="BLW\Core">
        <name>SetAction</name>
        <full_name>\BLW\Type\AjaxElement::SetAction()</full_name>
        <docblock line="388">
          <description>Sets an ajax action to $Function.</description>
          <long-description></long-description>
          <tag name="api" line="388" description="BLW"/>
          <tag name="since" line="388" description="1.0.0"/>
          <tag name="throws" line="388" description="If:&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;code&gt;$Action&lt;/code&gt; is not a string.&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;code&gt;$Function&lt;/code&gt; is not callable.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="param" line="388" description="&lt;p&gt;Action to set&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
          <tag name="param" line="388" description="&lt;p&gt;Function to handle ajax action&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="388" description="Previous action or &lt;code&gt;false&lt;/code&gt; on error." type="callable">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="417" package="BLW\Core">
        <name>LoadAjax</name>
        <full_name>\BLW\Type\AjaxElement::LoadAjax()</full_name>
        <docblock line="417">
          <description>Loads element from session / &lt;code&gt;$_REQUEST&lt;/code&gt;.</description>
          <long-description></long-description>
          <tag name="api" line="417" description="BLW"/>
          <tag name="since" line="417" description="1.0.0"/>
          <tag name="return" line="417" description="$this" type="\BLW\AjaxElement">
            <type link="AjaxElement.html">\BLW\AjaxElement</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="428" package="BLW\Core">
        <name>SaveAjax</name>
        <full_name>\BLW\Type\AjaxElement::SaveAjax()</full_name>
        <docblock line="428">
          <description>Saves element to session / &lt;code&gt;$_REQUEST&lt;/code&gt;.</description>
          <long-description></long-description>
          <tag name="api" line="428" description="BLW"/>
          <tag name="since" line="428" description="1.0.0"/>
          <tag name="return" line="428" description="$this" type="\BLW\AjaxElement">
            <type link="AjaxElement.html">\BLW\AjaxElement</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Type\ActiveRecord.php" generated-path="src.BLW.Type.ActiveRecord.html" hash="8882a66d2d1089c546a24fb5f90b705a" package="Default">
    <docblock line="0">
      <description>ActiveRecord.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="37" package="BLW\Core">
      <extends>\ActiveRecord\Model</extends>
      <implements>\BLW\Interfaces\ActiveRecord</implements>
      <name>ActiveRecord</name>
      <full_name>\BLW\Type\ActiveRecord</full_name>
      <docblock line="37">
        <description>Core ActiveRecord pattern class.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All &lt;code&gt;DAO&lt;/code&gt; must either extend this class or
implement the &lt;code&gt;\BLW\Interfaces\ActiveRecord/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
    </class>
    <source>eJx9Ul1rIjEUfV7B/3D3yQ+6jq37UOrg6tphEawFaxEWQWLmjpN1JglJpl3p9r9vMtFRofQl5H7k3HPPSfhDprJeC9rteg3aMKKGveAcqVBxx1bgH9wjhZvbK7jpXvdcT9k3FnKv2DY10KStsvTNHreQj/SiN5dR1NDwW3CsHixSpkGLQlGEhGUILiw2f5AaMAJMivAwWUDGKHKNNibGtWwKHmcYlxCvzKS2cMKhIrY4vHxcYk4n42j2FHWqqUOX9t0+phXvj5jC8DjfcnGJoF6rtPkylITuyBbh53S5GguFPvuCSjPB4brT7XR9ihQmFQqWJDOo4NHofZERCF+Fvw1zok1PScSO2Q0OczjJUdsJHn6xl9gHljS/xpgwjnGzYdONVuvNWPpbVGtUSqhm45lrkiAQSlFrEAnQQhuRWyE3iqh94ypaPz9F8/VyNJ9NZr9afYWmULz/frYZuGUurAdJjKXOgWZE65OeYfp9MBPGinQXBvZ+KsjBKMsgdJYM7kePYVDeILdsAK1xVgf8a5DH3sESF4QqH7NcZpgjN6WTHmPlVJhwSyKxmujVObsDNjtWz/mpgTfyI69gSCRzGR9oxq3alW1wtK36GZ855r4K30FqjLwLgvNyIJVw31oHdlLgxsHUm3Fwmmy0UcT+ey/Che5eIw0X+64e7L7ZSSZb/kSdeu2tXnv/D9kFMKk=</source>
  </file>
  <file path="src\BLW\Type\Decorator.php" generated-path="src.BLW.Type.Decorator.html" hash="a4f541465438e2db1219f56852eaef42" package="Default">
    <docblock line="0">
      <description>Decorator.php | Dec 27, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="53" package="BLW\Core">
      <extends>\BLW\Type\Adaptor</extends>
      <implements>\BLW\Interfaces\Decorator</implements>
      <name>Decorator</name>
      <full_name>\BLW\Type\Decorator</full_name>
      <docblock line="53">
        <description>Core event interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Events must either implement this interface or
extend the &lt;code&gt;\BLW\Type\Event&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="53" description="BLW\Core"/>
        <tag name="api" line="53" description="BLW"/>
        <tag name="since" line="53" description="0.1.0"/>
        <tag name="author" line="53" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="53" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="61" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Type\Decorator::__construct()</full_name>
        <docblock line="61">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="note" line="61" description="On creation must call Subject::AddDecorator."/>
          <tag name="param" line="61" description="&lt;p&gt;The subject of the decorator.&lt;/p&gt;" type="mixed" variable="$Subject">
            <type>mixed</type>
          </tag>
          <tag name="return" line="61" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="74" package="BLW\Core">
        <name>DecorateDo</name>
        <full_name>\BLW\Type\Decorator::DecorateDo()</full_name>
        <docblock line="74">
          <description>Decorators get access to all messeges before they are sent.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="&lt;p&gt;Name of the action.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="74" description="&lt;p&gt;Event object associated with the event.&lt;/p&gt;" type="\BLW\Interfaces\Event" variable="$Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
          <tag name="param" line="74" description="&lt;p&gt;Object being decorated.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Subject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="74" description="$this" type="\BLW\Interfaces\Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interfaces\Event</type>
        </argument>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="86" package="BLW\Core">
        <name>DecorateOn</name>
        <full_name>\BLW\Type\Decorator::DecorateOn()</full_name>
        <docblock line="86">
          <description>Decorators get access to all hooks before they are attatched.</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;Name of the action.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="86" description="&lt;p&gt;Function about to be registered.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="param" line="86" description="&lt;p&gt;Object being decorated.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Subject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="86" description="$this" type="\BLW\Interfaces\Decorator">
            <type link="Decorator.html">\BLW\Interfaces\Decorator</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="97" package="BLW\Core">
        <name>DecorateToString</name>
        <full_name>\BLW\Type\Decorator::DecorateToString()</full_name>
        <docblock line="97">
          <description>Decorators get access to string versions of objects before they are returned.</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;Original string generated by subject&lt;/p&gt;" type="string" variable="$String">
            <type>string</type>
          </tag>
          <tag name="param" line="97" description="&lt;p&gt;Object being decorated.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$Subject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="97" description="Returns modified string." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$String</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="107" package="BLW\Core">
        <name>__destruct</name>
        <full_name>\BLW\Type\Decorator::__destruct()</full_name>
        <docblock line="107">
          <description>Destructor</description>
          <long-description></long-description>
          <tag name="note" line="107" description="On destruction must call Subject::RemDecorator()."/>
          <tag name="return" line="107" description="" type="\BLW\Type\void.">
            <type link="void..html">\BLW\Type\void.</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzNVm1vIjcQ/txI+Q9TCYklStjkUqkVIArNcadIKVSEU6QqEjK7A7hZ7JXtzR269r93/LILAS45pT21+2HXHo89M88zntnOz/kyPz6KT06Oj+AE3mIiFTNSNUkMf9o5vPnxFN6cX1xaBad0JfO14oulgShpuKUzev0Eq76eXI7zwaCu4XcpsNowWXINWhYqQZjzDMFOi9kfmBgwEswS4dfrCWQ8QaGR5sxYlVkh0gxTd8RHbpa0sDknkSmdI9xmd+bN9dVgeDtoVlZ7Vuy1/Typ/D7kKfRK++SLFcTHRxUw3/VyljywBcIvN3f3V1Khlz6i0lwKuGieN8+9iBVmKRXcscyggpHR6yJj0Pko/ai3YtpcqhyxaR66wY5gK9RkwR8/WefYBj6Pvk9xzgWmUZ3E9UbjsyH3F6imqJRUUf2D0GyOwJIEtQY5h6TQRq4IyJlial0/HUw/3A7G07v+eHg9fN9oKzSFEu2/tiJzoXeWP3SH0lD8rU5M481C3u1nGQwyXKEwGlZkAJC4oND4KvdizwsXFO/cxiCV24ufDIrUEdSxbHXvbXDhqE7sRJBkTOvmliNqY/wg5tBjObcSP9FckMXz5oWHH/YZgZKRivTnyLBZIB5gaUzeiuPt5ThX0masjsl4vJdC0IXfggINg3/x5mZZ/wEfLVwVUs2vJ+DxX4Lf5ta9O+0FBl6H/jeBml5w41M6gMpm2ihG1ePKOr+pWiFoDZtY+ynL7UoFV1i8LvHS99X246PPZIAeT5p9LHGCjBWJLYqVsCekQRgJSBQyY/PNUZMw4urWV7ZWq5+mm3q62ZozxVaw4p8whVpQphKJVUmki2xZSw/s9RcYHiVPS2HsB1QoWAZ5MaMqBvNCJM6r6TQp3Y92wx55a6ULDX9OQMA+5Cjh1WptH1Jptzd6peysux1xVLN5Weq5krMLbaWrYYGmrGPUESyMVBE1LpDaAM7t3SFI1kAegSan9uAk97hYQG1IlRTcK6DIHBB7+rtguCsBNf/xb+nxoQSTCWeG2ApNKNzjF8/cARjCfIbW08AupvvsfjE/wUG6Q/wu5UEb38rIoXH6bKz7qy+mRfDS+fJqdpdSPuxTy4xhJlk+AeV1/NqbyGb0W1B7VwJTDdhMFu7HY4YUzIJriv2Ayf8XnSNR0llF9F9wF3gIXdb9dPh7sk+mt/UMl7f+O6KfGle8gnyBAh2UMFuXNfFbcRNMjt2M+qtM+ZyTZS9vfiU3E+lDiUJI/4AYf8Dz1JTtaL8bpWHtCw1pjKtNeW4cbisvxTydlkai/Sj4HCKupz4jfAM4675HEzyIGo3Gtrp9DiiddZ84+qSPBFjCxwEUnCefsP03QxfmsA==</source>
  </file>
  <file path="src\BLW\Model\Compiler.php" generated-path="src.BLW.Model.Compiler.html" hash="457e3323bc0f2a92bc06a3b80c03678d" package="Default">
    <docblock line="0">
      <description>Compiler.php | Dec 11, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="30" package="BLW\Core">
      <extends>\BLW\Type\Object</extends>
      <name>Compiler</name>
      <full_name>\BLW\Model\Compiler</full_name>
      <docblock line="30">
        <description>Builds phar files for blw projects.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;All Objects must extend this class or
implement the &lt;code&gt;\BLW\Interface\Object&lt;/code&gt; interface.&lt;/p&gt;

&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Whenever &lt;code&gt;$DefaultOptions&lt;/code&gt; is used you must
also define &lt;code&gt;$_Initialized&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object must implement dynamic properties&lt;/p&gt;
&lt;hr&gt;</long-description>
        <tag name="package" line="30" description="BLW\Core"/>
        <tag name="api" line="30" description="BLW"/>
        <tag name="version" line="30" description="1.0.0"/>
        <tag name="since" line="30" description="1.0.0"/>
        <tag name="author" line="30" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <property static="true" visibility="protected" line="35" namespace="BLW\Model" package="BLW\Core">
        <name>$_Initialized</name>
        <default>false</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;Used to store class information status.&lt;/p&gt;" type="bool" variable="$Initialized">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" line="43" namespace="BLW\Model" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('PHAR' =&gt; 'APP.phar', 'Root' =&gt; NULL)</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="43" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="43" description="BLW"/>
          <tag name="since" line="43" description="0.1.0"/>
          <tag name="see" line="43" description="Object::__construct()" link="\BLW\Model\Object::__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Model" line="53" package="BLW\Core">
        <name>Initialize</name>
        <full_name>\BLW\Model\Compiler::Initialize()</full_name>
        <docblock line="53">
          <description>Initializes a child class for subsequent use.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Initialization options. (Automatically adds blw_cfg())&lt;/p&gt;&#10;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="53" description="Returns Options used / generated during init." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Model" line="70" package="BLW\Core">
        <name>onCreate</name>
        <full_name>\BLW\Model\Compiler::onCreate()</full_name>
        <docblock line="70">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="note" line="70" description="Format is &lt;code&gt;mixed function (\BLW\Model\ObjectInterface $o)&lt;/code&gt;."/>
          <tag name="param" line="70" description="&lt;p&gt;Function to call after object has been created.&lt;/p&gt;" type="\Closure" variable="$Function">
            <type link="Closure.html">\Closure</type>
          </tag>
          <tag name="return" line="70" description="$this" type="\BLW\Model\Object">
            <type link="Object.html">\BLW\Model\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default>NULL</default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="96" package="BLW\Core">
        <name>phar</name>
        <full_name>\BLW\Model\Compiler::phar()</full_name>
        <docblock line="96">
          <description>Updates the name of phar file to output</description>
          <long-description></long-description>
          <tag name="param" line="96" description="" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="return" line="96" description="$this" type="\BLW\Model\Object">
            <type link="Object.html">\BLW\Model\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="118" package="BLW\Core">
        <name>out</name>
        <full_name>\BLW\Model\Compiler::out()</full_name>
        <docblock line="118">
          <description>Updates the build path.</description>
          <long-description></long-description>
          <tag name="param" line="118" description="" type="string" variable="$Dir">
            <type>string</type>
          </tag>
          <tag name="return" line="118" description="$this" type="\BLW\Model\Object">
            <type link="Object.html">\BLW\Model\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Dir</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="141" package="BLW\Core">
        <name>Optimize</name>
        <full_name>\BLW\Model\Compiler::Optimize()</full_name>
        <docblock line="141">
          <description>Optimizes a file and returns the optimized version of the file.</description>
          <long-description></long-description>
          <tag name="param" line="141" description="&lt;p&gt;File to optimize&lt;/p&gt;" type="string" variable="$File">
            <type>string</type>
          </tag>
          <tag name="throws" line="141" description="If file is not recognized as a file." type="\BLW\Model\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\Model\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="141" description="Optimized version of the file" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$File</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="162" package="BLW\Core">
        <name>run</name>
        <full_name>\BLW\Model\Compiler::run()</full_name>
        <docblock line="162">
          <description>Creates a PHAR archives in the build path.</description>
          <long-description></long-description>
          <tag name="return" line="162" description="$this" type="\BLW\Model\Object">
            <type link="Object.html">\BLW\Model\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW\Model" line="256" package="BLW\Core">
        <name>GetLiblFiles</name>
        <full_name>\BLW\Model\Compiler::GetLiblFiles()</full_name>
        <docblock line="256">
          <description>Gets files from src directory</description>
          <long-description></long-description>
          <tag name="return" line="256" description="Returns all relevant files found." type="string[]">
            <type>string[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW\Model" line="290" package="BLW\Core">
        <name>GetAppFiles</name>
        <full_name>\BLW\Model\Compiler::GetAppFiles()</full_name>
        <docblock line="290">
          <description>Gets files from app directory</description>
          <long-description></long-description>
          <tag name="return" line="290" description="Returns all relevant files found." type="string[]">
            <type>string[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW\Model" line="310" package="BLW\Core">
        <name>GetApplications</name>
        <full_name>\BLW\Model\Compiler::GetApplications()</full_name>
        <docblock line="310">
          <description>Gets files from app directory starting with (APP, OBJ, FORM, EL).</description>
          <long-description></long-description>
          <tag name="return" line="310" description="Returns all relevant files found." type="string[]">
            <type>string[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="BLW\Model" line="329" package="BLW\Core">
        <name>GetAssets</name>
        <full_name>\BLW\Model\Compiler::GetAssets()</full_name>
        <docblock line="329">
          <description>Gets stylesheets, images and javascripts from src and app directory</description>
          <long-description></long-description>
          <tag name="return" line="329" description="Returns all relevant files found." type="string[]">
            <type>string[]</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Model\Element.php" generated-path="src.BLW.Model.Element.html" hash="b342856915f95f29eb9090a9a039795d" package="Default">
    <docblock line="0">
      <description>Element.php | Nov 29, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="28" package="BLW\Core">
      <extends>\BLW\Type\Element</extends>
      <name>Element</name>
      <full_name>\BLW\Model\Element</full_name>
      <docblock line="28">
        <description>Default BLW DOM Element object.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;This is the core BLW DOMobject. All other Objects must extent this class
or implement it's interface.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="28" description="BLW\Core"/>
        <tag name="author" line="28" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="28" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
    </class>
    <source>eJx9UVtv2jAUfo+U/3D2FEBVQsvTRrXR0WhCAipRKqQJCRnnhGQ4tmWftEPd/vvsJNA+TH3zufi7ndtvutBhkAwGYQADSAVWKCl2TfgDS/UMN5+v4GZ4PfLjZmWq9MmUh4Kgx/tQ3dn1aKXTNLLwU0m8rK2L0oJVteEIeSkQfFnvfyEnIAVUICxmaxAlR2nR1Yz8yr6WmcCsgXgpqXCDNxyuMocjm88N5nw2TZePaXxhnfh2u93W/KL2f0phcuZ3WnwjCYO3MCaa8SM7IHyfb7ZTZbovz2hsqSRcx8N42LZYTYUysGGC0MAD2VMtGNy+qPY1qZilkdGIMR2/djySVWgdQwu/cNbEGMq89ynDvJSY9SLXj/r9V3L6D2h2aIwyvehJWpYjMM7RWlA58NqSqlySe8PMKbpKd0+P6Wq3uVstZ8sf/bFBqo0c/31v7R5zVgvy1HD/sDjfHVRzoPgj+53XS5wf2fT5yiMURPpLkrwfJ9ooT2UTh540OuatgS4eLpizd9aFvwllZmHrtaxPGrfdJAxew6Cx1toEMjWO/wEk699m</source>
  </file>
  <file path="src\BLW\Interfaces\Exception.php" generated-path="src.BLW.Interfaces.Exception.html" hash="d6f1287f3e7e781e068d147bb6620112" package="Default">
    <docblock line="0">
      <description>Exception.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <name>Exception</name>
      <full_name>\BLW\Interfaces\Exception</full_name>
      <docblock line="37">
        <description>Core Exception interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Exceptions must either implement this interface or
extend the &lt;code&gt;\BLW\Type\Exception&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="43" package="BLW\Core">
        <name>GetFields</name>
        <full_name>\BLW\Interfaces\Exception::GetFields()</full_name>
        <docblock line="43">
          <description>Generates fields to replace in messege string.</description>
          <long-description></long-description>
          <tag name="return" line="43" description="Fields to replace in messege text." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <source>eJx9U99v2jAQfh4S/8PtiR/qCC17qApiMJYhJMYkSoU0ISHjXEhGYlu20xZ1/d93jmngoaofIt+dv/vxfZfBN5Woei1ot+s1aEP4zFHZVIoOueEf/EAON7dXcNO97rkH5aOJVEed7hMLTd4qQ1/ocwv52Kx6SxWGDQN/pMAKsEpSA0YWmiPEaYbgzGL3F7kFK8EmCL9mK8hSjsIg2cy6J7tCRBlGZYqn1CYUOOfhMqI8ogSXOeezSbi4DztV1ZFz+9fe5lXf73UKo7f61ItzBPVaRcynkWL8wPYI3+frzURq9N5H1IbYgutOt9P1LlbYRGpYs8yiht/WHIuMweBJ+tsoZ8b2tELs2MPwVEewHA1V8OlngpAxWaYPadz8HGGcCoyaDQo2Wq0XS0PsUW9Ra6mbjQdhWIzAOAEMyBh4YazMic6dZvrYuAq3D/fhcrseLxezxbTV12gLLfqvF/OBG+msPhF7auFM5yD5OlxISxzdDQK6nwNqOM6yM9hATg0AkmJEQJqrDHMU1qtXJQapSzQ+WxRRKePAaTrcOApWR4WbKuMgKCPAM2bMZUd66JV7TxwYMZU6jzdMKqhopRO86VStwkcSud0QB0isVXdBcBkOlJZuj01AlQJXDuae95O054Grceq1FwrS8eS704YpCtTMoqFtxiwy7sfQqDKHpDWn/TBIExoSX+w7FWzkxQSmNTvCz4+glqiugIG/qGJHWw9xIXip+xStz9Fs9eu11/9kzUAl</source>
  </file>
  <file path="src\BLW\Model\Settings.php" generated-path="src.BLW.Model.Settings.html" hash="732e75fe7c5daf6ec4b5a4654b6ebe84" package="Default">
    <docblock line="0">
      <description>Settings.php | Dec 11, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="30" package="BLW\Core">
      <extends>\BLW\Type\Iterator</extends>
      <name>Settings</name>
      <full_name>\BLW\Model\Settings</full_name>
      <docblock line="30">
        <description>XXX.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Iterators must either implement this class or
implement the &lt;code&gt;\BLW\Interfaces\Iterator&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="30" description="BLW\Core"/>
        <tag name="api" line="30" description="BLW"/>
        <tag name="version" line="30" description="1.0.0"/>
        <tag name="since" line="30" description="0.1.0"/>
        <tag name="author" line="30" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
      </docblock>
      <property static="true" visibility="public" line="38" namespace="BLW\Model" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array()</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="api" line="38" description="BLW"/>
          <tag name="since" line="38" description="0.1.0"/>
          <tag name="see" line="38" description="Object::__construct()" link="\BLW\Object::__construct()"/>
        </docblock>
      </property>
    </class>
    <source>eJyFUu9v2jAQ/Y7E/3CVJpGgKsD4VrqNjkYTUgsSUIEmJGScC/Ea7Mg+r4u6/e91Yn5sVbf5S3LPd+/eO9/1pyIrmo1Ou91sQBvmSCTkzkQOhZ9wixx6vUt43+31q/s6Z6SKUotdRhDwEPY3ZtGfFXHcMvBVSTylLTJhwCirOUIqcoQqtNtvyAlIAWUI9+MF5IKjNOhiRlXK1sokx6SmeBKUuYszD1eJ45F1cc15Nx7Fk3kcnboOK9hn+5if1L6lFIbH/k5LBXSajfM0hgXjj2yH8PluuR4pfSj5jtoIJaEXdaOuh5ilTGlYspxQw5RMaXMG10/K/w33zFBfF4gRPX489JFsj8Z18PT3zlo+AJEGFwmmQmIStBzeCsNncvp3qDeotdJB60EaliIwztEYUClwa0jt3SS3mumydRlvHubxbLO8mU3Gky/hQCNZLQe/fre2Wq2if3lkhaiQvxo2Qjrh3aj3agKnIf/HPM+ZE39cN8AfhDIxsK5ULMoC12M3SEZKNxvPrsQdr7w6lSKmgWnNSnh3iymzOU0LchINHEJQh9gaTGBbgm8oUpCKwCBVa8RdAmnLXZvozH22fgD+9HoEEb3aab3SV1ebzYkuCOFN9Fjd8T+F3brtA0OM3Oe1kQ/eYOBzw0GzUT+gf0xwjDh4AVsVHeM=</source>
  </file>
  <file path="src\BLW\Type\DOMElement.php" generated-path="src.BLW.Type.DOMElement.html" hash="17ddc06103648f417388726aca901169" package="Default">
    <docblock line="0">
      <description>DOMElement.php | Dec 21, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Type" line="28" package="BLW\Core">
      <extends>\DOMElement</extends>
      <name>DOMElement</name>
      <full_name>\BLW\Type\DOMElement</full_name>
      <docblock line="28">
        <description>Upgrades DOMElement php class.</description>
        <long-description></long-description>
        <tag name="package" line="28" description="BLW\Core"/>
        <tag name="author" line="28" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="28" description="See reference" link="http://www.php.net/manual/en/class.domelement.php"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="36" package="BLW\Core">
        <name>ParseHTML</name>
        <full_name>\BLW\Type\DOMElement::ParseHTML()</full_name>
        <docblock line="36">
          <description>Parses a HTML string and returns DOMNodeList of toplevel elements.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;HTML String to parse.&lt;/p&gt;" type="string" variable="$HTML">
            <type>string</type>
          </tag>
          <tag name="throws" line="36" description="If &lt;code&gt;$HTML&lt;/code&gt; is not valid markup." type="\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="36" description="Nodes of parsed string." type="\DOMNodeList">
            <type link="DOMNodeList.html">\DOMNodeList</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$HTML</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="81" package="BLW\Core">
        <name>createElement</name>
        <full_name>\BLW\Type\DOMElement::createElement()</full_name>
        <docblock line="81">
          <description>Wrapper for &lt;code&gt;DOMDocument::createElement()&lt;/code&gt;</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;Tag name of element.&lt;/p&gt;" type="string" variable="$Name">
            <type>string</type>
          </tag>
          <tag name="param" line="81" description="&lt;p&gt;Value of element if applicable.&lt;/p&gt;" type="string" variable="$Value">
            <type>string</type>
          </tag>
          <tag name="link" line="81" description="See reference" link="http://www.php.net/manual/en/domdocument.createelement.php"/>
        </docblock>
        <argument line="0">
          <name>$Name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Value</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="93" package="BLW\Core">
        <name>outerHTML</name>
        <full_name>\BLW\Type\DOMElement::outerHTML()</full_name>
        <docblock line="93">
          <description>Returns HTML string of this element.</description>
          <long-description></long-description>
          <tag name="return" line="93" description="Element HTML." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="120" package="BLW\Core">
        <name>innerHTML</name>
        <full_name>\BLW\Type\DOMElement::innerHTML()</full_name>
        <docblock line="120">
          <description>Inner HTML of</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="156" package="BLW\Core">
        <name>tag</name>
        <full_name>\BLW\Type\DOMElement::tag()</full_name>
        <docblock line="156">
          <description>Set / Get current tag of node.</description>
          <long-description></long-description>
          <tag name="note" line="156" description="You should replace current node with return value if modifying node."/>
          <tag name="param" line="156" description="&lt;p&gt;New tag name.&lt;/p&gt;" type="string" variable="$Tag">
            <type>string</type>
          </tag>
          <tag name="throws" line="156" description="if tag is not null or a valid node name." type="\BLW\InvalidArgumentException">
            <type link="InvalidArgumentException.html">\BLW\InvalidArgumentException</type>
          </tag>
          <tag name="return" line="156" description="returns false on failure or new node on success." type="boolean|\DOMElement">
            <type>boolean</type>
            <type link="DOMElement.html">\DOMElement</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Tag</name>
          <default>NULL</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Model\InvalidClassException.php" generated-path="src.BLW.Model.InvalidClassException.html" hash="500bc8c7c5a3b9cdb1cd9a5d6a340618" package="Default">
    <docblock line="0">
      <description>InvalidClassException.php | 20 Nov 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="true" abstract="false" namespace="BLW\Model" line="36" package="BLW\Core">
      <extends>\BLW\Type\LogicException</extends>
      <name>InvalidClassException</name>
      <full_name>\BLW\Model\InvalidClassException</full_name>
      <docblock line="36">
        <description>Makes reporting errors just easy.</description>
        <long-description></long-description>
        <tag name="package" line="36" description="BLW\Core"/>
        <tag name="api" line="36" description="BLW"/>
        <tag name="version" line="36" description="1.0.0"/>
        <tag name="since" line="36" description="1.0.0"/>
        <tag name="author" line="36" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="36" description="PHP Reference &gt; LogicException Class" link="http://php.net/LogicException"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="54" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Model\InvalidClassException::__construct()</full_name>
        <docblock line="54">
          <description>Overloads parent constructor</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;Current status of the class.&lt;/p&gt;" type="int" variable="$status">
            <type>int</type>
          </tag>
          <tag name="param" line="54" description="&lt;ul&gt;&#10;&lt;li&gt;&lt;b&gt;%header%&lt;/b&gt;: &lt;code&gt;class::function(arguments):&lt;/code&gt; &lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%status%&lt;/b&gt;: Status code of current object.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%args%&lt;/b&gt;: All arguments as a string.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%class%&lt;/b&gt;: Class of of function.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%func%&lt;/b&gt;: Function with invalid argument.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;" type="\BLW\Model\name" variable="$message">
            <type link="name.html">\BLW\Model\name</type>
          </tag>
          <tag name="param" line="54" description="&lt;p&gt;Exception code.&lt;/p&gt;" type="int" variable="$code">
            <type>int</type>
          </tag>
          <tag name="param" line="54" description="&lt;p&gt;Previous Exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type link="Exception.html">\Exception</type>
          </tag>
          <tag name="return" line="54" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$status</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$message</name>
          <default>'%header% Current class is currupted. Status: %status%.'</default>
          <type>\BLW\Model\name</type>
        </argument>
        <argument line="0">
          <name>$code</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$previous</name>
          <default>NULL</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <source>eJyNVG1v2jAQ/s6vuElUgYol3fqNt9EhtlWirKKtKm1MyCQHeIQ48gsd2vbfd3ac0DI0LYqU2L577u65x9d9l6/zWnR+XoNzuM52LOXJMGVKjX7EmGsuspAM4Be8vYCJ2NHnzSWZWuuhyPeSr9YaGnETtlfq/nKaj0aBgi8iQ290v+YKlDAyRljyFMEuzeI7xhq0AL1GuLm+h5THmCmkNdPWZGGyJMXEIjxxvab9A0wsEoLJnK+DHF8PR5O7UehDDuxmYeuWcZXniRxhUIamNGgd1UoyBjmLN2yF8H786NY7lIr4gDfhRXjhdpjRayHhkaUaJXzWam9SBt0nUfwNtkzpS5kjhnrTL8AztkVFyA52dkOlpB3gy8arBJc8w6QR0H7QbP7UlPIK5RylFLIRPGSKLRFYHKNSIJYQG6XFlohbSCb3QWs0f7gbTeePV9PJ9eRjsyNRG5l1ftdqhoqrutmp6rthG1QgMRdS82wFLpCC74QLyNS+ovMZD7OhkAVrLOf/IEbxjCr8i6iK/39w5HuSbWCtdd6OIpJfmKGOxmLF46oOuP10C1NcokQbqg9Hx07DjnKilaUQ2/VpgQP+0JglCma2wvt9jrOXYLWfNaDH8Wafc/hMJaeCkU/OKAFNmsyUlibWQnqb0pTok2xLetVQV5ppo2BopHPyS2qmlbLLMDxys3KBOklGUQfKs65J+9V/yvvdRf9sjSxBedaNFv02dO0V6TvAdntpsthW0WByZbYUVzXb3chZQDci92OoIi0PdVfk6O6cU12RunA3ODzpT3FK76s0hSosMHqpaElqO+3pMvaurkc2JL1lCae97Kl3+uANi6HBi25XGRy5R89ofN4lV+tBHXZ53JbZ4bieS9xxQRzdlj+H0Vm5FbcRdoInfi9y39wsaP5UBcJ8Ximp4eXSqvoPPQjKRlciKoRN09G2xuQak9A3rQ1lK8Og5cvqwUULTiXfg8nDeNx0SRVyt099inlKw6roXw/qdg6/7n9E/YFjmqhGs3OwLbN0T882ei4Ld5KeZPv5Bveq8QKy2YLiiBpl8O/DEvM/wwRlwVTvgA4ItWTxP8DC3st6vwZnMaPhmZwF32hslj5Hw6HdftEzD+j5bh0Y9lF/12giezWQC3b+AA6oWRQ=</source>
  </file>
  <file path="src\BLW\Type\Singleton.php" generated-path="src.BLW.Type.Singleton.html" hash="d5d17a57bd60f1d6d72d4bd8eda4f400" package="Default">
    <docblock line="0">
      <description>Singleton.php | Dec 28, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="33" package="BLW\Core">
      <extends>\BLW\Type\Object</extends>
      <implements>\BLW\Interfaces\Singleton</implements>
      <name>Singleton</name>
      <full_name>\BLW\Type\Singleton</full_name>
      <docblock line="33">
        <description>Core Sigleton pattern class.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;All Objects must extend this class or
implement the &lt;code&gt;\BLW\Interface\Object&lt;/code&gt; interface.&lt;/p&gt;

&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Whenever &lt;code&gt;$DefaultOptions&lt;/code&gt; is used you must
also define &lt;code&gt;$_Initialized&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object must implement dynamic properties&lt;/p&gt;
&lt;hr&gt;</long-description>
        <tag name="package" line="33" description="BLW\Core"/>
        <tag name="api" line="33" description="BLW"/>
        <tag name="since" line="33" description="0.1.0"/>
        <tag name="version" line="33" description="1.0.0"/>
        <tag name="author" line="33" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="33" description="mAsT3RpEE's Zone &gt; Projects &gt; BLW" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="private" line="39" namespace="BLW\Type" package="BLW\Core">
        <name>$_Instance</name>
        <default>array()</default>
        <docblock line="39">
          <description>Array containig class instances.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="\BLW\Interfaces\Singleton" variable="$_Instance">
            <type link="Singleton.html">\BLW\Interfaces\Singleton</type>
          </tag>
        </docblock>
      </property>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="48" package="BLW\Core">
        <name>GetInstance</name>
        <full_name>\BLW\Type\Singleton::GetInstance()</full_name>
        <docblock line="48">
          <description>Creates a new instance of the object.</description>
          <long-description></long-description>
          <tag name="api" line="48" description="BLW"/>
          <tag name="since" line="48" description="1.0.0"/>
          <tag name="param" line="48" description="&lt;p&gt;Options to use in initializing class.&lt;/p&gt;" type="array" variable="$Options">
            <type>array</type>
          </tag>
          <tag name="return" line="48" description="Returns a new instance of the class." type="\BLW\Interfaces\Singleton">
            <type link="Singleton.html">\BLW\Interfaces\Singleton</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="64" package="BLW\Core">
        <name>SetInstance</name>
        <full_name>\BLW\Type\Singleton::SetInstance()</full_name>
        <docblock line="64">
          <description>Changes the current singleton instance.</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;Object to set singleton value to.&lt;/p&gt;" type="\BLW\Interfaces\Object" variable="$NewObject">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
          <tag name="return" line="64" description="Returns &lt;code&gt;TRUE&lt;/code&gt; on success and &lt;code&gt;FALSE&lt;/code&gt; on failure." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$NewObject</name>
          <default></default>
          <type>\BLW\Interfaces\Object</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="76" package="BLW\Core">
        <name>ClearInstance</name>
        <full_name>\BLW\Type\Singleton::ClearInstance()</full_name>
        <docblock line="76">
          <description>Clears the current signleton instance.</description>
          <long-description></long-description>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="BLW\Type" line="94" package="BLW\Core">
        <name>doCreate</name>
        <full_name>\BLW\Type\Singleton::doCreate()</full_name>
        <docblock line="94">
          <description>Hook that is called when a new instance is created.</description>
          <long-description></long-description>
          <tag name="see" line="94" description="" link="\BLW\Type\Object::doCreate()"/>
          <tag name="return" line="94" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="108" package="BLW\Core">
        <name>doUpdate</name>
        <full_name>\BLW\Type\Singleton::doUpdate()</full_name>
        <docblock line="108">
          <description>Hook that is called when instance is changed.</description>
          <long-description></long-description>
          <tag name="see" line="108" description="" link="\BLW\Type\Singleton::onUpdate()"/>
          <tag name="return" line="108" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="122" package="BLW\Core">
        <name>onUpdate</name>
        <full_name>\BLW\Type\Singleton::onUpdate()</full_name>
        <docblock line="122">
          <description>Hook that is called when instance is changed.</description>
          <long-description></long-description>
          <tag name="note" line="122" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="see" line="122" description="" link="\BLW\Type\Singleton::doUpdate()"/>
          <tag name="param" line="122" description="&lt;p&gt;Function to call on change.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="122" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="134" package="BLW\Core">
        <name>doDelete</name>
        <full_name>\BLW\Type\Singleton::doDelete()</full_name>
        <docblock line="134">
          <description>Hook that is called when instance is deleted.</description>
          <long-description></long-description>
          <tag name="see" line="134" description="" link="\BLW\Type\Singleton::onUpdate()"/>
          <tag name="return" line="134" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="149" package="BLW\Core">
        <name>onDelete</name>
        <full_name>\BLW\Type\Singleton::onDelete()</full_name>
        <docblock line="149">
          <description>Hook that is called when instance is deleted.</description>
          <long-description></long-description>
          <tag name="note" line="149" description="Format is &lt;code&gt;mixed function (\BLW\Interfaces\Event $Event)&lt;/code&gt;."/>
          <tag name="see" line="149" description="" link="\BLW\Type\Singleton::doUpdate()"/>
          <tag name="param" line="149" description="&lt;p&gt;Function to call on change.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="149" description="$this" type="\BLW\Interfaces\Object">
            <type link="Object.html">\BLW\Interfaces\Object</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
    </class>
    <source>eJztV1tPG0cUfi4S/+FEIrWNiA3hpXIIxTFOatWBiksjtVTWePfYnrCeWc3MQijlv/fMZdfrK9A2ah+6L96dObf5vnMZH3yfjtPNjcb29uYGbMM5F6MEjRR1WoY/4BgjeP3dDrze3du3Ak6oLdM7xUdjA9WoBpOWvtg/SzudioZfpMBC7GLMNWiZqQhhyBME+5kNPmNkwEgwY4SP3QtIeIRCI30zY0UGmYgTjJ2JW27GtDG1E8mY7Ain7Gz2uu3OyXmnXng9sste2n9HRbTLIoWj3D/FYhcamxsFHN8cpSy6ZiOEd71PV22p0K/eoNJcCtir79Z3/RLLzFgq+MQSgwpOjb7LEgYHt9K/HU2YNvsqRayb68PgR7AJavLgzV/cpfjGOufD6osYh1xgXK3QTqVWuzd0ghGqPiolVbVyKTQbIrAoQq1BDiHKtJETwnKgmLqr7HT6l+eds/6n1tlJ9+RD7Y1Ckynx5qF0OLDnIcI935AyQ5ELiBKmdd1Ds+z0cMRSblf8h+aC4t+t73kgYBEbyLEp4F8Hi+VDXMPYmLTZaJS3G6mSNnd0g5w3FsiEQ/gpCNBriI9AZgNtFKOUcwebJjjgF4Mi1nCVg3916nOTT9IEJyhM2OsKAmZINOmrQntz457s0+PBtM82tJRid5SiwjAu+Ch45EIbRiA5UL3g0Q1Tq23DVr8bdHKNhn9JFb9hBoE2DY9KcvAWmHVerbkMmg+srZDUNDAQeFsEZPPG1pF0xy5FNyU4LHiSc0bDYsoUm3i3sHWaGiJdQ/5L9Z1pV6mEhOEs4b/T8abJFWz4tFwDxZkTWBX5rLkAEhUOSyDNBlTYOVLDTEQ2MPiAJsesWgRdgFfzFgK19tk69wbewghNP2IJdaa+c1uC2j58CNUXXGs0VY3JsNmckvNrMPJbrVY2bZ+VouTQHtiHX0RqXeaqD2XvAceV5oLew9LkGDMxouRwgGZKUeKDLgjIIa/PEz/PWSierRO8Da+nRasnVEomb1iSUbuXi3kwkDIpKD+wvf7w4uyyc9Bwr0C6OvMtj4k4CLxv9c7LEkPGk0zhs7LivJQVa8qyONqz8+QpfE/NP0Xh1WEsL9OYynrGQQDSqAzXcp4gU/OUj8RKyoPZG8nj5+Dq3BTI/s3qenZxWaXVgOenpFbiw17QfxT/YyTAZvEPiC8t0nXkn1z2eusI+0HK6+KG5IGC2zGK+cZod12zj0vsacSFKddsxtKPhZyXNf04r217E5sfScuZnzd+/yQuF7NgCa1mrOStO7UL8yMVfkLBUlfhcdtqdb5E6PpldXcHKi/HyGJUL+FUJHdgLwrlKcJKfWlCg2yAOX6Vx5ottUGqmzKOf4nAGepcK15NXdGLmk0p8ur/B9gr0TZrtVyrVv3VYT+WdP10QpWdeRY6N4RI8Nc1OKk6pR14tVebrecQqdv+CqgJSZek91JNvKIfFBP+hbSLoy40ehc8bLmfWhgoT2FiHrPpiLQBswH9Sdl6n3stXmgq2m07sXz8j9+KnsFjkR2F59WEUp1MCZ3Kfz2+Ytc2/9Uszzv3AiiNBlz4v1qANhGW579X/6/k/yKe/+e/CAyvyX/6m811P4+xJLkwccqVUlA/Uym55MycwIT+Aa0wZSd/puHbt2FyNpvdk59bve5xv93q9d612j/OXSqeMfVmfTw2xuZy8OFPbkBRlg==</source>
  </file>
  <file path="src\BLW\Control\Compiler.php" generated-path="src.BLW.Control.Compiler.html" hash="7a89e74e62da643edf7738a1a6595531" package="Default">
    <docblock line="0">
      <description>APP.run.php | Dec 16, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Control" line="419" package="Default">
      <extends/>
      <name>Compiler</name>
      <full_name>\BLW\Control\Compiler</full_name>
      <docblock line="419">
        <description></description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Control" line="421" package="Default">
        <name>GetInstance</name>
        <full_name>\BLW\Control\Compiler::GetInstance()</full_name>
        <docblock line="421">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Control" line="425" package="Default">
        <name>run</name>
        <full_name>\BLW\Control\Compiler::run()</full_name>
        <docblock line="425">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0">
          <name>$Timeout</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="src\BLW\Model\InvalidArgumentException.php" generated-path="src.BLW.Model.InvalidArgumentException.html" hash="c6f0d0e2c8493d08146084c524c9c954" package="Default">
    <docblock line="0">
      <description>InvalidArgumentException.php | Dec 2, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="true" abstract="false" namespace="BLW\Model" line="31" package="BLW\Core">
      <extends>\BLW\Type\LogicException</extends>
      <name>InvalidArgumentException</name>
      <full_name>\BLW\Model\InvalidArgumentException</full_name>
      <docblock line="31">
        <description>Makes reporting errors just easy.</description>
        <long-description></long-description>
        <tag name="package" line="31" description="BLW\Core"/>
        <tag name="api" line="31" description="BLW"/>
        <tag name="version" line="31" description="1.0.0"/>
        <tag name="since" line="31" description="1.0.0"/>
        <tag name="author" line="31" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="31" description="Language Reference" link="http://php.net/InvalidArgumentException"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="49" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Model\InvalidArgumentException::__construct()</full_name>
        <docblock line="49">
          <description>Overloads parent constructor</description>
          <long-description></long-description>
          <tag name="param" line="49" description="&lt;p&gt;The argument that is invalid.&lt;/p&gt;" type="int" variable="$argno">
            <type>int</type>
          </tag>
          <tag name="param" line="49" description="&lt;ul&gt;&#10;&lt;li&gt;&lt;b&gt;%header%&lt;/b&gt;: &lt;code&gt;class::function(arguments):&lt;/code&gt;.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%argno%&lt;/b&gt;: Invalid argument position.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%args%&lt;/b&gt;: All arguments as a string.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%class%&lt;/b&gt;: Class of of function.&lt;/li&gt;&#10;&lt;li&gt;&lt;b&gt;%func%&lt;/b&gt;: Function with invalid argument.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="&lt;p&gt;Exception code.&lt;/p&gt;" type="int" variable="$code">
            <type>int</type>
          </tag>
          <tag name="param" line="49" description="&lt;p&gt;Previous Exception.&lt;/p&gt;" type="\Exception" variable="$previous">
            <type link="Exception.html">\Exception</type>
          </tag>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$argno</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$message</name>
          <default>'%header% Argument %argno% is invalid.'</default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$code</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0">
          <name>$previous</name>
          <default>NULL</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <source>eJx9VO9v2jAQ/c5fcZOoAhVNuvXLxK/RdWyqRNuJtaq0MSHjHOAR7Mh2uqFu//sujhMopbUiiO17z+/eXdz9kC7TWnR8XINjuJQPLBHxuV5ka5R2+IdjaoWSIcXAX/iEHN614N3p2zOKzgEXKt1osVhaaPCm2zihn/ewPje3Z+N0OAwMfFcSffjtUhgwKtMcYS4ShHyazX4ht2AV2CXC1eUtJIKjNEhzZvOQWSbjBOOc4bewS1rf0nAVE410WEc5urwYXn8bhv7IQb5YxLoprxQf0AiD8miSQfOoVjozSBlfsQXCx9G9mz+gNuQMvA1Pw1O3wjK7VBruWWJRw401myxh0P2tirfBmhl7plPE0K76jlyyNRoidqyTK8ok6YCYN97EOBcS40ZA60Gz+WhJ8QL1FLVWuhHcScPmCIxzNAbUHHhmrFqTbzPN9CZoDad334bj6f35+Pry+kuzo9FmWnb+VelcsRUa0JgqbYVcgCM28It4AJnZhPs5Ty6ULhxiqXjFBCMkpfPMlMrrV/zIzZcrWFqbtqOIOi6UaKOXWhJGTC6yXN0Y56hRuvpGNTKOJcATRs68iMU/FmVsYJJndrtJcTJSC8GrgNpjDWg4s/JxDDeUaqIYYVJGh1nqO2mszrhV2seUoWSbZmvqSQt1phdSUdtTsbyIqqlFIS7cgxFpXpA6dYah7Mrdbpb0q/dE9Luz/tESWYz6qBvN+m3o5h9C3+Xdbs8zyfM8GuWpptnuRi4i7EYE36dyOj2Td22rOFVGuFvgJajxyPMkqVAGGD0+ncNIJ9ZDL1zBqJXpKdUfRuW7HvTZBxa3gtjTvQePdhzcLZG7QLatkU/3azLZbtdTjQ9CZQa+li/bW7KCFd8bPCgR+7XI/afZjC6YKkGYTqs2ahS90qoqDz0IyhJD2cLgK7XbQEHLJ9GD09ZhrT24vhuNmk5D0dr5qI8xTej2Kcq1M3pQz6/Yk/4XtJ8FJrFpNDuHYT8Cryj4SbAB5UKifC6E2YLKrCiKgqa64KAG1WwzXeHGNJ7wNltQbBFdhs83S75dXeURYe+ZRs4ygzGJ3JG0982320+q4cm8t62tmf7EfzW6TX2dCYKd/6AURtQ=</source>
  </file>
  <file path="src\BLW\Model\AjaxElement.php" generated-path="src.BLW.Model.AjaxElement.html" hash="b4d108ec738a072b4a1b3875ec7a9844" package="Default">
    <docblock line="0">
      <description>AjaxElement.php | Nov 29, 2013</description>
      <long-description>Copyright (c) mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="BLW\Model" line="28" package="BLW\Core">
      <extends>\BLW\Type\AjaxElement</extends>
      <name>AjaxElement</name>
      <full_name>\BLW\Model\AjaxElement</full_name>
      <docblock line="28">
        <description>Default BLW DOM Element object.</description>
        <long-description>&lt;h3&gt;About&lt;/h3&gt;

&lt;p&gt;I really thought about how to add ajax to objects. I finally resolved
it this way:&lt;/p&gt;

&lt;p&gt;Most CMS have ajax but my system needs to be compatible with all of
them while still allowing for ajax in a stand alone fashion.&lt;/p&gt;

&lt;p&gt;Therefore you must create an ajax element before any headers are sent
just like the header() function in php allowing ajax elements to output
cookies as well as output ajax replies on same url. Simple.&lt;/p&gt;

&lt;hr&gt;</long-description>
        <tag name="package" line="28" description="BLW\Core"/>
        <tag name="author" line="28" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="28" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="true" visibility="public" line="34" namespace="BLW\Model" package="BLW\Core">
        <name>$DefaultOptions</name>
        <default>array('HTML' =&gt; '&lt;span class="ajax"&gt;&lt;/span&gt;', 'DocumentVersion' =&gt; '1.0', 'AJAX' =&gt; array(), 'Type' =&gt; self::TYPE_COOKIE)</default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="34" description="&lt;p&gt;Default options used by class if not set in constructor.&lt;/p&gt;" type="array" variable="$DefaultOptions">
            <type>array</type>
          </tag>
          <tag name="see" line="34" description="Object::__construct()" link="\BLW\Type\Object::__construct()"/>
        </docblock>
      </property>
      <property static="true" visibility="protected" line="44" namespace="BLW\Model" package="BLW\Core">
        <name>$_Initialized</name>
        <default>false</default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="44" description="&lt;p&gt;Used to store class information status.&lt;/p&gt;" type="bool" variable="$Initialized">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Model" line="57" package="BLW\Core">
        <name>InlineJS</name>
        <full_name>\BLW\Model\AjaxElement::InlineJS()</full_name>
        <docblock line="57">
          <description>Get inline JavaScript used by object.</description>
          <long-description>&lt;h4&gt;Note:&lt;/h4&gt;

&lt;p&gt;Should return &lt;code&gt;NULL&lt;/code&gt; if no inline JavaScript is set.&lt;/p&gt;
&lt;hr&gt;</long-description>
          <tag name="api" line="57" description="BLW"/>
          <tag name="since" line="57" description="1.0.0"/>
          <tag name="return" line="57" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9VG1P2zAQ/o7U/3BDSGkRSnjZl7WhawcRKyvtRMvYJqTKTS8kkNqR7QAd23/fOU7bABX+Evt8L88998T+5yzOalve7m5tC3ahe8eeghTnyLVLF/AXBuIBDj/tweH+wZFxKdxORLaQyW2soR42YN5V46PLLAgcBb8Fx5XbOE4UKJHLECFKUgRzzKd3GGrQAnSMcNEbQ5qEyBXSmWnjMs35LMVZkeIx0TFdrPOEYkZ5eBFc5Oz3ToLBKHBXVTvGbL3tOVyh3YQUOsv6hMUYvNrWmpBOxsJ7dovwpX99cyJkGfKAUiWCw4G77+5bE8t1LCRcs1SjhKFWizxl4D8Ku+vMmdJHMkN09X27rMPZHBVVsOkvqLW0BUlU/zDDKOE4qztkdxqNZ034b1FOUEoh684VVyxCYGGISoGIIMyVFnNiciqZXDh7weRqFFxOrruXg97grNGSqHPJW/+qrZ1ixPJUm9JwOryAcu4gigG577Vf9rqi8702Db/8HmKts6bnVa+9TApTSnmU3Stw9G0DJT1hyqi9iiYBnzTymYIbg2e8yPCmclvbeqZAWrZDs8yomAQmJVvATtnxMNM0O7UiQJTnXOEMpguwZZMIuNCgUBu5heSgZR5qId11boVYgTIsiGs2J5OVd70BG63LFJ7dZPmURAhKM02f1ziPLf56GUTL+Tq+6DvwYh23wfFJTNziP95mxMx22/eMre2sg/ecUxHmhrAfVsWODSYtv/Dqnnd/Oq9LWCSNqp/p/Y2fwjRqNse/vgeTk+HwWy+wEY2WUeDGGU2FSGGnxxOdsDT5Q6O4MvOgd4KkLXE5FR4JOWeGmIKuXLmvuZRCE+EUuqRzUk16DBFLFW7EcVbMmuSKcM4e2CiUSaZXslj/F4X3KsqPP7YHVLPpe7R7e521R7HI0xnYnxB884S1B1f9vu8VWyu1DZXNq4fa9b2sXakm14cOyxLz31QUmXB6TZbPUmksC5P4En67WXpRzsOC1F6B4ny0nPHzetRlGoO8Za30nhRPSnlD4sbWf6Yp0Ro=</source>
  </file>
  <file path="src\BLW\Interfaces\Mediator.php" generated-path="src.BLW.Interfaces.Mediator.html" hash="1c5f545754ba4cf3abee1db3cd9f531b" package="Default">
    <docblock line="0">
      <description>Mediator.php | Dec 28, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <interface namespace="BLW\Interfaces" line="37" package="BLW\Core">
      <extends>\BLW\Interfaces\Adaptor</extends>
      <name>Mediator</name>
      <full_name>\BLW\Interfaces\Mediator</full_name>
      <docblock line="37">
        <description>Core Mediator pattern interface.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All mediators must either implement this interface or
extend the &lt;code&gt;\BLW\Type\Mediator&lt;/code&gt; class.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW / Symfony"/>
        <tag name="since" line="37" description="1.0.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="45" package="BLW\Core">
        <name>Trigger</name>
        <full_name>\BLW\Interfaces\Mediator::Trigger()</full_name>
        <docblock line="45">
          <description>Triggers an event.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;Action to trigger.&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
          <tag name="param" line="45" description="&lt;p&gt;Event object associated with the event.&lt;/p&gt;" type="\BLW\Interfaces\Event" variable="$Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
          <tag name="return" line="45" description="Event used by trigger." type="\BLW\Interfaces\Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Event</name>
          <default></default>
          <type>\BLW\Interfaces\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="55" package="BLW\Core">
        <name>Register</name>
        <full_name>\BLW\Interfaces\Mediator::Register()</full_name>
        <docblock line="55">
          <description>Registers a function to handle an event.</description>
          <long-description></long-description>
          <tag name="note" line="55" description="Format is &lt;code&gt;function (\BLW\Interface\Event $Event)&lt;/code&gt;."/>
          <tag name="param" line="55" description="&lt;p&gt;Action to register.&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Function to call when event is triggered.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Priority of the function. (Higher value = Higher priority)&lt;/p&gt;&#10;" type="int" variable="$Priority">
            <type>int</type>
          </tag>
          <tag name="return" line="55" description="Event used by trigger." type="\BLW\Interfaces\Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
        <argument line="0">
          <name>$Priority</name>
          <default>0</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Interfaces" line="63" package="BLW\Core">
        <name>Deregister</name>
        <full_name>\BLW\Interfaces\Mediator::Deregister()</full_name>
        <docblock line="63">
          <description>Deregister a function from handling an event.</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;Action to register.&lt;/p&gt;" type="string" variable="$Action">
            <type>string</type>
          </tag>
          <tag name="param" line="63" description="&lt;p&gt;Function to call when event is triggered.&lt;/p&gt;" type="callable" variable="$Function">
            <type>callable</type>
          </tag>
          <tag name="return" line="63" description="Event used by trigger." type="\BLW\Interfaces\Event">
            <type link="Event.html">\BLW\Interfaces\Event</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$Function</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
    </interface>
    <source>eJy1VG1P2zAQ/jwk/sNNQmqLuoaXfUC0dO1Y2SpBN5UipKkScpNLk5HYlu3AIsZ/3zlO00I7tEkjHxLbl7t77nnu3PkgI7m95e3ubm/BLlxgEDMjVItO4Rd8Qh8OjppwsLd/aO3FP6dC5iqeRwbqfqMwvaPXEaR9PTkcy8GgpuG74Fg5TKJYgxaZ8hHCOEGw22z2A30DRoCJEC6GE0hiH7lG2jNjf5llPEgwKELcxyYiwzKOLwKKwwvnIub58HQwuhy0qqw9e+z+dnu/wr0JKfQW+QmLPfC2type3vQk82/ZHOHj+fX0VCh0p3eodCw47Lf2WnvuiGUmEgquWWJQwVej8yxh0LkXbtVLmTaHSiK2zG23zMNZipoyuPBDTp4h7XQb4rD+NsAw5hjUa2SsNRoPhoqYo7pBpYSq1664ZiEC88lBgwjBz7QRKdE5U0zltebg5upyML657o9Hw9HnRluhyRRvP67UB7akSnyQzBAETvyWSJasdqL33ZEwRNVxx6P10iC7/SSBtIyhISUYgKQb0RCnMsEUuXEaVnFBqMIZfxrkQSFmxyrbnVoiJrnE6QJUxysM4CdM61U8quvk26QQ9JiM7Ql4cJmnoeC5O9Yxp+yVbLCQreqMlxSzrcJvITJGHnveqtmTSti21h7l9IrE506GUull5RXZrnYN06faT/sBk8by80C+9Dip7EMT5VpAA+OAd8RrqzIRD4qloKlL+Bx2+r6xDVp+7LQ51zWH5+kHNizsuI97CzeyxL/wCTsGi7HENRCux/4Q1L0zTQFm+Rogzy1kNqOBhDDjDnpZcr2sqPki4EbbNvdz1sY4j7UpaFvGJUoiZi+aTVxyYRDOhErdjeR6s3KtP4XwFEHZr38vjCrRrXn4LEnYjADunC0yn62gt2a4j7BEb3GWlGKwFiu2AL+pWKjY5FAt6NYoLtIybAvqX+iipMG9Y0mGcALlVpYOjddUeiHTUuqq8OYK+BPY2yzzJ1xQuapzqOhOLJS29P/73LyyPP+fxiUNG4i0zD3+BmrtfaI=</source>
  </file>
  <file path="src\BLW\Type\Event.php" generated-path="src.BLW.Type.Event.html" hash="7ae1b132cf3f526951d87b9d742c56b8" package="Default">
    <docblock line="0">
      <description>Event.php | Dec 27, 2013</description>
      <long-description>Copyright (c) 2013-2018 mAsT3RpEE's Zone

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.</long-description>
      <tag name="filesource" line="0" description=""/>
      <tag name="copyright" line="0" description="mAsT3RpEE's Zone"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="true" namespace="BLW\Type" line="37" package="BLW\Core">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <implements>\BLW\Interfaces\Event</implements>
      <name>Event</name>
      <full_name>\BLW\Type\Event</full_name>
      <docblock line="37">
        <description>Core Event class.</description>
        <long-description>&lt;h4&gt;Notice:&lt;/h4&gt;

&lt;p&gt;All Events must either extend this class or
impliment the &lt;code&gt;\BLW\Interfaces\Event&lt;/code&gt; interface.

&lt;hr&gt;</long-description>
        <tag name="package" line="37" description="BLW\Core"/>
        <tag name="api" line="37" description="BLW"/>
        <tag name="since" line="37" description="0.1.0"/>
        <tag name="author" line="37" description="mAsT3RpEE" link="mailto:wotsyula@mast3rpee.tk"/>
        <tag name="link" line="37" description="BLW Library" link="http://mast3rpee.tk/projects/BLW/"/>
      </docblock>
      <property static="false" visibility="private" line="42" namespace="BLW\Type" package="BLW\Core">
        <name>$_Subject</name>
        <default>NULL</default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="42" description="&lt;p&gt;Subject of the current event.&lt;/p&gt;" type="mixed" variable="$Subject">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="47" namespace="BLW\Type" package="BLW\Core">
        <name>$_Properties</name>
        <default>NULL</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="47" description="&lt;p&gt;Subject of the current event.&lt;/p&gt;" type="mixed" variable="$Subject">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="55" package="BLW\Core">
        <name>__construct</name>
        <full_name>\BLW\Type\Event::__construct()</full_name>
        <docblock line="55">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;The subject of the event, usually an object.&lt;/p&gt;" type="mixed" variable="$Subject">
            <type>mixed</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Properties to generate in the event.&lt;/p&gt;" type="array" variable="$Properties">
            <type>array</type>
          </tag>
          <tag name="return" line="55" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$Subject</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0">
          <name>$Properties</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="73" package="BLW\Core">
        <name>GetSubject</name>
        <full_name>\BLW\Type\Event::GetSubject()</full_name>
        <docblock line="73">
          <description>Getter for subject property.</description>
          <long-description></long-description>
          <tag name="return" line="73" description="$subject The adaptor subject." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="83" package="BLW\Core">
        <name>__call</name>
        <full_name>\BLW\Type\Event::__call()</full_name>
        <docblock line="83">
          <description>Property functions methods.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="83" description="Overloaded method return value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="104" package="BLW\Core">
        <name>__get</name>
        <full_name>\BLW\Type\Event::__get()</full_name>
        <docblock line="104">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="Overloaded propery" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="115" package="BLW\Core">
        <name>__set</name>
        <full_name>\BLW\Type\Event::__set()</full_name>
        <docblock line="115">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="115" description="&lt;p&gt;Value to set property to.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="115" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="125" package="BLW\Core">
        <name>__isset</name>
        <full_name>\BLW\Type\Event::__isset()</full_name>
        <docblock line="125">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="125" description="Returns true if the dyanamic property exists." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="135" package="BLW\Core">
        <name>__unset</name>
        <full_name>\BLW\Type\Event::__unset()</full_name>
        <docblock line="135">
          <description>Dynamic properties.</description>
          <long-description></long-description>
          <tag name="param" line="135" description="&lt;p&gt;Property interacted with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="135" description="Overloaded propery" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="145" package="BLW\Core">
        <name>offsetExists</name>
        <full_name>\BLW\Type\Event::offsetExists()</full_name>
        <docblock line="145">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="145" description="&lt;p&gt;Offset to test.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="145" description="Returns &lt;code&gt;true&lt;/code&gt; if offset exists and &lt;code&gt;false&lt;/code&gt; if not." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="155" package="BLW\Core">
        <name>offsetGet</name>
        <full_name>\BLW\Type\Event::offsetGet()</full_name>
        <docblock line="155">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="155" description="&lt;p&gt;Offset to get.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="155" description="Returns &lt;code&gt;NULL&lt;/code&gt; if not found" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="166" package="BLW\Core">
        <name>offsetSet</name>
        <full_name>\BLW\Type\Event::offsetSet()</full_name>
        <docblock line="166">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="166" description="&lt;p&gt;Offset to set.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="param" line="166" description="&lt;p&gt;New value of offset.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="176" package="BLW\Core">
        <name>offsetUnset</name>
        <full_name>\BLW\Type\Event::offsetUnset()</full_name>
        <docblock line="176">
          <description>ArrayAccesss Interface.</description>
          <long-description></long-description>
          <tag name="param" line="176" description="&lt;p&gt;Offset to unset.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="176" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="186" package="BLW\Core">
        <name>__toString</name>
        <full_name>\BLW\Type\Event::__toString()</full_name>
        <docblock line="186">
          <description>All objects must have a string representation.</description>
          <long-description></long-description>
          <tag name="note" line="186" description="Default is the serialized form of the object."/>
          <tag name="return" line="186" description="String value of object." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="195" package="BLW\Core">
        <name>serialize</name>
        <full_name>\BLW\Type\Event::serialize()</full_name>
        <docblock line="195">
          <description>Serializable Interface.</description>
          <long-description></long-description>
          <tag name="return" line="195" description="Serialized data" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="205" package="BLW\Core">
        <name>unserialize</name>
        <full_name>\BLW\Type\Event::unserialize()</full_name>
        <docblock line="205">
          <description>Serializable Interface.</description>
          <long-description></long-description>
          <tag name="param" line="205" description="&lt;p&gt;Serialized object.&lt;/p&gt;" type="string" variable="$serialized">
            <type>string</type>
          </tag>
          <tag name="return" line="205" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0">
          <name>$serialized</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="216" package="BLW\Core">
        <name>current</name>
        <full_name>\BLW\Type\Event::current()</full_name>
        <docblock line="216">
          <description>Iterator interface.</description>
          <long-description></long-description>
          <tag name="return" line="216" description="Current value pointed to." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="225" package="BLW\Core">
        <name>key</name>
        <full_name>\BLW\Type\Event::key()</full_name>
        <docblock line="225">
          <description>Iterator interface.</description>
          <long-description></long-description>
          <tag name="return" line="225" description="Returns &lt;code&gt;scalar&lt;/code&gt; on success and &lt;code&gt;NULL&lt;/code&gt; on failure." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="234" package="BLW\Core">
        <name>next</name>
        <full_name>\BLW\Type\Event::next()</full_name>
        <docblock line="234">
          <description>Iterator interface.</description>
          <long-description></long-description>
          <tag name="return" line="234" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="243" package="BLW\Core">
        <name>rewind</name>
        <full_name>\BLW\Type\Event::rewind()</full_name>
        <docblock line="243">
          <description>Iterator interface.</description>
          <long-description></long-description>
          <tag name="return" line="243" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="252" package="BLW\Core">
        <name>valid</name>
        <full_name>\BLW\Type\Event::valid()</full_name>
        <docblock line="252">
          <description>Iterator interface.</description>
          <long-description></long-description>
          <tag name="return" line="252" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BLW\Type" line="261" package="BLW\Core">
        <name>count</name>
        <full_name>\BLW\Type\Event::count()</full_name>
        <docblock line="261">
          <description>Countable interface.</description>
          <long-description></long-description>
          <tag name="return" line="261" description="Number of items." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <package name="BLW" full_name="BLW">
    <package name="Core" full_name="BLW\Core"/>
  </package>
  <package name="Default" full_name="Default"/>
  <namespace name="global" full_name="global"/>
  <namespace name="BLW" full_name="BLW">
    <namespace name="Control" full_name="BLW\Control"/>
    <namespace name="Interfaces" full_name="BLW\Interfaces"/>
    <namespace name="Model" full_name="BLW\Model">
      <namespace name="Event" full_name="BLW\Model\Event"/>
    </namespace>
    <namespace name="Type" full_name="BLW\Type"/>
  </namespace>
  <namespace name="Guzzle" full_name="Guzzle">
    <namespace name="Http" full_name="Guzzle\Http"/>
  </namespace>
  <deprecated count="3"/>
</project>
